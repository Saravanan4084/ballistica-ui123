(self.webpackChunkballistica_web = self.webpackChunkballistica_web || []).push([
  [179],
  {
    255: ($a) => {
      function Sr(ja) {
        return Promise.resolve().then(() => {
          var Pi = new Error("Cannot find module '" + ja + "'");
          throw ((Pi.code = "MODULE_NOT_FOUND"), Pi);
        });
      }
      (Sr.keys = () => []), (Sr.resolve = Sr), (Sr.id = 255), ($a.exports = Sr);
    },
    690: ($a, Sr, ja) => {
      "use strict";
      function Pi(n) {
        return "function" == typeof n;
      }
      let Af = !1;
      const di = {
        Promise: void 0,
        set useDeprecatedSynchronousErrorHandling(n) {
          if (n) {
            const t = new Error();
            console.warn(
              "DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n" +
                t.stack
            );
          } else
            Af &&
              console.log(
                "RxJS: Back to a better error behavior. Thank you. <3"
              );
          Af = n;
        },
        get useDeprecatedSynchronousErrorHandling() {
          return Af;
        },
      };
      function Ys(n) {
        setTimeout(() => {
          throw n;
        }, 0);
      }
      const Hc = {
          closed: !0,
          next(n) {},
          error(n) {
            if (di.useDeprecatedSynchronousErrorHandling) throw n;
            Ys(n);
          },
          complete() {},
        },
        Tr = Array.isArray || ((n) => n && "number" == typeof n.length);
      function kf(n) {
        return null !== n && "object" == typeof n;
      }
      const $c = (() => {
        function n(t) {
          return (
            Error.call(this),
            (this.message = t
              ? `${t.length} errors occurred during unsubscription:\n${t
                  .map((e, i) => `${i + 1}) ${e.toString()}`)
                  .join("\n  ")}`
              : ""),
            (this.name = "UnsubscriptionError"),
            (this.errors = t),
            this
          );
        }
        return (n.prototype = Object.create(Error.prototype)), n;
      })();
      class Ve {
        constructor(t) {
          (this.closed = !1),
            (this._parentOrParents = null),
            (this._subscriptions = null),
            t && ((this._ctorUnsubscribe = !0), (this._unsubscribe = t));
        }
        unsubscribe() {
          let t;
          if (this.closed) return;
          let {
            _parentOrParents: e,
            _ctorUnsubscribe: i,
            _unsubscribe: r,
            _subscriptions: s,
          } = this;
          if (
            ((this.closed = !0),
            (this._parentOrParents = null),
            (this._subscriptions = null),
            e instanceof Ve)
          )
            e.remove(this);
          else if (null !== e)
            for (let o = 0; o < e.length; ++o) e[o].remove(this);
          if (Pi(r)) {
            i && (this._unsubscribe = void 0);
            try {
              r.call(this);
            } catch (o) {
              t = o instanceof $c ? jb(o.errors) : [o];
            }
          }
          if (Tr(s)) {
            let o = -1,
              a = s.length;
            for (; ++o < a; ) {
              const l = s[o];
              if (kf(l))
                try {
                  l.unsubscribe();
                } catch (c) {
                  (t = t || []),
                    c instanceof $c ? (t = t.concat(jb(c.errors))) : t.push(c);
                }
            }
          }
          if (t) throw new $c(t);
        }
        add(t) {
          let e = t;
          if (!t) return Ve.EMPTY;
          switch (typeof t) {
            case "function":
              e = new Ve(t);
            case "object":
              if (e === this || e.closed || "function" != typeof e.unsubscribe)
                return e;
              if (this.closed) return e.unsubscribe(), e;
              if (!(e instanceof Ve)) {
                const s = e;
                (e = new Ve()), (e._subscriptions = [s]);
              }
              break;
            default:
              throw new Error(
                "unrecognized teardown " + t + " added to Subscription."
              );
          }
          let { _parentOrParents: i } = e;
          if (null === i) e._parentOrParents = this;
          else if (i instanceof Ve) {
            if (i === this) return e;
            e._parentOrParents = [i, this];
          } else {
            if (-1 !== i.indexOf(this)) return e;
            i.push(this);
          }
          const r = this._subscriptions;
          return null === r ? (this._subscriptions = [e]) : r.push(e), e;
        }
        remove(t) {
          const e = this._subscriptions;
          if (e) {
            const i = e.indexOf(t);
            -1 !== i && e.splice(i, 1);
          }
        }
      }
      var n;
      function jb(n) {
        return n.reduce((t, e) => t.concat(e instanceof $c ? e.errors : e), []);
      }
      Ve.EMPTY = (((n = new Ve()).closed = !0), n);
      const jc =
        "function" == typeof Symbol
          ? Symbol("rxSubscriber")
          : "@@rxSubscriber_" + Math.random();
      class He extends Ve {
        constructor(t, e, i) {
          switch (
            (super(),
            (this.syncErrorValue = null),
            (this.syncErrorThrown = !1),
            (this.syncErrorThrowable = !1),
            (this.isStopped = !1),
            arguments.length)
          ) {
            case 0:
              this.destination = Hc;
              break;
            case 1:
              if (!t) {
                this.destination = Hc;
                break;
              }
              if ("object" == typeof t) {
                t instanceof He
                  ? ((this.syncErrorThrowable = t.syncErrorThrowable),
                    (this.destination = t),
                    t.add(this))
                  : ((this.syncErrorThrowable = !0),
                    (this.destination = new Ub(this, t)));
                break;
              }
            default:
              (this.syncErrorThrowable = !0),
                (this.destination = new Ub(this, t, e, i));
          }
        }
        [jc]() {
          return this;
        }
        static create(t, e, i) {
          const r = new He(t, e, i);
          return (r.syncErrorThrowable = !1), r;
        }
        next(t) {
          this.isStopped || this._next(t);
        }
        error(t) {
          this.isStopped || ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped || ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe());
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          this.destination.error(t), this.unsubscribe();
        }
        _complete() {
          this.destination.complete(), this.unsubscribe();
        }
        _unsubscribeAndRecycle() {
          const { _parentOrParents: t } = this;
          return (
            (this._parentOrParents = null),
            this.unsubscribe(),
            (this.closed = !1),
            (this.isStopped = !1),
            (this._parentOrParents = t),
            this
          );
        }
      }
      class Ub extends He {
        constructor(t, e, i, r) {
          super(), (this._parentSubscriber = t);
          let s,
            o = this;
          Pi(e)
            ? (s = e)
            : e &&
              ((s = e.next),
              (i = e.error),
              (r = e.complete),
              e !== Hc &&
                ((o = Object.create(e)),
                Pi(o.unsubscribe) && this.add(o.unsubscribe.bind(o)),
                (o.unsubscribe = this.unsubscribe.bind(this)))),
            (this._context = o),
            (this._next = s),
            (this._error = i),
            (this._complete = r);
        }
        next(t) {
          if (!this.isStopped && this._next) {
            const { _parentSubscriber: e } = this;
            di.useDeprecatedSynchronousErrorHandling && e.syncErrorThrowable
              ? this.__tryOrSetError(e, this._next, t) && this.unsubscribe()
              : this.__tryOrUnsub(this._next, t);
          }
        }
        error(t) {
          if (!this.isStopped) {
            const { _parentSubscriber: e } = this,
              { useDeprecatedSynchronousErrorHandling: i } = di;
            if (this._error)
              i && e.syncErrorThrowable
                ? (this.__tryOrSetError(e, this._error, t), this.unsubscribe())
                : (this.__tryOrUnsub(this._error, t), this.unsubscribe());
            else if (e.syncErrorThrowable)
              i ? ((e.syncErrorValue = t), (e.syncErrorThrown = !0)) : Ys(t),
                this.unsubscribe();
            else {
              if ((this.unsubscribe(), i)) throw t;
              Ys(t);
            }
          }
        }
        complete() {
          if (!this.isStopped) {
            const { _parentSubscriber: t } = this;
            if (this._complete) {
              const e = () => this._complete.call(this._context);
              di.useDeprecatedSynchronousErrorHandling && t.syncErrorThrowable
                ? (this.__tryOrSetError(t, e), this.unsubscribe())
                : (this.__tryOrUnsub(e), this.unsubscribe());
            } else this.unsubscribe();
          }
        }
        __tryOrUnsub(t, e) {
          try {
            t.call(this._context, e);
          } catch (i) {
            if ((this.unsubscribe(), di.useDeprecatedSynchronousErrorHandling))
              throw i;
            Ys(i);
          }
        }
        __tryOrSetError(t, e, i) {
          if (!di.useDeprecatedSynchronousErrorHandling)
            throw new Error("bad call");
          try {
            e.call(this._context, i);
          } catch (r) {
            return di.useDeprecatedSynchronousErrorHandling
              ? ((t.syncErrorValue = r), (t.syncErrorThrown = !0), !0)
              : (Ys(r), !0);
          }
          return !1;
        }
        _unsubscribe() {
          const { _parentSubscriber: t } = this;
          (this._context = null),
            (this._parentSubscriber = null),
            t.unsubscribe();
        }
      }
      const Ua =
        ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function Uc(n) {
        return n;
      }
      let Ce = (() => {
        class n {
          constructor(e) {
            (this._isScalar = !1), e && (this._subscribe = e);
          }
          lift(e) {
            const i = new n();
            return (i.source = this), (i.operator = e), i;
          }
          subscribe(e, i, r) {
            const { operator: s } = this,
              o = (function (n, t, e) {
                if (n) {
                  if (n instanceof He) return n;
                  if (n[jc]) return n[jc]();
                }
                return n || t || e ? new He(n, t, e) : new He(Hc);
              })(e, i, r);
            if (
              (o.add(
                s
                  ? s.call(o, this.source)
                  : this.source ||
                    (di.useDeprecatedSynchronousErrorHandling &&
                      !o.syncErrorThrowable)
                  ? this._subscribe(o)
                  : this._trySubscribe(o)
              ),
              di.useDeprecatedSynchronousErrorHandling &&
                o.syncErrorThrowable &&
                ((o.syncErrorThrowable = !1), o.syncErrorThrown))
            )
              throw o.syncErrorValue;
            return o;
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (i) {
              di.useDeprecatedSynchronousErrorHandling &&
                ((e.syncErrorThrown = !0), (e.syncErrorValue = i)),
                (function (n) {
                  for (; n; ) {
                    const { closed: t, destination: e, isStopped: i } = n;
                    if (t || i) return !1;
                    n = e && e instanceof He ? e : null;
                  }
                  return !0;
                })(e)
                  ? e.error(i)
                  : console.warn(i);
            }
          }
          forEach(e, i) {
            return new (i = Gb(i))((r, s) => {
              let o;
              o = this.subscribe(
                (a) => {
                  try {
                    e(a);
                  } catch (l) {
                    s(l), o && o.unsubscribe();
                  }
                },
                s,
                r
              );
            });
          }
          _subscribe(e) {
            const { source: i } = this;
            return i && i.subscribe(e);
          }
          [Ua]() {
            return this;
          }
          pipe(...e) {
            return 0 === e.length
              ? this
              : (function (n) {
                  return 0 === n.length
                    ? Uc
                    : 1 === n.length
                    ? n[0]
                    : function (e) {
                        return n.reduce((i, r) => r(i), e);
                      };
                })(e)(this);
          }
          toPromise(e) {
            return new (e = Gb(e))((i, r) => {
              let s;
              this.subscribe(
                (o) => (s = o),
                (o) => r(o),
                () => i(s)
              );
            });
          }
        }
        return (n.create = (t) => new n(t)), n;
      })();
      function Gb(n) {
        if ((n || (n = di.Promise || Promise), !n))
          throw new Error("no Promise impl found");
        return n;
      }
      const ns = (() => {
        function n() {
          return (
            Error.call(this),
            (this.message = "object unsubscribed"),
            (this.name = "ObjectUnsubscribedError"),
            this
          );
        }
        return (n.prototype = Object.create(Error.prototype)), n;
      })();
      class Wb extends Ve {
        constructor(t, e) {
          super(),
            (this.subject = t),
            (this.subscriber = e),
            (this.closed = !1);
        }
        unsubscribe() {
          if (this.closed) return;
          this.closed = !0;
          const t = this.subject,
            e = t.observers;
          if (
            ((this.subject = null),
            !e || 0 === e.length || t.isStopped || t.closed)
          )
            return;
          const i = e.indexOf(this.subscriber);
          -1 !== i && e.splice(i, 1);
        }
      }
      class qb extends He {
        constructor(t) {
          super(t), (this.destination = t);
        }
      }
      let O = (() => {
        class n extends Ce {
          constructor() {
            super(),
              (this.observers = []),
              (this.closed = !1),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          [jc]() {
            return new qb(this);
          }
          lift(e) {
            const i = new Yb(this, this);
            return (i.operator = e), i;
          }
          next(e) {
            if (this.closed) throw new ns();
            if (!this.isStopped) {
              const { observers: i } = this,
                r = i.length,
                s = i.slice();
              for (let o = 0; o < r; o++) s[o].next(e);
            }
          }
          error(e) {
            if (this.closed) throw new ns();
            (this.hasError = !0), (this.thrownError = e), (this.isStopped = !0);
            const { observers: i } = this,
              r = i.length,
              s = i.slice();
            for (let o = 0; o < r; o++) s[o].error(e);
            this.observers.length = 0;
          }
          complete() {
            if (this.closed) throw new ns();
            this.isStopped = !0;
            const { observers: e } = this,
              i = e.length,
              r = e.slice();
            for (let s = 0; s < i; s++) r[s].complete();
            this.observers.length = 0;
          }
          unsubscribe() {
            (this.isStopped = !0), (this.closed = !0), (this.observers = null);
          }
          _trySubscribe(e) {
            if (this.closed) throw new ns();
            return super._trySubscribe(e);
          }
          _subscribe(e) {
            if (this.closed) throw new ns();
            return this.hasError
              ? (e.error(this.thrownError), Ve.EMPTY)
              : this.isStopped
              ? (e.complete(), Ve.EMPTY)
              : (this.observers.push(e), new Wb(this, e));
          }
          asObservable() {
            const e = new Ce();
            return (e.source = this), e;
          }
        }
        return (n.create = (t, e) => new Yb(t, e)), n;
      })();
      class Yb extends O {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          const { destination: e } = this;
          e && e.next && e.next(t);
        }
        error(t) {
          const { destination: e } = this;
          e && e.error && this.destination.error(t);
        }
        complete() {
          const { destination: t } = this;
          t && t.complete && this.destination.complete();
        }
        _subscribe(t) {
          const { source: e } = this;
          return e ? this.source.subscribe(t) : Ve.EMPTY;
        }
      }
      function Ks(n) {
        return n && "function" == typeof n.schedule;
      }
      function Q(n, t) {
        return function (i) {
          if ("function" != typeof n)
            throw new TypeError(
              "argument is not a function. Are you looking for `mapTo()`?"
            );
          return i.lift(new iI(n, t));
        };
      }
      class iI {
        constructor(t, e) {
          (this.project = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new rI(t, this.project, this.thisArg));
        }
      }
      class rI extends He {
        constructor(t, e, i) {
          super(t),
            (this.project = e),
            (this.count = 0),
            (this.thisArg = i || this);
        }
        _next(t) {
          let e;
          try {
            e = this.project.call(this.thisArg, t, this.count++);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.destination.next(e);
        }
      }
      const Kb = (n) => (t) => {
          for (let e = 0, i = n.length; e < i && !t.closed; e++) t.next(n[e]);
          t.complete();
        },
        Ar =
          "function" == typeof Symbol && Symbol.iterator
            ? Symbol.iterator
            : "@@iterator",
        Jb = (n) => n && "number" == typeof n.length && "function" != typeof n;
      function Qb(n) {
        return (
          !!n && "function" != typeof n.subscribe && "function" == typeof n.then
        );
      }
      const Nf = (n) => {
        if (n && "function" == typeof n[Ua])
          return ((n) => (t) => {
            const e = n[Ua]();
            if ("function" != typeof e.subscribe)
              throw new TypeError(
                "Provided object does not correctly implement Symbol.observable"
              );
            return e.subscribe(t);
          })(n);
        if (Jb(n)) return Kb(n);
        if (Qb(n))
          return ((n) => (t) => (
            n
              .then(
                (e) => {
                  t.closed || (t.next(e), t.complete());
                },
                (e) => t.error(e)
              )
              .then(null, Ys),
            t
          ))(n);
        if (n && "function" == typeof n[Ar])
          return ((n) => (t) => {
            const e = n[Ar]();
            for (;;) {
              let i;
              try {
                i = e.next();
              } catch (r) {
                return t.error(r), t;
              }
              if (i.done) {
                t.complete();
                break;
              }
              if ((t.next(i.value), t.closed)) break;
            }
            return (
              "function" == typeof e.return &&
                t.add(() => {
                  e.return && e.return();
                }),
              t
            );
          })(n);
        {
          const e = `You provided ${
            kf(n) ? "an invalid object" : `'${n}'`
          } where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`;
          throw new TypeError(e);
        }
      };
      function Rf(n, t) {
        return new Ce((e) => {
          const i = new Ve();
          let r = 0;
          return (
            i.add(
              t.schedule(function () {
                r !== n.length
                  ? (e.next(n[r++]), e.closed || i.add(this.schedule()))
                  : e.complete();
              })
            ),
            i
          );
        });
      }
      function Pt(n, t) {
        return t
          ? (function (n, t) {
              if (null != n) {
                if (
                  (function (n) {
                    return n && "function" == typeof n[Ua];
                  })(n)
                )
                  return (function (n, t) {
                    return new Ce((e) => {
                      const i = new Ve();
                      return (
                        i.add(
                          t.schedule(() => {
                            const r = n[Ua]();
                            i.add(
                              r.subscribe({
                                next(s) {
                                  i.add(t.schedule(() => e.next(s)));
                                },
                                error(s) {
                                  i.add(t.schedule(() => e.error(s)));
                                },
                                complete() {
                                  i.add(t.schedule(() => e.complete()));
                                },
                              })
                            );
                          })
                        ),
                        i
                      );
                    });
                  })(n, t);
                if (Qb(n))
                  return (function (n, t) {
                    return new Ce((e) => {
                      const i = new Ve();
                      return (
                        i.add(
                          t.schedule(() =>
                            n.then(
                              (r) => {
                                i.add(
                                  t.schedule(() => {
                                    e.next(r),
                                      i.add(t.schedule(() => e.complete()));
                                  })
                                );
                              },
                              (r) => {
                                i.add(t.schedule(() => e.error(r)));
                              }
                            )
                          )
                        ),
                        i
                      );
                    });
                  })(n, t);
                if (Jb(n)) return Rf(n, t);
                if (
                  (function (n) {
                    return n && "function" == typeof n[Ar];
                  })(n) ||
                  "string" == typeof n
                )
                  return (function (n, t) {
                    if (!n) throw new Error("Iterable cannot be null");
                    return new Ce((e) => {
                      const i = new Ve();
                      let r;
                      return (
                        i.add(() => {
                          r && "function" == typeof r.return && r.return();
                        }),
                        i.add(
                          t.schedule(() => {
                            (r = n[Ar]()),
                              i.add(
                                t.schedule(function () {
                                  if (e.closed) return;
                                  let s, o;
                                  try {
                                    const a = r.next();
                                    (s = a.value), (o = a.done);
                                  } catch (a) {
                                    return void e.error(a);
                                  }
                                  o
                                    ? e.complete()
                                    : (e.next(s), this.schedule());
                                })
                              );
                          })
                        ),
                        i
                      );
                    });
                  })(n, t);
              }
              throw new TypeError(
                ((null !== n && typeof n) || n) + " is not observable"
              );
            })(n, t)
          : n instanceof Ce
          ? n
          : new Ce(Nf(n));
      }
      class Js extends He {
        constructor(t) {
          super(), (this.parent = t);
        }
        _next(t) {
          this.parent.notifyNext(t);
        }
        _error(t) {
          this.parent.notifyError(t), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(), this.unsubscribe();
        }
      }
      class Qs extends He {
        notifyNext(t) {
          this.destination.next(t);
        }
        notifyError(t) {
          this.destination.error(t);
        }
        notifyComplete() {
          this.destination.complete();
        }
      }
      function Xs(n, t) {
        if (t.closed) return;
        if (n instanceof Ce) return n.subscribe(t);
        let e;
        try {
          e = Nf(n)(t);
        } catch (i) {
          t.error(i);
        }
        return e;
      }
      function Ft(n, t, e = Number.POSITIVE_INFINITY) {
        return "function" == typeof t
          ? (i) =>
              i.pipe(
                Ft((r, s) => Pt(n(r, s)).pipe(Q((o, a) => t(r, o, s, a))), e)
              )
          : ("number" == typeof t && (e = t), (i) => i.lift(new gI(n, e)));
      }
      class gI {
        constructor(t, e = Number.POSITIVE_INFINITY) {
          (this.project = t), (this.concurrent = e);
        }
        call(t, e) {
          return e.subscribe(new mI(t, this.project, this.concurrent));
        }
      }
      class mI extends Qs {
        constructor(t, e, i = Number.POSITIVE_INFINITY) {
          super(t),
            (this.project = e),
            (this.concurrent = i),
            (this.hasCompleted = !1),
            (this.buffer = []),
            (this.active = 0),
            (this.index = 0);
        }
        _next(t) {
          this.active < this.concurrent
            ? this._tryNext(t)
            : this.buffer.push(t);
        }
        _tryNext(t) {
          let e;
          const i = this.index++;
          try {
            e = this.project(t, i);
          } catch (r) {
            return void this.destination.error(r);
          }
          this.active++, this._innerSub(e);
        }
        _innerSub(t) {
          const e = new Js(this),
            i = this.destination;
          i.add(e);
          const r = Xs(t, e);
          r !== e && i.add(r);
        }
        _complete() {
          (this.hasCompleted = !0),
            0 === this.active &&
              0 === this.buffer.length &&
              this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(t) {
          this.destination.next(t);
        }
        notifyComplete() {
          const t = this.buffer;
          this.active--,
            t.length > 0
              ? this._next(t.shift())
              : 0 === this.active &&
                this.hasCompleted &&
                this.destination.complete();
        }
      }
      function za(n = Number.POSITIVE_INFINITY) {
        return Ft(Uc, n);
      }
      function Ga(n, t) {
        return t ? Rf(n, t) : new Ce(Kb(n));
      }
      function Tn(...n) {
        let t = Number.POSITIVE_INFINITY,
          e = null,
          i = n[n.length - 1];
        return (
          Ks(i)
            ? ((e = n.pop()),
              n.length > 1 &&
                "number" == typeof n[n.length - 1] &&
                (t = n.pop()))
            : "number" == typeof i && (t = n.pop()),
          null === e && 1 === n.length && n[0] instanceof Ce
            ? n[0]
            : za(t)(Ga(n, e))
        );
      }
      function If() {
        return function (t) {
          return t.lift(new _I(t));
        };
      }
      class _I {
        constructor(t) {
          this.connectable = t;
        }
        call(t, e) {
          const { connectable: i } = this;
          i._refCount++;
          const r = new yI(t, i),
            s = e.subscribe(r);
          return r.closed || (r.connection = i.connect()), s;
        }
      }
      class yI extends He {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _unsubscribe() {
          const { connectable: t } = this;
          if (!t) return void (this.connection = null);
          this.connectable = null;
          const e = t._refCount;
          if (e <= 0) return void (this.connection = null);
          if (((t._refCount = e - 1), e > 1))
            return void (this.connection = null);
          const { connection: i } = this,
            r = t._connection;
          (this.connection = null), r && (!i || r === i) && r.unsubscribe();
        }
      }
      class Xb extends Ce {
        constructor(t, e) {
          super(),
            (this.source = t),
            (this.subjectFactory = e),
            (this._refCount = 0),
            (this._isComplete = !1);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (
            (!t || t.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        connect() {
          let t = this._connection;
          return (
            t ||
              ((this._isComplete = !1),
              (t = this._connection = new Ve()),
              t.add(this.source.subscribe(new vI(this.getSubject(), this))),
              t.closed && ((this._connection = null), (t = Ve.EMPTY))),
            t
          );
        }
        refCount() {
          return If()(this);
        }
      }
      const bI = (() => {
        const n = Xb.prototype;
        return {
          operator: { value: null },
          _refCount: { value: 0, writable: !0 },
          _subject: { value: null, writable: !0 },
          _connection: { value: null, writable: !0 },
          _subscribe: { value: n._subscribe },
          _isComplete: { value: n._isComplete, writable: !0 },
          getSubject: { value: n.getSubject },
          connect: { value: n.connect },
          refCount: { value: n.refCount },
        };
      })();
      class vI extends qb {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _error(t) {
          this._unsubscribe(), super._error(t);
        }
        _complete() {
          (this.connectable._isComplete = !0),
            this._unsubscribe(),
            super._complete();
        }
        _unsubscribe() {
          const t = this.connectable;
          if (t) {
            this.connectable = null;
            const e = t._connection;
            (t._refCount = 0),
              (t._subject = null),
              (t._connection = null),
              e && e.unsubscribe();
          }
        }
      }
      function xf(n, t) {
        return function (i) {
          let r;
          if (
            ((r =
              "function" == typeof n
                ? n
                : function () {
                    return n;
                  }),
            "function" == typeof t)
          )
            return i.lift(new CI(r, t));
          const s = Object.create(i, bI);
          return (s.source = i), (s.subjectFactory = r), s;
        };
      }
      class CI {
        constructor(t, e) {
          (this.subjectFactory = t), (this.selector = e);
        }
        call(t, e) {
          const { selector: i } = this,
            r = this.subjectFactory(),
            s = i(r).subscribe(t);
          return s.add(e.subscribe(r)), s;
        }
      }
      function DI() {
        return new O();
      }
      function $e(n) {
        for (let t in n) if (n[t] === $e) return t;
        throw Error("Could not find renamed property on target object.");
      }
      function Of(n, t) {
        for (const e in t)
          t.hasOwnProperty(e) && !n.hasOwnProperty(e) && (n[e] = t[e]);
      }
      function De(n) {
        if ("string" == typeof n) return n;
        if (Array.isArray(n)) return "[" + n.map(De).join(", ") + "]";
        if (null == n) return "" + n;
        if (n.overriddenName) return `${n.overriddenName}`;
        if (n.name) return `${n.name}`;
        const t = n.toString();
        if (null == t) return "" + t;
        const e = t.indexOf("\n");
        return -1 === e ? t : t.substring(0, e);
      }
      function Pf(n, t) {
        return null == n || "" === n
          ? null === t
            ? ""
            : t
          : null == t || "" === t
          ? n
          : n + " " + t;
      }
      const EI = $e({ __forward_ref__: $e });
      function Ee(n) {
        return (
          (n.__forward_ref__ = Ee),
          (n.toString = function () {
            return De(this());
          }),
          n
        );
      }
      function ee(n) {
        return ev(n) ? n() : n;
      }
      function ev(n) {
        return (
          "function" == typeof n &&
          n.hasOwnProperty(EI) &&
          n.__forward_ref__ === Ee
        );
      }
      class is extends Error {
        constructor(t, e) {
          super(
            (function (n, t) {
              return `${n ? `NG0${n}: ` : ""}${t}`;
            })(t, e)
          ),
            (this.code = t);
        }
      }
      function ge(n) {
        return "string" == typeof n ? n : null == n ? "" : String(n);
      }
      function dn(n) {
        return "function" == typeof n
          ? n.name || n.toString()
          : "object" == typeof n && null != n && "function" == typeof n.type
          ? n.type.name || n.type.toString()
          : ge(n);
      }
      function zc(n, t) {
        const e = t ? ` in ${t}` : "";
        throw new is("201", `No provider for ${dn(n)} found${e}`);
      }
      function kn(n, t) {
        null == n &&
          (function (n, t, e, i) {
            throw new Error(
              `ASSERTION ERROR: ${n}` +
                (null == i ? "" : ` [Expected=> ${e} ${i} ${t} <=Actual]`)
            );
          })(t, n, null, "!=");
      }
      function A(n) {
        return {
          token: n.token,
          providedIn: n.providedIn || null,
          factory: n.factory,
          value: void 0,
        };
      }
      function W(n) {
        return { providers: n.providers || [], imports: n.imports || [] };
      }
      function rr(n) {
        return tv(n, Gc) || tv(n, iv);
      }
      function tv(n, t) {
        return n.hasOwnProperty(t) ? n[t] : null;
      }
      function nv(n) {
        return n && (n.hasOwnProperty(Lf) || n.hasOwnProperty(RI))
          ? n[Lf]
          : null;
      }
      const Gc = $e({ ɵprov: $e }),
        Lf = $e({ ɵinj: $e }),
        iv = $e({ ngInjectableDef: $e }),
        RI = $e({ ngInjectorDef: $e });
      var te = (() => (
        ((te = te || {})[(te.Default = 0)] = "Default"),
        (te[(te.Host = 1)] = "Host"),
        (te[(te.Self = 2)] = "Self"),
        (te[(te.SkipSelf = 4)] = "SkipSelf"),
        (te[(te.Optional = 8)] = "Optional"),
        te
      ))();
      let Vf;
      function kr(n) {
        const t = Vf;
        return (Vf = n), t;
      }
      function rv(n, t, e) {
        const i = rr(n);
        return i && "root" == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : e & te.Optional
          ? null
          : void 0 !== t
          ? t
          : void zc(De(n), "Injector");
      }
      function Nr(n) {
        return { toString: n }.toString();
      }
      var zn = (() => (
          ((zn = zn || {})[(zn.OnPush = 0)] = "OnPush"),
          (zn[(zn.Default = 1)] = "Default"),
          zn
        ))(),
        vt = (() => (
          ((vt = vt || {})[(vt.Emulated = 0)] = "Emulated"),
          (vt[(vt.None = 2)] = "None"),
          (vt[(vt.ShadowDom = 3)] = "ShadowDom"),
          vt
        ))();
      const xI = "undefined" != typeof globalThis && globalThis,
        OI = "undefined" != typeof window && window,
        PI =
          "undefined" != typeof self &&
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        FI = "undefined" != typeof global && global,
        ze = xI || FI || OI || PI,
        Zs = {},
        qe = [],
        Wc = $e({ ɵcmp: $e }),
        Bf = $e({ ɵdir: $e }),
        Hf = $e({ ɵpipe: $e }),
        sv = $e({ ɵmod: $e }),
        LI = $e({ ɵloc: $e }),
        sr = $e({ ɵfac: $e }),
        Wa = $e({ __NG_ELEMENT_ID__: $e });
      let VI = 0;
      function ne(n) {
        return Nr(() => {
          const e = {},
            i = {
              type: n.type,
              providersResolver: null,
              decls: n.decls,
              vars: n.vars,
              factory: null,
              template: n.template || null,
              consts: n.consts || null,
              ngContentSelectors: n.ngContentSelectors,
              hostBindings: n.hostBindings || null,
              hostVars: n.hostVars || 0,
              hostAttrs: n.hostAttrs || null,
              contentQueries: n.contentQueries || null,
              declaredInputs: e,
              inputs: null,
              outputs: null,
              exportAs: n.exportAs || null,
              onPush: n.changeDetection === zn.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: n.selectors || qe,
              viewQuery: n.viewQuery || null,
              features: n.features || null,
              data: n.data || {},
              encapsulation: n.encapsulation || vt.Emulated,
              id: "c",
              styles: n.styles || qe,
              _: null,
              setInput: null,
              schemas: n.schemas || null,
              tView: null,
            },
            r = n.directives,
            s = n.features,
            o = n.pipes;
          return (
            (i.id += VI++),
            (i.inputs = cv(n.inputs, e)),
            (i.outputs = cv(n.outputs)),
            s && s.forEach((a) => a(i)),
            (i.directiveDefs = r
              ? () => ("function" == typeof r ? r() : r).map(ov)
              : null),
            (i.pipeDefs = o
              ? () => ("function" == typeof o ? o() : o).map(av)
              : null),
            i
          );
        });
      }
      function ov(n) {
        return (
          hn(n) ||
          (function (n) {
            return n[Bf] || null;
          })(n)
        );
      }
      function av(n) {
        return (function (n) {
          return n[Hf] || null;
        })(n);
      }
      const lv = {};
      function K(n) {
        return Nr(() => {
          const t = {
            type: n.type,
            bootstrap: n.bootstrap || qe,
            declarations: n.declarations || qe,
            imports: n.imports || qe,
            exports: n.exports || qe,
            transitiveCompileScopes: null,
            schemas: n.schemas || null,
            id: n.id || null,
          };
          return null != n.id && (lv[n.id] = n.type), t;
        });
      }
      function cv(n, t) {
        if (null == n) return Zs;
        const e = {};
        for (const i in n)
          if (n.hasOwnProperty(i)) {
            let r = n[i],
              s = r;
            Array.isArray(r) && ((s = r[1]), (r = r[0])),
              (e[r] = i),
              t && (t[r] = s);
          }
        return e;
      }
      const M = ne;
      function wn(n) {
        return {
          type: n.type,
          name: n.name,
          factory: null,
          pure: !1 !== n.pure,
          onDestroy: n.type.prototype.ngOnDestroy || null,
        };
      }
      function hn(n) {
        return n[Wc] || null;
      }
      function Gn(n, t) {
        const e = n[sv] || null;
        if (!e && !0 === t)
          throw new Error(`Type ${De(n)} does not have '\u0275mod' property.`);
        return e;
      }
      function Fi(n) {
        return Array.isArray(n) && "object" == typeof n[1];
      }
      function fi(n) {
        return Array.isArray(n) && !0 === n[1];
      }
      function Uf(n) {
        return 0 != (8 & n.flags);
      }
      function Jc(n) {
        return 2 == (2 & n.flags);
      }
      function Qc(n) {
        return 1 == (1 & n.flags);
      }
      function pi(n) {
        return null !== n.template;
      }
      function GI(n) {
        return 0 != (512 & n[2]);
      }
      function ls(n, t) {
        return n.hasOwnProperty(sr) ? n[sr] : null;
      }
      class dv {
        constructor(t, e, i) {
          (this.previousValue = t),
            (this.currentValue = e),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Me() {
        return hv;
      }
      function hv(n) {
        return n.type.prototype.ngOnChanges && (n.setInput = KI), YI;
      }
      function YI() {
        const n = pv(this),
          t = null == n ? void 0 : n.current;
        if (t) {
          const e = n.previous;
          if (e === Zs) n.previous = t;
          else for (let i in t) e[i] = t[i];
          (n.current = null), this.ngOnChanges(t);
        }
      }
      function KI(n, t, e, i) {
        const r =
            pv(n) ||
            (function (n, t) {
              return (n[fv] = t);
            })(n, { previous: Zs, current: null }),
          s = r.current || (r.current = {}),
          o = r.previous,
          a = this.declaredInputs[e],
          l = o[a];
        (s[a] = new dv(l && l.currentValue, t, o === Zs)), (n[i] = t);
      }
      Me.ngInherit = !0;
      const fv = "__ngSimpleChanges__";
      function pv(n) {
        return n[fv] || null;
      }
      const gv = "http://www.w3.org/2000/svg";
      let Wf;
      function ht(n) {
        return !!n.listen;
      }
      const _v = {
        createRenderer: (n, t) =>
          void 0 !== Wf
            ? Wf
            : "undefined" != typeof document
            ? document
            : void 0,
      };
      function wt(n) {
        for (; Array.isArray(n); ) n = n[0];
        return n;
      }
      function Xc(n, t) {
        return wt(t[n]);
      }
      function Yn(n, t) {
        return wt(t[n.index]);
      }
      function Yf(n, t) {
        return n.data[t];
      }
      function ro(n, t) {
        return n[t];
      }
      function Rn(n, t) {
        const e = t[n];
        return Fi(e) ? e : e[0];
      }
      function yv(n) {
        return 4 == (4 & n[2]);
      }
      function Kf(n) {
        return 128 == (128 & n[2]);
      }
      function Ir(n, t) {
        return null == t ? null : n[t];
      }
      function bv(n) {
        n[18] = 0;
      }
      function Jf(n, t) {
        n[5] += t;
        let e = n,
          i = n[3];
        for (
          ;
          null !== i && ((1 === t && 1 === e[5]) || (-1 === t && 0 === e[5]));

        )
          (i[5] += t), (e = i), (i = i[3]);
      }
      const ue = {
        lFrame: Tv(null),
        bindingsEnabled: !0,
        isInCheckNoChangesMode: !1,
      };
      function vv() {
        return ue.bindingsEnabled;
      }
      function k() {
        return ue.lFrame.lView;
      }
      function xe() {
        return ue.lFrame.tView;
      }
      function ce(n) {
        return (ue.lFrame.contextLView = n), n[8];
      }
      function At() {
        let n = wv();
        for (; null !== n && 64 === n.type; ) n = n.parent;
        return n;
      }
      function wv() {
        return ue.lFrame.currentTNode;
      }
      function Li(n, t) {
        const e = ue.lFrame;
        (e.currentTNode = n), (e.isParent = t);
      }
      function Qf() {
        return ue.lFrame.isParent;
      }
      function Xf() {
        ue.lFrame.isParent = !1;
      }
      function Zc() {
        return ue.isInCheckNoChangesMode;
      }
      function eu(n) {
        ue.isInCheckNoChangesMode = n;
      }
      function fn() {
        const n = ue.lFrame;
        let t = n.bindingRootIndex;
        return (
          -1 === t && (t = n.bindingRootIndex = n.tView.bindingStartIndex), t
        );
      }
      function so() {
        return ue.lFrame.bindingIndex++;
      }
      function or(n) {
        const t = ue.lFrame,
          e = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + n), e;
      }
      function ux(n, t) {
        const e = ue.lFrame;
        (e.bindingIndex = e.bindingRootIndex = n), Zf(t);
      }
      function Zf(n) {
        ue.lFrame.currentDirectiveIndex = n;
      }
      function ep(n) {
        const t = ue.lFrame.currentDirectiveIndex;
        return -1 === t ? null : n[t];
      }
      function Ev() {
        return ue.lFrame.currentQueryIndex;
      }
      function tp(n) {
        ue.lFrame.currentQueryIndex = n;
      }
      function hx(n) {
        const t = n[1];
        return 2 === t.type ? t.declTNode : 1 === t.type ? n[6] : null;
      }
      function Mv(n, t, e) {
        if (e & te.SkipSelf) {
          let r = t,
            s = n;
          for (
            ;
            !((r = r.parent),
            null !== r ||
              e & te.Host ||
              ((r = hx(s)), null === r || ((s = s[15]), 10 & r.type)));

          );
          if (null === r) return !1;
          (t = r), (n = s);
        }
        const i = (ue.lFrame = Sv());
        return (i.currentTNode = t), (i.lView = n), !0;
      }
      function tu(n) {
        const t = Sv(),
          e = n[1];
        (ue.lFrame = t),
          (t.currentTNode = e.firstChild),
          (t.lView = n),
          (t.tView = e),
          (t.contextLView = n),
          (t.bindingIndex = e.bindingStartIndex),
          (t.inI18n = !1);
      }
      function Sv() {
        const n = ue.lFrame,
          t = null === n ? null : n.child;
        return null === t ? Tv(n) : t;
      }
      function Tv(n) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: n,
          child: null,
          inI18n: !1,
        };
        return null !== n && (n.child = t), t;
      }
      function Av() {
        const n = ue.lFrame;
        return (
          (ue.lFrame = n.parent), (n.currentTNode = null), (n.lView = null), n
        );
      }
      const kv = Av;
      function nu() {
        const n = Av();
        (n.isParent = !0),
          (n.tView = null),
          (n.selectedIndex = -1),
          (n.contextLView = null),
          (n.elementDepthCount = 0),
          (n.currentDirectiveIndex = -1),
          (n.currentNamespace = null),
          (n.bindingRootIndex = -1),
          (n.bindingIndex = -1),
          (n.currentQueryIndex = 0);
      }
      function pn() {
        return ue.lFrame.selectedIndex;
      }
      function xr(n) {
        ue.lFrame.selectedIndex = n;
      }
      function ft() {
        const n = ue.lFrame;
        return Yf(n.tView, n.selectedIndex);
      }
      function oo() {
        ue.lFrame.currentNamespace = gv;
      }
      function np() {
        ue.lFrame.currentNamespace = null;
      }
      function iu(n, t) {
        for (let e = t.directiveStart, i = t.directiveEnd; e < i; e++) {
          const s = n.data[e].type.prototype,
            {
              ngAfterContentInit: o,
              ngAfterContentChecked: a,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: u,
            } = s;
          o && (n.contentHooks || (n.contentHooks = [])).push(-e, o),
            a &&
              ((n.contentHooks || (n.contentHooks = [])).push(e, a),
              (n.contentCheckHooks || (n.contentCheckHooks = [])).push(e, a)),
            l && (n.viewHooks || (n.viewHooks = [])).push(-e, l),
            c &&
              ((n.viewHooks || (n.viewHooks = [])).push(e, c),
              (n.viewCheckHooks || (n.viewCheckHooks = [])).push(e, c)),
            null != u && (n.destroyHooks || (n.destroyHooks = [])).push(e, u);
        }
      }
      function ru(n, t, e) {
        Nv(n, t, 3, e);
      }
      function su(n, t, e, i) {
        (3 & n[2]) === e && Nv(n, t, e, i);
      }
      function ip(n, t) {
        let e = n[2];
        (3 & e) === t && ((e &= 2047), (e += 1), (n[2] = e));
      }
      function Nv(n, t, e, i) {
        const s = null != i ? i : -1,
          o = t.length - 1;
        let a = 0;
        for (let l = void 0 !== i ? 65535 & n[18] : 0; l < o; l++)
          if ("number" == typeof t[l + 1]) {
            if (((a = t[l]), null != i && a >= i)) break;
          } else
            t[l] < 0 && (n[18] += 65536),
              (a < s || -1 == s) &&
                (bx(n, e, t, l), (n[18] = (4294901760 & n[18]) + l + 2)),
              l++;
      }
      function bx(n, t, e, i) {
        const r = e[i] < 0,
          s = e[i + 1],
          a = n[r ? -e[i] : e[i]];
        if (r) {
          if (n[2] >> 11 < n[18] >> 16 && (3 & n[2]) === t) {
            n[2] += 2048;
            try {
              s.call(a);
            } finally {
            }
          }
        } else
          try {
            s.call(a);
          } finally {
          }
      }
      class Qa {
        constructor(t, e, i) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = i);
        }
      }
      function ou(n, t, e) {
        const i = ht(n);
        let r = 0;
        for (; r < e.length; ) {
          const s = e[r];
          if ("number" == typeof s) {
            if (0 !== s) break;
            r++;
            const o = e[r++],
              a = e[r++],
              l = e[r++];
            i ? n.setAttribute(t, a, l, o) : t.setAttributeNS(o, a, l);
          } else {
            const o = s,
              a = e[++r];
            sp(o)
              ? i && n.setProperty(t, o, a)
              : i
              ? n.setAttribute(t, o, a)
              : t.setAttribute(o, a),
              r++;
          }
        }
        return r;
      }
      function Rv(n) {
        return 3 === n || 4 === n || 6 === n;
      }
      function sp(n) {
        return 64 === n.charCodeAt(0);
      }
      function au(n, t) {
        if (null !== t && 0 !== t.length)
          if (null === n || 0 === n.length) n = t.slice();
          else {
            let e = -1;
            for (let i = 0; i < t.length; i++) {
              const r = t[i];
              "number" == typeof r
                ? (e = r)
                : 0 === e ||
                  Iv(n, e, r, null, -1 === e || 2 === e ? t[++i] : null);
            }
          }
        return n;
      }
      function Iv(n, t, e, i, r) {
        let s = 0,
          o = n.length;
        if (-1 === t) o = -1;
        else
          for (; s < n.length; ) {
            const a = n[s++];
            if ("number" == typeof a) {
              if (a === t) {
                o = -1;
                break;
              }
              if (a > t) {
                o = s - 1;
                break;
              }
            }
          }
        for (; s < n.length; ) {
          const a = n[s];
          if ("number" == typeof a) break;
          if (a === e) {
            if (null === i) return void (null !== r && (n[s + 1] = r));
            if (i === n[s + 1]) return void (n[s + 2] = r);
          }
          s++, null !== i && s++, null !== r && s++;
        }
        -1 !== o && (n.splice(o, 0, t), (s = o + 1)),
          n.splice(s++, 0, e),
          null !== i && n.splice(s++, 0, i),
          null !== r && n.splice(s++, 0, r);
      }
      function xv(n) {
        return -1 !== n;
      }
      function ao(n) {
        return 32767 & n;
      }
      function lo(n, t) {
        let e = (function (n) {
            return n >> 16;
          })(n),
          i = t;
        for (; e > 0; ) (i = i[15]), e--;
        return i;
      }
      let op = !0;
      function lu(n) {
        const t = op;
        return (op = n), t;
      }
      let Mx = 0;
      function Za(n, t) {
        const e = lp(n, t);
        if (-1 !== e) return e;
        const i = t[1];
        i.firstCreatePass &&
          ((n.injectorIndex = t.length),
          ap(i.data, n),
          ap(t, null),
          ap(i.blueprint, null));
        const r = cu(n, t),
          s = n.injectorIndex;
        if (xv(r)) {
          const o = ao(r),
            a = lo(r, t),
            l = a[1].data;
          for (let c = 0; c < 8; c++) t[s + c] = a[o + c] | l[o + c];
        }
        return (t[s + 8] = r), s;
      }
      function ap(n, t) {
        n.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function lp(n, t) {
        return -1 === n.injectorIndex ||
          (n.parent && n.parent.injectorIndex === n.injectorIndex) ||
          null === t[n.injectorIndex + 8]
          ? -1
          : n.injectorIndex;
      }
      function cu(n, t) {
        if (n.parent && -1 !== n.parent.injectorIndex)
          return n.parent.injectorIndex;
        let e = 0,
          i = null,
          r = t;
        for (; null !== r; ) {
          const s = r[1],
            o = s.type;
          if (((i = 2 === o ? s.declTNode : 1 === o ? r[6] : null), null === i))
            return -1;
          if ((e++, (r = r[15]), -1 !== i.injectorIndex))
            return i.injectorIndex | (e << 16);
        }
        return -1;
      }
      function uu(n, t, e) {
        !(function (n, t, e) {
          let i;
          "string" == typeof e
            ? (i = e.charCodeAt(0) || 0)
            : e.hasOwnProperty(Wa) && (i = e[Wa]),
            null == i && (i = e[Wa] = Mx++);
          const r = 255 & i;
          t.data[n + (r >> 5)] |= 1 << r;
        })(n, t, e);
      }
      function Fv(n, t, e) {
        if (e & te.Optional) return n;
        zc(t, "NodeInjector");
      }
      function Lv(n, t, e, i) {
        if (
          (e & te.Optional && void 0 === i && (i = null),
          0 == (e & (te.Self | te.Host)))
        ) {
          const r = n[9],
            s = kr(void 0);
          try {
            return r ? r.get(t, i, e & te.Optional) : rv(t, i, e & te.Optional);
          } finally {
            kr(s);
          }
        }
        return Fv(i, t, e);
      }
      function Vv(n, t, e, i = te.Default, r) {
        if (null !== n) {
          const s = (function (n) {
            if ("string" == typeof n) return n.charCodeAt(0) || 0;
            const t = n.hasOwnProperty(Wa) ? n[Wa] : void 0;
            return "number" == typeof t ? (t >= 0 ? 255 & t : Ax) : t;
          })(e);
          if ("function" == typeof s) {
            if (!Mv(t, n, i)) return i & te.Host ? Fv(r, e, i) : Lv(t, e, i, r);
            try {
              const o = s(i);
              if (null != o || i & te.Optional) return o;
              zc(e);
            } finally {
              kv();
            }
          } else if ("number" == typeof s) {
            let o = null,
              a = lp(n, t),
              l = -1,
              c = i & te.Host ? t[16][6] : null;
            for (
              (-1 === a || i & te.SkipSelf) &&
              ((l = -1 === a ? cu(n, t) : t[a + 8]),
              -1 !== l && $v(i, !1)
                ? ((o = t[1]), (a = ao(l)), (t = lo(l, t)))
                : (a = -1));
              -1 !== a;

            ) {
              const u = t[1];
              if (Hv(s, a, u.data)) {
                const d = kx(a, t, e, o, i, c);
                if (d !== Bv) return d;
              }
              (l = t[a + 8]),
                -1 !== l && $v(i, t[1].data[a + 8] === c) && Hv(s, a, t)
                  ? ((o = u), (a = ao(l)), (t = lo(l, t)))
                  : (a = -1);
            }
          }
        }
        return Lv(t, e, i, r);
      }
      const Bv = {};
      function Ax() {
        return new co(At(), k());
      }
      function kx(n, t, e, i, r, s) {
        const o = t[1],
          a = o.data[n + 8],
          u = du(
            a,
            o,
            e,
            null == i ? Jc(a) && op : i != o && 0 != (3 & a.type),
            r & te.Host && s === a
          );
        return null !== u ? el(t, o, u, a) : Bv;
      }
      function du(n, t, e, i, r) {
        const s = n.providerIndexes,
          o = t.data,
          a = 1048575 & s,
          l = n.directiveStart,
          u = s >> 20,
          h = r ? a + u : n.directiveEnd;
        for (let p = i ? a : a + u; p < h; p++) {
          const g = o[p];
          if ((p < l && e === g) || (p >= l && g.type === e)) return p;
        }
        if (r) {
          const p = o[l];
          if (p && pi(p) && p.type === e) return l;
        }
        return null;
      }
      function el(n, t, e, i) {
        let r = n[e];
        const s = t.data;
        if (
          (function (n) {
            return n instanceof Qa;
          })(r)
        ) {
          const o = r;
          o.resolving &&
            (function (n, t) {
              throw new is(
                "200",
                `Circular dependency in DI detected for ${n}`
              );
            })(dn(s[e]));
          const a = lu(o.canSeeViewProviders);
          o.resolving = !0;
          const l = o.injectImpl ? kr(o.injectImpl) : null;
          Mv(n, i, te.Default);
          try {
            (r = n[e] = o.factory(void 0, s, n, i)),
              t.firstCreatePass &&
                e >= i.directiveStart &&
                (function (n, t, e) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: r,
                    ngDoCheck: s,
                  } = t.type.prototype;
                  if (i) {
                    const o = hv(t);
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(n, o),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(n, o);
                  }
                  r &&
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(0 - n, r),
                    s &&
                      ((e.preOrderHooks || (e.preOrderHooks = [])).push(n, s),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(n, s));
                })(e, s[e], t);
          } finally {
            null !== l && kr(l), lu(a), (o.resolving = !1), kv();
          }
        }
        return r;
      }
      function Hv(n, t, e) {
        return !!(e[t + (n >> 5)] & (1 << n));
      }
      function $v(n, t) {
        return !(n & te.Self || (n & te.Host && t));
      }
      class co {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e) {
          return Vv(this._tNode, this._lView, t, void 0, e);
        }
      }
      function Te(n) {
        return Nr(() => {
          const t = n.prototype.constructor,
            e = t[sr] || cp(t),
            i = Object.prototype;
          let r = Object.getPrototypeOf(n.prototype).constructor;
          for (; r && r !== i; ) {
            const s = r[sr] || cp(r);
            if (s && s !== e) return s;
            r = Object.getPrototypeOf(r);
          }
          return (s) => new s();
        });
      }
      function cp(n) {
        return ev(n)
          ? () => {
              const t = cp(ee(n));
              return t && t();
            }
          : ls(n);
      }
      function gi(n) {
        return (function (n, t) {
          if ("class" === t) return n.classes;
          if ("style" === t) return n.styles;
          const e = n.attrs;
          if (e) {
            const i = e.length;
            let r = 0;
            for (; r < i; ) {
              const s = e[r];
              if (Rv(s)) break;
              if (0 === s) r += 2;
              else if ("number" == typeof s)
                for (r++; r < i && "string" == typeof e[r]; ) r++;
              else {
                if (s === t) return e[r + 1];
                r += 2;
              }
            }
          }
          return null;
        })(At(), n);
      }
      const ho = "__parameters__";
      function cs(n, t, e) {
        return Nr(() => {
          const i = (function (n) {
            return function (...e) {
              if (n) {
                const i = n(...e);
                for (const r in i) this[r] = i[r];
              }
            };
          })(t);
          function r(...s) {
            if (this instanceof r) return i.apply(this, s), this;
            const o = new r(...s);
            return (a.annotation = o), a;
            function a(l, c, u) {
              const d = l.hasOwnProperty(ho)
                ? l[ho]
                : Object.defineProperty(l, ho, { value: [] })[ho];
              for (; d.length <= u; ) d.push(null);
              return (d[u] = d[u] || []).push(o), l;
            }
          }
          return (
            e && (r.prototype = Object.create(e.prototype)),
            (r.prototype.ngMetadataName = n),
            (r.annotationCls = r),
            r
          );
        });
      }
      class P {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = A({
                  token: this,
                  providedIn: e.providedIn || "root",
                  factory: e.factory,
                }));
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const xx = new P("AnalyzeForEntryComponents"),
        po = Function;
      function Kn(n, t) {
        void 0 === t && (t = n);
        for (let e = 0; e < n.length; e++) {
          let i = n[e];
          Array.isArray(i)
            ? (t === n && (t = n.slice(0, e)), Kn(i, t))
            : t !== n && t.push(i);
        }
        return t;
      }
      function Bi(n, t) {
        n.forEach((e) => (Array.isArray(e) ? Bi(e, t) : t(e)));
      }
      function fu(n, t, e) {
        t >= n.length ? n.push(e) : n.splice(t, 0, e);
      }
      function us(n, t) {
        return t >= n.length - 1 ? n.pop() : n.splice(t, 1)[0];
      }
      function Pr(n, t) {
        const e = [];
        for (let i = 0; i < n; i++) e.push(t);
        return e;
      }
      function In(n, t, e) {
        let i = go(n, t);
        return (
          i >= 0
            ? (n[1 | i] = e)
            : ((i = ~i),
              (function (n, t, e, i) {
                let r = n.length;
                if (r == t) n.push(e, i);
                else if (1 === r) n.push(i, n[0]), (n[0] = e);
                else {
                  for (r--, n.push(n[r - 1], n[r]); r > t; )
                    (n[r] = n[r - 2]), r--;
                  (n[t] = e), (n[t + 1] = i);
                }
              })(n, i, t, e)),
          i
        );
      }
      function dp(n, t) {
        const e = go(n, t);
        if (e >= 0) return n[1 | e];
      }
      function go(n, t) {
        return (function (n, t, e) {
          let i = 0,
            r = n.length >> e;
          for (; r !== i; ) {
            const s = i + ((r - i) >> 1),
              o = n[s << e];
            if (t === o) return s << e;
            o > t ? (r = s) : (i = s + 1);
          }
          return ~(r << e);
        })(n, t, 1);
      }
      const rl = {},
        fp = "__NG_DI_FLAG__",
        mo = "ngTempTokenPath",
        Ux = /\n/gm,
        pp = "__source",
        gp = $e({ provide: String, useValue: $e });
      let sl;
      function _o(n) {
        const t = sl;
        return (sl = n), t;
      }
      function Gx(n, t = te.Default) {
        if (void 0 === sl)
          throw new Error("inject() must be called from an injection context");
        return null === sl
          ? rv(n, void 0, t)
          : sl.get(n, t & te.Optional ? null : void 0, t);
      }
      function m(n, t = te.Default) {
        return (Vf || Gx)(ee(n), t);
      }
      const qv = m;
      function ds(n) {
        const t = [];
        for (let e = 0; e < n.length; e++) {
          const i = ee(n[e]);
          if (Array.isArray(i)) {
            if (0 === i.length)
              throw new Error("Arguments array must have arguments.");
            let r,
              s = te.Default;
            for (let o = 0; o < i.length; o++) {
              const a = i[o],
                l = Wx(a);
              "number" == typeof l
                ? -1 === l
                  ? (r = a.token)
                  : (s |= l)
                : (r = a);
            }
            t.push(m(r, s));
          } else t.push(m(i));
        }
        return t;
      }
      function ol(n, t) {
        return (n[fp] = t), (n.prototype[fp] = t), n;
      }
      function Wx(n) {
        return n[fp];
      }
      function Yv(n, t, e, i) {
        const r = n[mo];
        throw (
          (t[pp] && r.unshift(t[pp]),
          (n.message = (function (n, t, e, i = null) {
            n =
              n && "\n" === n.charAt(0) && "\u0275" == n.charAt(1)
                ? n.substr(2)
                : n;
            let r = De(t);
            if (Array.isArray(t)) r = t.map(De).join(" -> ");
            else if ("object" == typeof t) {
              let s = [];
              for (let o in t)
                if (t.hasOwnProperty(o)) {
                  let a = t[o];
                  s.push(
                    o + ":" + ("string" == typeof a ? JSON.stringify(a) : De(a))
                  );
                }
              r = `{${s.join(", ")}}`;
            }
            return `${e}${i ? "(" + i + ")" : ""}[${r}]: ${n.replace(
              Ux,
              "\n  "
            )}`;
          })("\n" + n.message, r, e, i)),
          (n.ngTokenPath = r),
          (n[mo] = null),
          n)
        );
      }
      const yo = ol(
          cs("Inject", (n) => ({ token: n })),
          -1
        ),
        nn = ol(cs("Optional"), 8),
        Hi = ol(cs("SkipSelf"), 4);
      class hs {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      function xn(n) {
        return n instanceof hs ? n.changingThisBreaksApplicationSecurity : n;
      }
      function $i(n, t) {
        const e = (function (n) {
          return (n instanceof hs && n.getTypeName()) || null;
        })(n);
        if (null != e && e !== t) {
          if ("ResourceURL" === e && "URL" === t) return !0;
          throw new Error(
            `Required a safe ${t}, got a ${e} (see https://g.co/ng/security#xss)`
          );
        }
        return e === t;
      }
      const mO =
          /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        _O =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      var Je = (() => (
        ((Je = Je || {})[(Je.NONE = 0)] = "NONE"),
        (Je[(Je.HTML = 1)] = "HTML"),
        (Je[(Je.STYLE = 2)] = "STYLE"),
        (Je[(Je.SCRIPT = 3)] = "SCRIPT"),
        (Je[(Je.URL = 4)] = "URL"),
        (Je[(Je.RESOURCE_URL = 5)] = "RESOURCE_URL"),
        Je
      ))();
      function Dp(n) {
        const t = (function () {
          const n = k();
          return n && n[12];
        })();
        return t
          ? t.sanitize(Je.URL, n) || ""
          : $i(n, "URL")
          ? xn(n)
          : (function (n) {
              return (n = String(n)).match(mO) || n.match(_O)
                ? n
                : "unsafe:" + n;
            })(ge(n));
      }
      const fw = "__ngContext__";
      function rn(n, t) {
        n[fw] = t;
      }
      function Mp(n) {
        const t = (function (n) {
          return n[fw] || null;
        })(n);
        return t ? (Array.isArray(t) ? t : t.lView) : null;
      }
      function vu(n) {
        return n.ngOriginalError;
      }
      function BO(n, ...t) {
        n.error(...t);
      }
      class fs {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t),
            i = this._findContext(t),
            r = (function (n) {
              return (n && n.ngErrorLogger) || BO;
            })(t);
          r(this._console, "ERROR", t),
            e && r(this._console, "ORIGINAL ERROR", e),
            i && r(this._console, "ERROR CONTEXT", i);
        }
        _findContext(t) {
          return t
            ? (function (n) {
                return n.ngDebugContext;
              })(t) || this._findContext(vu(t))
            : null;
        }
        _findOriginalError(t) {
          let e = t && vu(t);
          for (; e && vu(e); ) e = vu(e);
          return e || null;
        }
      }
      const Cw = (() =>
        (
          ("undefined" != typeof requestAnimationFrame &&
            requestAnimationFrame) ||
          setTimeout
        ).bind(ze))();
      function Ui(n) {
        return n instanceof Function ? n() : n;
      }
      var On = (() => (
        ((On = On || {})[(On.Important = 1)] = "Important"),
        (On[(On.DashCase = 2)] = "DashCase"),
        On
      ))();
      function Ap(n, t) {
        return undefined(n, t);
      }
      function hl(n) {
        const t = n[3];
        return fi(t) ? t[3] : t;
      }
      function kp(n) {
        return Tw(n[13]);
      }
      function Np(n) {
        return Tw(n[4]);
      }
      function Tw(n) {
        for (; null !== n && !fi(n); ) n = n[4];
        return n;
      }
      function Co(n, t, e, i, r) {
        if (null != i) {
          let s,
            o = !1;
          fi(i) ? (s = i) : Fi(i) && ((o = !0), (i = i[0]));
          const a = wt(i);
          0 === n && null !== e
            ? null == r
              ? xw(t, e, a)
              : ps(t, e, a, r || null, !0)
            : 1 === n && null !== e
            ? ps(t, e, a, r || null, !0)
            : 2 === n
            ? (function (n, t, e) {
                const i = Cu(n, t);
                i &&
                  (function (n, t, e, i) {
                    ht(n) ? n.removeChild(t, e, i) : t.removeChild(e);
                  })(n, i, t, e);
              })(t, a, o)
            : 3 === n && t.destroyNode(a),
            null != s &&
              (function (n, t, e, i, r) {
                const s = e[7];
                s !== wt(e) && Co(t, n, i, s, r);
                for (let a = 10; a < e.length; a++) {
                  const l = e[a];
                  fl(l[1], l, n, t, i, s);
                }
              })(t, n, s, e, r);
        }
      }
      function Ip(n, t, e) {
        return ht(n)
          ? n.createElement(t, e)
          : null === e
          ? n.createElement(t)
          : n.createElementNS(e, t);
      }
      function kw(n, t) {
        const e = n[9],
          i = e.indexOf(t),
          r = t[3];
        1024 & t[2] && ((t[2] &= -1025), Jf(r, -1)), e.splice(i, 1);
      }
      function xp(n, t) {
        if (n.length <= 10) return;
        const e = 10 + t,
          i = n[e];
        if (i) {
          const r = i[17];
          null !== r && r !== n && kw(r, i), t > 0 && (n[e - 1][4] = i[4]);
          const s = us(n, 10 + t);
          !(function (n, t) {
            fl(n, t, t[11], 2, null, null), (t[0] = null), (t[6] = null);
          })(i[1], i);
          const o = s[19];
          null !== o && o.detachView(s[1]),
            (i[3] = null),
            (i[4] = null),
            (i[2] &= -129);
        }
        return i;
      }
      function Nw(n, t) {
        if (!(256 & t[2])) {
          const e = t[11];
          ht(e) && e.destroyNode && fl(n, t, e, 3, null, null),
            (function (n) {
              let t = n[13];
              if (!t) return Op(n[1], n);
              for (; t; ) {
                let e = null;
                if (Fi(t)) e = t[13];
                else {
                  const i = t[10];
                  i && (e = i);
                }
                if (!e) {
                  for (; t && !t[4] && t !== n; )
                    Fi(t) && Op(t[1], t), (t = t[3]);
                  null === t && (t = n), Fi(t) && Op(t[1], t), (e = t && t[4]);
                }
                t = e;
              }
            })(t);
        }
      }
      function Op(n, t) {
        if (!(256 & t[2])) {
          (t[2] &= -129),
            (t[2] |= 256),
            (function (n, t) {
              let e;
              if (null != n && null != (e = n.destroyHooks))
                for (let i = 0; i < e.length; i += 2) {
                  const r = t[e[i]];
                  if (!(r instanceof Qa)) {
                    const s = e[i + 1];
                    if (Array.isArray(s))
                      for (let o = 0; o < s.length; o += 2) {
                        const a = r[s[o]],
                          l = s[o + 1];
                        try {
                          l.call(a);
                        } finally {
                        }
                      }
                    else
                      try {
                        s.call(r);
                      } finally {
                      }
                  }
                }
            })(n, t),
            (function (n, t) {
              const e = n.cleanup,
                i = t[7];
              let r = -1;
              if (null !== e)
                for (let s = 0; s < e.length - 1; s += 2)
                  if ("string" == typeof e[s]) {
                    const o = e[s + 1],
                      a = "function" == typeof o ? o(t) : wt(t[o]),
                      l = i[(r = e[s + 2])],
                      c = e[s + 3];
                    "boolean" == typeof c
                      ? a.removeEventListener(e[s], l, c)
                      : c >= 0
                      ? i[(r = c)]()
                      : i[(r = -c)].unsubscribe(),
                      (s += 2);
                  } else {
                    const o = i[(r = e[s + 1])];
                    e[s].call(o);
                  }
              if (null !== i) {
                for (let s = r + 1; s < i.length; s++) i[s]();
                t[7] = null;
              }
            })(n, t),
            1 === t[1].type && ht(t[11]) && t[11].destroy();
          const e = t[17];
          if (null !== e && fi(t[3])) {
            e !== t[3] && kw(e, t);
            const i = t[19];
            null !== i && i.detachView(n);
          }
        }
      }
      function Rw(n, t, e) {
        return (function (n, t, e) {
          let i = t;
          for (; null !== i && 40 & i.type; ) i = (t = i).parent;
          if (null === i) return e[0];
          if (2 & i.flags) {
            const r = n.data[i.directiveStart].encapsulation;
            if (r === vt.None || r === vt.Emulated) return null;
          }
          return Yn(i, e);
        })(n, t.parent, e);
      }
      function ps(n, t, e, i, r) {
        ht(n) ? n.insertBefore(t, e, i, r) : t.insertBefore(e, i, r);
      }
      function xw(n, t, e) {
        ht(n) ? n.appendChild(t, e) : t.appendChild(e);
      }
      function Ow(n, t, e, i, r) {
        null !== i ? ps(n, t, e, i, r) : xw(n, t, e);
      }
      function Cu(n, t) {
        return ht(n) ? n.parentNode(t) : t.parentNode;
      }
      function Pw(n, t, e) {
        return Lw(n, t, e);
      }
      let Lw = function (n, t, e) {
        return 40 & n.type ? Yn(n, e) : null;
      };
      function Du(n, t, e, i) {
        const r = Rw(n, i, t),
          s = t[11],
          a = Pw(i.parent || t[6], i, t);
        if (null != r)
          if (Array.isArray(e))
            for (let l = 0; l < e.length; l++) Ow(s, r, e[l], a, !1);
          else Ow(s, r, e, a, !1);
      }
      function Eu(n, t) {
        if (null !== t) {
          const e = t.type;
          if (3 & e) return Yn(t, n);
          if (4 & e) return Fp(-1, n[t.index]);
          if (8 & e) {
            const i = t.child;
            if (null !== i) return Eu(n, i);
            {
              const r = n[t.index];
              return fi(r) ? Fp(-1, r) : wt(r);
            }
          }
          if (32 & e) return Ap(t, n)() || wt(n[t.index]);
          {
            const i = Bw(n, t);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : Eu(hl(n[16]), i)
              : Eu(n, t.next);
          }
        }
        return null;
      }
      function Bw(n, t) {
        return null !== t ? n[16][6].projection[t.projection] : null;
      }
      function Fp(n, t) {
        const e = 10 + n + 1;
        if (e < t.length) {
          const i = t[e],
            r = i[1].firstChild;
          if (null !== r) return Eu(i, r);
        }
        return t[7];
      }
      function Lp(n, t, e, i, r, s, o) {
        for (; null != e; ) {
          const a = i[e.index],
            l = e.type;
          if (
            (o && 0 === t && (a && rn(wt(a), i), (e.flags |= 4)),
            64 != (64 & e.flags))
          )
            if (8 & l) Lp(n, t, e.child, i, r, s, !1), Co(t, n, r, a, s);
            else if (32 & l) {
              const c = Ap(e, i);
              let u;
              for (; (u = c()); ) Co(t, n, r, u, s);
              Co(t, n, r, a, s);
            } else 16 & l ? $w(n, t, i, e, r, s) : Co(t, n, r, a, s);
          e = o ? e.projectionNext : e.next;
        }
      }
      function fl(n, t, e, i, r, s) {
        Lp(e, i, n.firstChild, t, r, s, !1);
      }
      function $w(n, t, e, i, r, s) {
        const o = e[16],
          l = o[6].projection[i.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) Co(t, n, r, l[c], s);
        else Lp(n, t, l, o[3], r, s, !0);
      }
      function jw(n, t, e) {
        ht(n) ? n.setAttribute(t, "style", e) : (t.style.cssText = e);
      }
      function Vp(n, t, e) {
        ht(n)
          ? "" === e
            ? n.removeAttribute(t, "class")
            : n.setAttribute(t, "class", e)
          : (t.className = e);
      }
      function Uw(n, t, e) {
        let i = n.length;
        for (;;) {
          const r = n.indexOf(t, e);
          if (-1 === r) return r;
          if (0 === r || n.charCodeAt(r - 1) <= 32) {
            const s = t.length;
            if (r + s === i || n.charCodeAt(r + s) <= 32) return r;
          }
          e = r + 1;
        }
      }
      const zw = "ng-template";
      function dP(n, t, e) {
        let i = 0;
        for (; i < n.length; ) {
          let r = n[i++];
          if (e && "class" === r) {
            if (((r = n[i]), -1 !== Uw(r.toLowerCase(), t, 0))) return !0;
          } else if (1 === r) {
            for (; i < n.length && "string" == typeof (r = n[i++]); )
              if (r.toLowerCase() === t) return !0;
            return !1;
          }
        }
        return !1;
      }
      function Gw(n) {
        return 4 === n.type && n.value !== zw;
      }
      function hP(n, t, e) {
        return t === (4 !== n.type || e ? n.value : zw);
      }
      function fP(n, t, e) {
        let i = 4;
        const r = n.attrs || [],
          s = (function (n) {
            for (let t = 0; t < n.length; t++) if (Rv(n[t])) return t;
            return n.length;
          })(r);
        let o = !1;
        for (let a = 0; a < t.length; a++) {
          const l = t[a];
          if ("number" != typeof l) {
            if (!o)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== l && !hP(n, l, e)) || ("" === l && 1 === t.length))
                ) {
                  if (mi(i)) return !1;
                  o = !0;
                }
              } else {
                const c = 8 & i ? l : t[++a];
                if (8 & i && null !== n.attrs) {
                  if (!dP(n.attrs, c, e)) {
                    if (mi(i)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const d = pP(8 & i ? "class" : l, r, Gw(n), e);
                if (-1 === d) {
                  if (mi(i)) return !1;
                  o = !0;
                  continue;
                }
                if ("" !== c) {
                  let h;
                  h = d > s ? "" : r[d + 1].toLowerCase();
                  const p = 8 & i ? h : null;
                  if ((p && -1 !== Uw(p, c, 0)) || (2 & i && c !== h)) {
                    if (mi(i)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !mi(i) && !mi(l)) return !1;
            if (o && mi(l)) continue;
            (o = !1), (i = l | (1 & i));
          }
        }
        return mi(i) || o;
      }
      function mi(n) {
        return 0 == (1 & n);
      }
      function pP(n, t, e, i) {
        if (null === t) return -1;
        let r = 0;
        if (i || !e) {
          let s = !1;
          for (; r < t.length; ) {
            const o = t[r];
            if (o === n) return r;
            if (3 === o || 6 === o) s = !0;
            else {
              if (1 === o || 2 === o) {
                let a = t[++r];
                for (; "string" == typeof a; ) a = t[++r];
                continue;
              }
              if (4 === o) break;
              if (0 === o) {
                r += 4;
                continue;
              }
            }
            r += s ? 1 : 2;
          }
          return -1;
        }
        return (function (n, t) {
          let e = n.indexOf(4);
          if (e > -1)
            for (e++; e < n.length; ) {
              const i = n[e];
              if ("number" == typeof i) return -1;
              if (i === t) return e;
              e++;
            }
          return -1;
        })(t, n);
      }
      function Ww(n, t, e = !1) {
        for (let i = 0; i < t.length; i++) if (fP(n, t[i], e)) return !0;
        return !1;
      }
      function yP(n, t) {
        e: for (let e = 0; e < t.length; e++) {
          const i = t[e];
          if (n.length === i.length) {
            for (let r = 0; r < n.length; r++) if (n[r] !== i[r]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function qw(n, t) {
        return n ? ":not(" + t.trim() + ")" : t;
      }
      function bP(n) {
        let t = n[0],
          e = 1,
          i = 2,
          r = "",
          s = !1;
        for (; e < n.length; ) {
          let o = n[e];
          if ("string" == typeof o)
            if (2 & i) {
              const a = n[++e];
              r += "[" + o + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & i ? (r += "." + o) : 4 & i && (r += " " + o);
          else
            "" !== r && !mi(o) && ((t += qw(s, r)), (r = "")),
              (i = o),
              (s = s || !mi(i));
          e++;
        }
        return "" !== r && (t += qw(s, r)), t;
      }
      const he = {};
      function w(n) {
        Yw(xe(), k(), pn() + n, Zc());
      }
      function Yw(n, t, e, i) {
        if (!i)
          if (3 == (3 & t[2])) {
            const s = n.preOrderCheckHooks;
            null !== s && ru(t, s, e);
          } else {
            const s = n.preOrderHooks;
            null !== s && su(t, s, 0, e);
          }
        xr(e);
      }
      function Mu(n, t) {
        return (n << 17) | (t << 2);
      }
      function _i(n) {
        return (n >> 17) & 32767;
      }
      function Bp(n) {
        return 2 | n;
      }
      function ar(n) {
        return (131068 & n) >> 2;
      }
      function Hp(n, t) {
        return (-131069 & n) | (t << 2);
      }
      function $p(n) {
        return 1 | n;
      }
      function s0(n, t) {
        const e = n.contentQueries;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) {
            const r = e[i],
              s = e[i + 1];
            if (-1 !== s) {
              const o = n.data[s];
              tp(r), o.contentQueries(2, t[s], s);
            }
          }
      }
      function pl(n, t, e, i, r, s, o, a, l, c) {
        const u = t.blueprint.slice();
        return (
          (u[0] = r),
          (u[2] = 140 | i),
          bv(u),
          (u[3] = u[15] = n),
          (u[8] = e),
          (u[10] = o || (n && n[10])),
          (u[11] = a || (n && n[11])),
          (u[12] = l || (n && n[12]) || null),
          (u[9] = c || (n && n[9]) || null),
          (u[6] = s),
          (u[16] = 2 == t.type ? n[16] : u),
          u
        );
      }
      function Do(n, t, e, i, r) {
        let s = n.data[t];
        if (null === s)
          (s = (function (n, t, e, i, r) {
            const s = wv(),
              o = Qf(),
              l = (n.data[t] = (function (n, t, e, i, r, s) {
                return {
                  type: e,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: r,
                  attrs: s,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, o ? s : s && s.parent, e, t, i, r));
            return (
              null === n.firstChild && (n.firstChild = l),
              null !== s &&
                (o
                  ? null == s.child && null !== l.parent && (s.child = l)
                  : null === s.next && (s.next = l)),
              l
            );
          })(n, t, e, i, r)),
            ue.lFrame.inI18n && (s.flags |= 64);
        else if (64 & s.type) {
          (s.type = e), (s.value = i), (s.attrs = r);
          const o = (function () {
            const n = ue.lFrame,
              t = n.currentTNode;
            return n.isParent ? t : t.parent;
          })();
          s.injectorIndex = null === o ? -1 : o.injectorIndex;
        }
        return Li(s, !0), s;
      }
      function Eo(n, t, e, i) {
        if (0 === e) return -1;
        const r = t.length;
        for (let s = 0; s < e; s++)
          t.push(i), n.blueprint.push(i), n.data.push(null);
        return r;
      }
      function gl(n, t, e) {
        tu(t);
        try {
          const i = n.viewQuery;
          null !== i && ig(1, i, e);
          const r = n.template;
          null !== r && o0(n, t, r, 1, e),
            n.firstCreatePass && (n.firstCreatePass = !1),
            n.staticContentQueries && s0(n, t),
            n.staticViewQueries && ig(2, n.viewQuery, e);
          const s = n.components;
          null !== s &&
            (function (n, t) {
              for (let e = 0; e < t.length; e++) XP(n, t[e]);
            })(t, s);
        } catch (i) {
          throw (
            (n.firstCreatePass &&
              ((n.incompleteFirstPass = !0), (n.firstCreatePass = !1)),
            i)
          );
        } finally {
          (t[2] &= -5), nu();
        }
      }
      function Mo(n, t, e, i) {
        const r = t[2];
        if (256 == (256 & r)) return;
        tu(t);
        const s = Zc();
        try {
          bv(t),
            (function (n) {
              ue.lFrame.bindingIndex = n;
            })(n.bindingStartIndex),
            null !== e && o0(n, t, e, 2, i);
          const o = 3 == (3 & r);
          if (!s)
            if (o) {
              const c = n.preOrderCheckHooks;
              null !== c && ru(t, c, null);
            } else {
              const c = n.preOrderHooks;
              null !== c && su(t, c, 0, null), ip(t, 0);
            }
          if (
            ((function (n) {
              for (let t = kp(n); null !== t; t = Np(t)) {
                if (!t[2]) continue;
                const e = t[9];
                for (let i = 0; i < e.length; i++) {
                  const r = e[i],
                    s = r[3];
                  0 == (1024 & r[2]) && Jf(s, 1), (r[2] |= 1024);
                }
              }
            })(t),
            (function (n) {
              for (let t = kp(n); null !== t; t = Np(t))
                for (let e = 10; e < t.length; e++) {
                  const i = t[e],
                    r = i[1];
                  Kf(i) && Mo(r, i, r.template, i[8]);
                }
            })(t),
            null !== n.contentQueries && s0(n, t),
            !s)
          )
            if (o) {
              const c = n.contentCheckHooks;
              null !== c && ru(t, c);
            } else {
              const c = n.contentHooks;
              null !== c && su(t, c, 1), ip(t, 1);
            }
          !(function (n, t) {
            const e = n.hostBindingOpCodes;
            if (null !== e)
              try {
                for (let i = 0; i < e.length; i++) {
                  const r = e[i];
                  if (r < 0) xr(~r);
                  else {
                    const s = r,
                      o = e[++i],
                      a = e[++i];
                    ux(o, s), a(2, t[s]);
                  }
                }
              } finally {
                xr(-1);
              }
          })(n, t);
          const a = n.components;
          null !== a &&
            (function (n, t) {
              for (let e = 0; e < t.length; e++) QP(n, t[e]);
            })(t, a);
          const l = n.viewQuery;
          if ((null !== l && ig(2, l, i), !s))
            if (o) {
              const c = n.viewCheckHooks;
              null !== c && ru(t, c);
            } else {
              const c = n.viewHooks;
              null !== c && su(t, c, 2), ip(t, 2);
            }
          !0 === n.firstUpdatePass && (n.firstUpdatePass = !1),
            s || (t[2] &= -73),
            1024 & t[2] && ((t[2] &= -1025), Jf(t[3], -1));
        } finally {
          nu();
        }
      }
      function IP(n, t, e, i) {
        const r = t[10],
          s = !Zc(),
          o = yv(t);
        try {
          s && !o && r.begin && r.begin(), o && gl(n, t, i), Mo(n, t, e, i);
        } finally {
          s && !o && r.end && r.end();
        }
      }
      function o0(n, t, e, i, r) {
        const s = pn(),
          o = 2 & i;
        try {
          xr(-1), o && t.length > 20 && Yw(n, t, 20, Zc()), e(i, r);
        } finally {
          xr(s);
        }
      }
      function a0(n, t, e) {
        if (Uf(t)) {
          const r = t.directiveEnd;
          for (let s = t.directiveStart; s < r; s++) {
            const o = n.data[s];
            o.contentQueries && o.contentQueries(1, e[s], s);
          }
        }
      }
      function Kp(n, t, e) {
        !vv() ||
          ((function (n, t, e, i) {
            const r = e.directiveStart,
              s = e.directiveEnd;
            n.firstCreatePass || Za(e, t), rn(i, t);
            const o = e.initialInputs;
            for (let a = r; a < s; a++) {
              const l = n.data[a],
                c = pi(l);
              c && WP(t, e, l);
              const u = el(t, n, a, e);
              rn(u, t),
                null !== o && qP(0, a - r, u, l, 0, o),
                c && (Rn(e.index, t)[8] = u);
            }
          })(n, t, e, Yn(e, t)),
          128 == (128 & e.flags) &&
            (function (n, t, e) {
              const i = e.directiveStart,
                r = e.directiveEnd,
                o = e.index,
                a = ue.lFrame.currentDirectiveIndex;
              try {
                xr(o);
                for (let l = i; l < r; l++) {
                  const c = n.data[l],
                    u = t[l];
                  Zf(l),
                    (null !== c.hostBindings ||
                      0 !== c.hostVars ||
                      null !== c.hostAttrs) &&
                      g0(c, u);
                }
              } finally {
                xr(-1), Zf(a);
              }
            })(n, t, e));
      }
      function Jp(n, t, e = Yn) {
        const i = t.localNames;
        if (null !== i) {
          let r = t.index + 1;
          for (let s = 0; s < i.length; s += 2) {
            const o = i[s + 1],
              a = -1 === o ? e(t, n) : n[o];
            n[r++] = a;
          }
        }
      }
      function l0(n) {
        const t = n.tView;
        return null === t || t.incompleteFirstPass
          ? (n.tView = Au(
              1,
              null,
              n.template,
              n.decls,
              n.vars,
              n.directiveDefs,
              n.pipeDefs,
              n.viewQuery,
              n.schemas,
              n.consts
            ))
          : t;
      }
      function Au(n, t, e, i, r, s, o, a, l, c) {
        const u = 20 + i,
          d = u + r,
          h = (function (n, t) {
            const e = [];
            for (let i = 0; i < t; i++) e.push(i < n ? null : he);
            return e;
          })(u, d),
          p = "function" == typeof c ? c() : c;
        return (h[1] = {
          type: n,
          blueprint: h,
          template: e,
          queries: null,
          viewQuery: a,
          declTNode: t,
          data: h.slice().fill(null, u),
          bindingStartIndex: u,
          expandoStartIndex: d,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof s ? s() : s,
          pipeRegistry: "function" == typeof o ? o() : o,
          firstChild: null,
          schemas: l,
          consts: p,
          incompleteFirstPass: !1,
        });
      }
      function d0(n, t, e, i) {
        const r = w0(t);
        null === e
          ? r.push(i)
          : (r.push(e), n.firstCreatePass && C0(n).push(i, r.length - 1));
      }
      function h0(n, t, e) {
        for (let i in n)
          if (n.hasOwnProperty(i)) {
            const r = n[i];
            (e = null === e ? {} : e).hasOwnProperty(i)
              ? e[i].push(t, r)
              : (e[i] = [t, r]);
          }
        return e;
      }
      function Pn(n, t, e, i, r, s, o, a) {
        const l = Yn(t, e);
        let u,
          c = t.inputs;
        !a && null != c && (u = c[i])
          ? (M0(n, e, u, i, r),
            Jc(t) &&
              (function (n, t) {
                const e = Rn(t, n);
                16 & e[2] || (e[2] |= 64);
              })(e, t.index))
          : 3 & t.type &&
            ((i = (function (n) {
              return "class" === n
                ? "className"
                : "for" === n
                ? "htmlFor"
                : "formaction" === n
                ? "formAction"
                : "innerHtml" === n
                ? "innerHTML"
                : "readonly" === n
                ? "readOnly"
                : "tabindex" === n
                ? "tabIndex"
                : n;
            })(i)),
            (r = null != o ? o(r, t.value || "", i) : r),
            ht(s)
              ? s.setProperty(l, i, r)
              : sp(i) || (l.setProperty ? l.setProperty(i, r) : (l[i] = r)));
      }
      function Qp(n, t, e, i) {
        let r = !1;
        if (vv()) {
          const s = (function (n, t, e) {
              const i = n.directiveRegistry;
              let r = null;
              if (i)
                for (let s = 0; s < i.length; s++) {
                  const o = i[s];
                  Ww(e, o.selectors, !1) &&
                    (r || (r = []),
                    uu(Za(e, t), n, o.type),
                    pi(o) ? (m0(n, e), r.unshift(o)) : r.push(o));
                }
              return r;
            })(n, t, e),
            o = null === i ? null : { "": -1 };
          if (null !== s) {
            (r = !0), _0(e, n.data.length, s.length);
            for (let u = 0; u < s.length; u++) {
              const d = s[u];
              d.providersResolver && d.providersResolver(d);
            }
            let a = !1,
              l = !1,
              c = Eo(n, t, s.length, null);
            for (let u = 0; u < s.length; u++) {
              const d = s[u];
              (e.mergedAttrs = au(e.mergedAttrs, d.hostAttrs)),
                y0(n, e, t, c, d),
                GP(c, d, o),
                null !== d.contentQueries && (e.flags |= 8),
                (null !== d.hostBindings ||
                  null !== d.hostAttrs ||
                  0 !== d.hostVars) &&
                  (e.flags |= 128);
              const h = d.type.prototype;
              !a &&
                (h.ngOnChanges || h.ngOnInit || h.ngDoCheck) &&
                ((n.preOrderHooks || (n.preOrderHooks = [])).push(e.index),
                (a = !0)),
                !l &&
                  (h.ngOnChanges || h.ngDoCheck) &&
                  ((n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(
                    e.index
                  ),
                  (l = !0)),
                c++;
            }
            !(function (n, t) {
              const i = t.directiveEnd,
                r = n.data,
                s = t.attrs,
                o = [];
              let a = null,
                l = null;
              for (let c = t.directiveStart; c < i; c++) {
                const u = r[c],
                  d = u.inputs,
                  h = null === s || Gw(t) ? null : YP(d, s);
                o.push(h), (a = h0(d, c, a)), (l = h0(u.outputs, c, l));
              }
              null !== a &&
                (a.hasOwnProperty("class") && (t.flags |= 16),
                a.hasOwnProperty("style") && (t.flags |= 32)),
                (t.initialInputs = o),
                (t.inputs = a),
                (t.outputs = l);
            })(n, e);
          }
          o &&
            (function (n, t, e) {
              if (t) {
                const i = (n.localNames = []);
                for (let r = 0; r < t.length; r += 2) {
                  const s = e[t[r + 1]];
                  if (null == s)
                    throw new is(
                      "301",
                      `Export of name '${t[r + 1]}' not found!`
                    );
                  i.push(t[r], s);
                }
              }
            })(e, i, o);
        }
        return (e.mergedAttrs = au(e.mergedAttrs, e.attrs)), r;
      }
      function p0(n, t, e, i, r, s) {
        const o = s.hostBindings;
        if (o) {
          let a = n.hostBindingOpCodes;
          null === a && (a = n.hostBindingOpCodes = []);
          const l = ~t.index;
          (function (n) {
            let t = n.length;
            for (; t > 0; ) {
              const e = n[--t];
              if ("number" == typeof e && e < 0) return e;
            }
            return 0;
          })(a) != l && a.push(l),
            a.push(i, r, o);
        }
      }
      function g0(n, t) {
        null !== n.hostBindings && n.hostBindings(1, t);
      }
      function m0(n, t) {
        (t.flags |= 2), (n.components || (n.components = [])).push(t.index);
      }
      function GP(n, t, e) {
        if (e) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) e[t.exportAs[i]] = n;
          pi(t) && (e[""] = n);
        }
      }
      function _0(n, t, e) {
        (n.flags |= 1),
          (n.directiveStart = t),
          (n.directiveEnd = t + e),
          (n.providerIndexes = t);
      }
      function y0(n, t, e, i, r) {
        n.data[i] = r;
        const s = r.factory || (r.factory = ls(r.type)),
          o = new Qa(s, pi(r), null);
        (n.blueprint[i] = o),
          (e[i] = o),
          p0(n, t, 0, i, Eo(n, e, r.hostVars, he), r);
      }
      function WP(n, t, e) {
        const i = Yn(t, n),
          r = l0(e),
          s = n[10],
          o = ku(
            n,
            pl(
              n,
              r,
              null,
              e.onPush ? 64 : 16,
              i,
              t,
              s,
              s.createRenderer(i, e),
              null,
              null
            )
          );
        n[t.index] = o;
      }
      function zi(n, t, e, i, r, s) {
        const o = Yn(n, t);
        !(function (n, t, e, i, r, s, o) {
          if (null == s)
            ht(n) ? n.removeAttribute(t, r, e) : t.removeAttribute(r);
          else {
            const a = null == o ? ge(s) : o(s, i || "", r);
            ht(n)
              ? n.setAttribute(t, r, a, e)
              : e
              ? t.setAttributeNS(e, r, a)
              : t.setAttribute(r, a);
          }
        })(t[11], o, s, n.value, e, i, r);
      }
      function qP(n, t, e, i, r, s) {
        const o = s[t];
        if (null !== o) {
          const a = i.setInput;
          for (let l = 0; l < o.length; ) {
            const c = o[l++],
              u = o[l++],
              d = o[l++];
            null !== a ? i.setInput(e, d, c, u) : (e[u] = d);
          }
        }
      }
      function YP(n, t) {
        let e = null,
          i = 0;
        for (; i < t.length; ) {
          const r = t[i];
          if (0 !== r)
            if (5 !== r) {
              if ("number" == typeof r) break;
              n.hasOwnProperty(r) &&
                (null === e && (e = []), e.push(r, n[r], t[i + 1])),
                (i += 2);
            } else i += 2;
          else i += 4;
        }
        return e;
      }
      function b0(n, t, e, i) {
        return new Array(n, !0, !1, t, null, 0, i, e, null, null);
      }
      function QP(n, t) {
        const e = Rn(t, n);
        if (Kf(e)) {
          const i = e[1];
          80 & e[2] ? Mo(i, e, i.template, e[8]) : e[5] > 0 && Zp(e);
        }
      }
      function Zp(n) {
        for (let i = kp(n); null !== i; i = Np(i))
          for (let r = 10; r < i.length; r++) {
            const s = i[r];
            if (1024 & s[2]) {
              const o = s[1];
              Mo(o, s, o.template, s[8]);
            } else s[5] > 0 && Zp(s);
          }
        const e = n[1].components;
        if (null !== e)
          for (let i = 0; i < e.length; i++) {
            const r = Rn(e[i], n);
            Kf(r) && r[5] > 0 && Zp(r);
          }
      }
      function XP(n, t) {
        const e = Rn(t, n),
          i = e[1];
        (function (n, t) {
          for (let e = t.length; e < n.blueprint.length; e++)
            t.push(n.blueprint[e]);
        })(i, e),
          gl(i, e, e[8]);
      }
      function ku(n, t) {
        return n[13] ? (n[14][4] = t) : (n[13] = t), (n[14] = t), t;
      }
      function eg(n) {
        for (; n; ) {
          n[2] |= 64;
          const t = hl(n);
          if (GI(n) && !t) return n;
          n = t;
        }
        return null;
      }
      function ng(n, t, e) {
        const i = t[10];
        i.begin && i.begin();
        try {
          Mo(n, t, n.template, e);
        } catch (r) {
          throw (E0(t, r), r);
        } finally {
          i.end && i.end();
        }
      }
      function v0(n) {
        !(function (n) {
          for (let t = 0; t < n.components.length; t++) {
            const e = n.components[t],
              i = Mp(e),
              r = i[1];
            IP(r, i, r.template, e);
          }
        })(n[8]);
      }
      function ig(n, t, e) {
        tp(0), t(n, e);
      }
      const iF = (() => Promise.resolve(null))();
      function w0(n) {
        return n[7] || (n[7] = []);
      }
      function C0(n) {
        return n.cleanup || (n.cleanup = []);
      }
      function D0(n, t, e) {
        return (
          (null === n || pi(n)) &&
            (e = (function (n) {
              for (; Array.isArray(n); ) {
                if ("object" == typeof n[1]) return n;
                n = n[0];
              }
              return null;
            })(e[t.index])),
          e[11]
        );
      }
      function E0(n, t) {
        const e = n[9],
          i = e ? e.get(fs, null) : null;
        i && i.handleError(t);
      }
      function M0(n, t, e, i, r) {
        for (let s = 0; s < e.length; ) {
          const o = e[s++],
            a = e[s++],
            l = t[o],
            c = n.data[o];
          null !== c.setInput ? c.setInput(l, r, i, a) : (l[a] = r);
        }
      }
      function cr(n, t, e) {
        const i = Xc(t, n);
        !(function (n, t, e) {
          ht(n) ? n.setValue(t, e) : (t.textContent = e);
        })(n[11], i, e);
      }
      function Nu(n, t, e) {
        let i = e ? n.styles : null,
          r = e ? n.classes : null,
          s = 0;
        if (null !== t)
          for (let o = 0; o < t.length; o++) {
            const a = t[o];
            "number" == typeof a
              ? (s = a)
              : 1 == s
              ? (r = Pf(r, a))
              : 2 == s && (i = Pf(i, a + ": " + t[++o] + ";"));
          }
        e ? (n.styles = i) : (n.stylesWithoutHost = i),
          e ? (n.classes = r) : (n.classesWithoutHost = r);
      }
      const ur = new P("INJECTOR", -1);
      class S0 {
        get(t, e = rl) {
          if (e === rl) {
            const i = new Error(`NullInjectorError: No provider for ${De(t)}!`);
            throw ((i.name = "NullInjectorError"), i);
          }
          return e;
        }
      }
      const ml = new P("Set Injector scope."),
        _l = {},
        oF = {};
      let rg;
      function T0() {
        return void 0 === rg && (rg = new S0()), rg;
      }
      function A0(n, t = null, e = null, i) {
        return new lF(n, e, t || T0(), i);
      }
      class lF {
        constructor(t, e, i, r = null) {
          (this.parent = i),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const s = [];
          e && Bi(e, (a) => this.processProvider(a, t, e)),
            Bi([t], (a) => this.processInjectorType(a, [], s)),
            this.records.set(ur, So(void 0, this));
          const o = this.records.get(ml);
          (this.scope = null != o ? o.value : null),
            (this.source = r || ("object" == typeof t ? null : De(t)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((t) => t.ngOnDestroy());
          } finally {
            this.records.clear(),
              this.onDestroy.clear(),
              this.injectorDefTypes.clear();
          }
        }
        get(t, e = rl, i = te.Default) {
          this.assertNotDestroyed();
          const r = _o(this),
            s = kr(void 0);
          try {
            if (!(i & te.SkipSelf)) {
              let a = this.records.get(t);
              if (void 0 === a) {
                const l =
                  (function (n) {
                    return (
                      "function" == typeof n ||
                      ("object" == typeof n && n instanceof P)
                    );
                  })(t) && rr(t);
                (a = l && this.injectableDefInScope(l) ? So(sg(t), _l) : null),
                  this.records.set(t, a);
              }
              if (null != a) return this.hydrate(t, a);
            }
            return (i & te.Self ? T0() : this.parent).get(
              t,
              (e = i & te.Optional && e === rl ? null : e)
            );
          } catch (o) {
            if ("NullInjectorError" === o.name) {
              if (((o[mo] = o[mo] || []).unshift(De(t)), r)) throw o;
              return Yv(o, t, "R3InjectorError", this.source);
            }
            throw o;
          } finally {
            kr(s), _o(r);
          }
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((t) => this.get(t));
        }
        toString() {
          const t = [];
          return (
            this.records.forEach((i, r) => t.push(De(r))),
            `R3Injector[${t.join(", ")}]`
          );
        }
        assertNotDestroyed() {
          if (this._destroyed)
            throw new Error("Injector has already been destroyed.");
        }
        processInjectorType(t, e, i) {
          if (!(t = ee(t))) return !1;
          let r = nv(t);
          const s = (null == r && t.ngModule) || void 0,
            o = void 0 === s ? t : s,
            a = -1 !== i.indexOf(o);
          if ((void 0 !== s && (r = nv(s)), null == r)) return !1;
          if (null != r.imports && !a) {
            let u;
            i.push(o);
            try {
              Bi(r.imports, (d) => {
                this.processInjectorType(d, e, i) &&
                  (void 0 === u && (u = []), u.push(d));
              });
            } finally {
            }
            if (void 0 !== u)
              for (let d = 0; d < u.length; d++) {
                const { ngModule: h, providers: p } = u[d];
                Bi(p, (g) => this.processProvider(g, h, p || qe));
              }
          }
          this.injectorDefTypes.add(o);
          const l = ls(o) || (() => new o());
          this.records.set(o, So(l, _l));
          const c = r.providers;
          if (null != c && !a) {
            const u = t;
            Bi(c, (d) => this.processProvider(d, u, c));
          }
          return void 0 !== s && void 0 !== t.providers;
        }
        processProvider(t, e, i) {
          let r = To((t = ee(t))) ? t : ee(t && t.provide);
          const s = (function (n, t, e) {
            return N0(n) ? So(void 0, n.useValue) : So(k0(n), _l);
          })(t);
          if (To(t) || !0 !== t.multi) this.records.get(r);
          else {
            let o = this.records.get(r);
            o ||
              ((o = So(void 0, _l, !0)),
              (o.factory = () => ds(o.multi)),
              this.records.set(r, o)),
              (r = t),
              o.multi.push(t);
          }
          this.records.set(r, s);
        }
        hydrate(t, e) {
          return (
            e.value === _l && ((e.value = oF), (e.value = e.factory())),
            "object" == typeof e.value &&
              e.value &&
              (function (n) {
                return (
                  null !== n &&
                  "object" == typeof n &&
                  "function" == typeof n.ngOnDestroy
                );
              })(e.value) &&
              this.onDestroy.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const e = ee(t.providedIn);
          return "string" == typeof e
            ? "any" === e || e === this.scope
            : this.injectorDefTypes.has(e);
        }
      }
      function sg(n) {
        const t = rr(n),
          e = null !== t ? t.factory : ls(n);
        if (null !== e) return e;
        if (n instanceof P)
          throw new Error(`Token ${De(n)} is missing a \u0275prov definition.`);
        if (n instanceof Function)
          return (function (n) {
            const t = n.length;
            if (t > 0) {
              const i = Pr(t, "?");
              throw new Error(
                `Can't resolve all parameters for ${De(n)}: (${i.join(", ")}).`
              );
            }
            const e = (function (n) {
              const t = n && (n[Gc] || n[iv]);
              if (t) {
                const e = (function (n) {
                  if (n.hasOwnProperty("name")) return n.name;
                  const t = ("" + n).match(/^function\s*([^\s(]+)/);
                  return null === t ? "" : t[1];
                })(n);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`
                  ),
                  t
                );
              }
              return null;
            })(n);
            return null !== e ? () => e.factory(n) : () => new n();
          })(n);
        throw new Error("unreachable");
      }
      function k0(n, t, e) {
        let i;
        if (To(n)) {
          const r = ee(n);
          return ls(r) || sg(r);
        }
        if (N0(n)) i = () => ee(n.useValue);
        else if (
          (function (n) {
            return !(!n || !n.useFactory);
          })(n)
        )
          i = () => n.useFactory(...ds(n.deps || []));
        else if (
          (function (n) {
            return !(!n || !n.useExisting);
          })(n)
        )
          i = () => m(ee(n.useExisting));
        else {
          const r = ee(n && (n.useClass || n.provide));
          if (
            !(function (n) {
              return !!n.deps;
            })(n)
          )
            return ls(r) || sg(r);
          i = () => new r(...ds(n.deps));
        }
        return i;
      }
      function So(n, t, e = !1) {
        return { factory: n, value: t, multi: e ? [] : void 0 };
      }
      function N0(n) {
        return null !== n && "object" == typeof n && gp in n;
      }
      function To(n) {
        return "function" == typeof n;
      }
      const R0 = function (n, t, e) {
        return (function (n, t = null, e = null, i) {
          const r = A0(n, t, e, i);
          return r._resolveInjectorDefTypes(), r;
        })({ name: e }, t, n, e);
      };
      class ae {
        static create(t, e) {
          return Array.isArray(t)
            ? R0(t, e, "")
            : R0(t.providers, t.parent, t.name || "");
        }
      }
      function kF(n, t) {
        iu(Mp(n)[1], At());
      }
      function B(n) {
        let t = (function (n) {
            return Object.getPrototypeOf(n.prototype).constructor;
          })(n.type),
          e = !0;
        const i = [n];
        for (; t; ) {
          let r;
          if (pi(n)) r = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new Error("Directives cannot inherit Components");
            r = t.ɵdir;
          }
          if (r) {
            if (e) {
              i.push(r);
              const o = n;
              (o.inputs = dg(n.inputs)),
                (o.declaredInputs = dg(n.declaredInputs)),
                (o.outputs = dg(n.outputs));
              const a = r.hostBindings;
              a && xF(n, a);
              const l = r.viewQuery,
                c = r.contentQueries;
              if (
                (l && RF(n, l),
                c && IF(n, c),
                Of(n.inputs, r.inputs),
                Of(n.declaredInputs, r.declaredInputs),
                Of(n.outputs, r.outputs),
                pi(r) && r.data.animation)
              ) {
                const u = n.data;
                u.animation = (u.animation || []).concat(r.data.animation);
              }
            }
            const s = r.features;
            if (s)
              for (let o = 0; o < s.length; o++) {
                const a = s[o];
                a && a.ngInherit && a(n), a === B && (e = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function (n) {
          let t = 0,
            e = null;
          for (let i = n.length - 1; i >= 0; i--) {
            const r = n[i];
            (r.hostVars = t += r.hostVars),
              (r.hostAttrs = au(r.hostAttrs, (e = au(e, r.hostAttrs))));
          }
        })(i);
      }
      function dg(n) {
        return n === Zs ? {} : n === qe ? [] : n;
      }
      function RF(n, t) {
        const e = n.viewQuery;
        n.viewQuery = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      function IF(n, t) {
        const e = n.contentQueries;
        n.contentQueries = e
          ? (i, r, s) => {
              t(i, r, s), e(i, r, s);
            }
          : t;
      }
      function xF(n, t) {
        const e = n.hostBindings;
        n.hostBindings = e
          ? (i, r) => {
              t(i, r), e(i, r);
            }
          : t;
      }
      (ae.THROW_IF_NOT_FOUND = rl),
        (ae.NULL = new S0()),
        (ae.ɵprov = A({ token: ae, providedIn: "any", factory: () => m(ur) })),
        (ae.__NG_ELEMENT_ID__ = -1);
      let Ru = null;
      function Ao() {
        if (!Ru) {
          const n = ze.Symbol;
          if (n && n.iterator) Ru = n.iterator;
          else {
            const t = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < t.length; ++e) {
              const i = t[e];
              "entries" !== i &&
                "size" !== i &&
                Map.prototype[i] === Map.prototype.entries &&
                (Ru = i);
            }
          }
        }
        return Ru;
      }
      class bi {
        constructor(t) {
          this.wrapped = t;
        }
        static wrap(t) {
          return new bi(t);
        }
        static unwrap(t) {
          return bi.isWrapped(t) ? t.wrapped : t;
        }
        static isWrapped(t) {
          return t instanceof bi;
        }
      }
      function bl(n) {
        return (
          !!hg(n) && (Array.isArray(n) || (!(n instanceof Map) && Ao() in n))
        );
      }
      function hg(n) {
        return null !== n && ("function" == typeof n || "object" == typeof n);
      }
      function Gi(n, t, e) {
        return (n[t] = e);
      }
      function sn(n, t, e) {
        return !Object.is(n[t], e) && ((n[t] = e), !0);
      }
      function X(n, t, e, i) {
        const r = k();
        return sn(r, so(), t) && (xe(), zi(ft(), r, n, t, e, i)), X;
      }
      function No(n, t, e, i) {
        return sn(n, so(), e) ? t + ge(e) + i : he;
      }
      function S(n, t, e, i, r, s, o, a) {
        const l = k(),
          c = xe(),
          u = n + 20,
          d = c.firstCreatePass
            ? (function (n, t, e, i, r, s, o, a, l) {
                const c = t.consts,
                  u = Do(t, n, 4, o || null, Ir(c, a));
                Qp(t, e, u, Ir(c, l)), iu(t, u);
                const d = (u.tViews = Au(
                  2,
                  u,
                  i,
                  r,
                  s,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  c
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, u),
                    (d.queries = t.queries.embeddedTView(u))),
                  u
                );
              })(u, c, l, t, e, i, r, s, o)
            : c.data[u];
        Li(d, !1);
        const h = l[11].createComment("");
        Du(c, l, h, d),
          rn(h, l),
          ku(l, (l[u] = b0(h, l, h, d))),
          Qc(d) && Kp(c, l, d),
          null != o && Jp(l, d, a);
      }
      function Vt(n) {
        return ro(ue.lFrame.contextLView, 20 + n);
      }
      function f(n, t = te.Default) {
        const e = k();
        return null === e ? m(n, t) : Vv(At(), e, ee(n), t);
      }
      function D(n, t, e) {
        const i = k();
        return sn(i, so(), t) && Pn(xe(), ft(), i, n, t, i[11], e, !1), D;
      }
      function _g(n, t, e, i, r) {
        const o = r ? "class" : "style";
        M0(n, e, t.inputs[o], o, i);
      }
      function b(n, t, e, i) {
        const r = k(),
          s = xe(),
          o = 20 + n,
          a = r[11],
          l = (r[o] = Ip(a, t, ue.lFrame.currentNamespace)),
          c = s.firstCreatePass
            ? (function (n, t, e, i, r, s, o) {
                const a = t.consts,
                  c = Do(t, n, 2, r, Ir(a, s));
                return (
                  Qp(t, e, c, Ir(a, o)),
                  null !== c.attrs && Nu(c, c.attrs, !1),
                  null !== c.mergedAttrs && Nu(c, c.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, c),
                  c
                );
              })(o, s, r, 0, t, e, i)
            : s.data[o];
        Li(c, !0);
        const u = c.mergedAttrs;
        null !== u && ou(a, l, u);
        const d = c.classes;
        null !== d && Vp(a, l, d);
        const h = c.styles;
        null !== h && jw(a, l, h),
          64 != (64 & c.flags) && Du(s, r, l, c),
          0 === ue.lFrame.elementDepthCount && rn(l, r),
          ue.lFrame.elementDepthCount++,
          Qc(c) && (Kp(s, r, c), a0(s, c, r)),
          null !== i && Jp(r, c);
      }
      function v() {
        let n = At();
        Qf() ? Xf() : ((n = n.parent), Li(n, !1));
        const t = n;
        ue.lFrame.elementDepthCount--;
        const e = xe();
        e.firstCreatePass && (iu(e, n), Uf(n) && e.queries.elementEnd(n)),
          null != t.classesWithoutHost &&
            (function (n) {
              return 0 != (16 & n.flags);
            })(t) &&
            _g(e, t, k(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function (n) {
              return 0 != (32 & n.flags);
            })(t) &&
            _g(e, t, k(), t.stylesWithoutHost, !1);
      }
      function Z(n, t, e, i) {
        b(n, t, e, i), v();
      }
      function Xn(n, t, e) {
        const i = k(),
          r = xe(),
          s = n + 20,
          o = r.firstCreatePass
            ? (function (n, t, e, i, r) {
                const s = t.consts,
                  o = Ir(s, i),
                  a = Do(t, n, 8, "ng-container", o);
                return (
                  null !== o && Nu(a, o, !0),
                  Qp(t, e, a, Ir(s, r)),
                  null !== t.queries && t.queries.elementStart(t, a),
                  a
                );
              })(s, r, i, t, e)
            : r.data[s];
        Li(o, !0);
        const a = (i[s] = i[11].createComment(""));
        Du(r, i, a, o),
          rn(a, i),
          Qc(o) && (Kp(r, i, o), a0(r, o, i)),
          null != e && Jp(i, o);
      }
      function Zn() {
        let n = At();
        const t = xe();
        Qf() ? Xf() : ((n = n.parent), Li(n, !1)),
          t.firstCreatePass && (iu(t, n), Uf(n) && t.queries.elementEnd(n));
      }
      function mn(n, t, e) {
        Xn(n, t, e), Zn();
      }
      function Ne() {
        return k();
      }
      function wl(n) {
        return !!n && "function" == typeof n.then;
      }
      function gC(n) {
        return !!n && "function" == typeof n.subscribe;
      }
      const Ou = gC;
      function R(n, t, e, i) {
        const r = k(),
          s = xe(),
          o = At();
        return mC(s, r, r[11], o, n, t, !!e, i), R;
      }
      function Pu(n, t) {
        const e = At(),
          i = k(),
          r = xe();
        return mC(r, i, D0(ep(r.data), e, i), e, n, t, !1), Pu;
      }
      function mC(n, t, e, i, r, s, o, a) {
        const l = Qc(i),
          u = n.firstCreatePass && C0(n),
          d = t[8],
          h = w0(t);
        let p = !0;
        if (3 & i.type || a) {
          const y = Yn(i, t),
            E = a ? a(y) : y,
            C = h.length,
            N = a ? (x) => a(wt(x[i.index])) : i.index;
          if (ht(e)) {
            let x = null;
            if (
              (!a &&
                l &&
                (x = (function (n, t, e, i) {
                  const r = n.cleanup;
                  if (null != r)
                    for (let s = 0; s < r.length - 1; s += 2) {
                      const o = r[s];
                      if (o === e && r[s + 1] === i) {
                        const a = t[7],
                          l = r[s + 2];
                        return a.length > l ? a[l] : null;
                      }
                      "string" == typeof o && (s += 2);
                    }
                  return null;
                })(n, t, r, i.index)),
              null !== x)
            )
              ((x.__ngLastListenerFn__ || x).__ngNextListenerFn__ = s),
                (x.__ngLastListenerFn__ = s),
                (p = !1);
            else {
              s = yg(i, t, d, s, !1);
              const se = e.listen(E, r, s);
              h.push(s, se), u && u.push(r, N, C, C + 1);
            }
          } else
            (s = yg(i, t, d, s, !0)),
              E.addEventListener(r, s, o),
              h.push(s),
              u && u.push(r, N, C, o);
        } else s = yg(i, t, d, s, !1);
        const g = i.outputs;
        let _;
        if (p && null !== g && (_ = g[r])) {
          const y = _.length;
          if (y)
            for (let E = 0; E < y; E += 2) {
              const Fe = t[_[E]][_[E + 1]].subscribe(s),
                Ue = h.length;
              h.push(s, Fe), u && u.push(r, i.index, Ue, -(Ue + 1));
            }
        }
      }
      function _C(n, t, e, i) {
        try {
          return !1 !== e(i);
        } catch (r) {
          return E0(n, r), !1;
        }
      }
      function yg(n, t, e, i, r) {
        return function s(o) {
          if (o === Function) return i;
          const a = 2 & n.flags ? Rn(n.index, t) : t;
          0 == (32 & t[2]) && eg(a);
          let l = _C(t, 0, i, o),
            c = s.__ngNextListenerFn__;
          for (; c; ) (l = _C(t, 0, c, o) && l), (c = c.__ngNextListenerFn__);
          return r && !1 === l && (o.preventDefault(), (o.returnValue = !1)), l;
        };
      }
      function T(n = 1) {
        return (function (n) {
          return (ue.lFrame.contextLView = (function (n, t) {
            for (; n > 0; ) (t = t[15]), n--;
            return t;
          })(n, ue.lFrame.contextLView))[8];
        })(n);
      }
      function p2(n, t) {
        let e = null;
        const i = (function (n) {
          const t = n.attrs;
          if (null != t) {
            const e = t.indexOf(5);
            if (0 == (1 & e)) return t[e + 1];
          }
          return null;
        })(n);
        for (let r = 0; r < t.length; r++) {
          const s = t[r];
          if ("*" !== s) {
            if (null === i ? Ww(n, s, !0) : yP(i, s)) return r;
          } else e = r;
        }
        return e;
      }
      function Wt(n) {
        const t = k()[16][6];
        if (!t.projection) {
          const i = (t.projection = Pr(n ? n.length : 1, null)),
            r = i.slice();
          let s = t.child;
          for (; null !== s; ) {
            const o = n ? p2(s, n) : 0;
            null !== o &&
              (r[o] ? (r[o].projectionNext = s) : (i[o] = s), (r[o] = s)),
              (s = s.next);
          }
        }
      }
      function Ye(n, t = 0, e) {
        const i = k(),
          r = xe(),
          s = Do(r, 20 + n, 16, null, e || null);
        null === s.projection && (s.projection = t),
          Xf(),
          64 != (64 & s.flags) &&
            (function (n, t, e) {
              $w(t[11], 0, t, e, Rw(n, e, t), Pw(e.parent || t[6], e, t));
            })(r, i, s);
      }
      function SC(n, t, e, i, r) {
        const s = n[e + 1],
          o = null === t;
        let a = i ? _i(s) : ar(s),
          l = !1;
        for (; 0 !== a && (!1 === l || o); ) {
          const u = n[a + 1];
          _2(n[a], t) && ((l = !0), (n[a + 1] = i ? $p(u) : Bp(u))),
            (a = i ? _i(u) : ar(u));
        }
        l && (n[e + 1] = i ? Bp(s) : $p(s));
      }
      function _2(n, t) {
        return (
          null === n ||
          null == t ||
          (Array.isArray(n) ? n[1] : n) === t ||
          (!(!Array.isArray(n) || "string" != typeof t) && go(n, t) >= 0)
        );
      }
      const Nt = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function TC(n) {
        return n.substring(Nt.key, Nt.keyEnd);
      }
      function AC(n, t) {
        const e = Nt.textEnd;
        return e === t
          ? -1
          : ((t = Nt.keyEnd =
              (function (n, t, e) {
                for (; t < e && n.charCodeAt(t) > 32; ) t++;
                return t;
              })(n, (Nt.key = t), e)),
            Bo(n, t, e));
      }
      function Bo(n, t, e) {
        for (; t < e && n.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function Fn(n, t, e) {
        return wi(n, t, e, !1), Fn;
      }
      function q(n, t) {
        return wi(n, t, null, !0), q;
      }
      function vi(n) {
        Ci(In, qi, n, !0);
      }
      function qi(n, t) {
        for (
          let e = (function (n) {
            return (
              (function (n) {
                (Nt.key = 0),
                  (Nt.keyEnd = 0),
                  (Nt.value = 0),
                  (Nt.valueEnd = 0),
                  (Nt.textEnd = n.length);
              })(n),
              AC(n, Bo(n, 0, Nt.textEnd))
            );
          })(t);
          e >= 0;
          e = AC(t, e)
        )
          In(n, TC(t), !0);
      }
      function wi(n, t, e, i) {
        const r = k(),
          s = xe(),
          o = or(2);
        s.firstUpdatePass && OC(s, n, o, i),
          t !== he &&
            sn(r, o, t) &&
            FC(
              s,
              s.data[pn()],
              r,
              r[11],
              n,
              (r[o + 1] = (function (n, t) {
                return (
                  null == n ||
                    ("string" == typeof t
                      ? (n += t)
                      : "object" == typeof n && (n = De(xn(n)))),
                  n
                );
              })(t, e)),
              i,
              o
            );
      }
      function Ci(n, t, e, i) {
        const r = xe(),
          s = or(2);
        r.firstUpdatePass && OC(r, null, s, i);
        const o = k();
        if (e !== he && sn(o, s, e)) {
          const a = r.data[pn()];
          if (VC(a, i) && !xC(r, s)) {
            let l = i ? a.classesWithoutHost : a.stylesWithoutHost;
            null !== l && (e = Pf(l, e || "")), _g(r, a, o, e, i);
          } else
            !(function (n, t, e, i, r, s, o, a) {
              r === he && (r = qe);
              let l = 0,
                c = 0,
                u = 0 < r.length ? r[0] : null,
                d = 0 < s.length ? s[0] : null;
              for (; null !== u || null !== d; ) {
                const h = l < r.length ? r[l + 1] : void 0,
                  p = c < s.length ? s[c + 1] : void 0;
                let _,
                  g = null;
                u === d
                  ? ((l += 2), (c += 2), h !== p && ((g = d), (_ = p)))
                  : null === d || (null !== u && u < d)
                  ? ((l += 2), (g = u))
                  : ((c += 2), (g = d), (_ = p)),
                  null !== g && FC(n, t, e, i, g, _, o, a),
                  (u = l < r.length ? r[l] : null),
                  (d = c < s.length ? s[c] : null);
              }
            })(
              r,
              a,
              o,
              o[11],
              o[s + 1],
              (o[s + 1] = (function (n, t, e) {
                if (null == e || "" === e) return qe;
                const i = [],
                  r = xn(e);
                if (Array.isArray(r))
                  for (let s = 0; s < r.length; s++) n(i, r[s], !0);
                else if ("object" == typeof r)
                  for (const s in r) r.hasOwnProperty(s) && n(i, s, r[s]);
                else "string" == typeof r && t(i, r);
                return i;
              })(n, t, e)),
              i,
              s
            );
        }
      }
      function xC(n, t) {
        return t >= n.expandoStartIndex;
      }
      function OC(n, t, e, i) {
        const r = n.data;
        if (null === r[e + 1]) {
          const s = r[pn()],
            o = xC(n, e);
          VC(s, i) && null === t && !o && (t = !1),
            (t = (function (n, t, e, i) {
              const r = ep(n);
              let s = i ? t.residualClasses : t.residualStyles;
              if (null === r)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((e = Cl((e = vg(null, n, t, e, i)), t.attrs, i)),
                  (s = null));
              else {
                const o = t.directiveStylingLast;
                if (-1 === o || n[o] !== r)
                  if (((e = vg(r, n, t, e, i)), null === s)) {
                    let l = (function (n, t, e) {
                      const i = e ? t.classBindings : t.styleBindings;
                      if (0 !== ar(i)) return n[_i(i)];
                    })(n, t, i);
                    void 0 !== l &&
                      Array.isArray(l) &&
                      ((l = vg(null, n, t, l[1], i)),
                      (l = Cl(l, t.attrs, i)),
                      (function (n, t, e, i) {
                        n[_i(e ? t.classBindings : t.styleBindings)] = i;
                      })(n, t, i, l));
                  } else
                    s = (function (n, t, e) {
                      let i;
                      const r = t.directiveEnd;
                      for (let s = 1 + t.directiveStylingLast; s < r; s++)
                        i = Cl(i, n[s].hostAttrs, e);
                      return Cl(i, t.attrs, e);
                    })(n, t, i);
              }
              return (
                void 0 !== s &&
                  (i ? (t.residualClasses = s) : (t.residualStyles = s)),
                e
              );
            })(r, s, t, i)),
            (function (n, t, e, i, r, s) {
              let o = s ? t.classBindings : t.styleBindings,
                a = _i(o),
                l = ar(o);
              n[i] = e;
              let u,
                c = !1;
              if (Array.isArray(e)) {
                const d = e;
                (u = d[1]), (null === u || go(d, u) > 0) && (c = !0);
              } else u = e;
              if (r)
                if (0 !== l) {
                  const h = _i(n[a + 1]);
                  (n[i + 1] = Mu(h, a)),
                    0 !== h && (n[h + 1] = Hp(n[h + 1], i)),
                    (n[a + 1] = (function (n, t) {
                      return (131071 & n) | (t << 17);
                    })(n[a + 1], i));
                } else
                  (n[i + 1] = Mu(a, 0)),
                    0 !== a && (n[a + 1] = Hp(n[a + 1], i)),
                    (a = i);
              else
                (n[i + 1] = Mu(l, 0)),
                  0 === a ? (a = i) : (n[l + 1] = Hp(n[l + 1], i)),
                  (l = i);
              c && (n[i + 1] = Bp(n[i + 1])),
                SC(n, u, i, !0),
                SC(n, u, i, !1),
                (function (n, t, e, i, r) {
                  const s = r ? n.residualClasses : n.residualStyles;
                  null != s &&
                    "string" == typeof t &&
                    go(s, t) >= 0 &&
                    (e[i + 1] = $p(e[i + 1]));
                })(t, u, n, i, s),
                (o = Mu(a, l)),
                s ? (t.classBindings = o) : (t.styleBindings = o);
            })(r, s, t, e, o, i);
        }
      }
      function vg(n, t, e, i, r) {
        let s = null;
        const o = e.directiveEnd;
        let a = e.directiveStylingLast;
        for (
          -1 === a ? (a = e.directiveStart) : a++;
          a < o && ((s = t[a]), (i = Cl(i, s.hostAttrs, r)), s !== n);

        )
          a++;
        return null !== n && (e.directiveStylingLast = a), i;
      }
      function Cl(n, t, e) {
        const i = e ? 1 : 2;
        let r = -1;
        if (null !== t)
          for (let s = 0; s < t.length; s++) {
            const o = t[s];
            "number" == typeof o
              ? (r = o)
              : r === i &&
                (Array.isArray(n) || (n = void 0 === n ? [] : ["", n]),
                In(n, o, !!e || t[++s]));
          }
        return void 0 === n ? null : n;
      }
      function FC(n, t, e, i, r, s, o, a) {
        if (!(3 & t.type)) return;
        const l = n.data,
          c = l[a + 1];
        Lu(
          (function (n) {
            return 1 == (1 & n);
          })(c)
            ? LC(l, t, e, r, ar(c), o)
            : void 0
        ) ||
          (Lu(s) ||
            ((function (n) {
              return 2 == (2 & n);
            })(c) &&
              (s = LC(l, null, e, r, a, o))),
          (function (n, t, e, i, r) {
            const s = ht(n);
            if (t)
              r
                ? s
                  ? n.addClass(e, i)
                  : e.classList.add(i)
                : s
                ? n.removeClass(e, i)
                : e.classList.remove(i);
            else {
              let o = -1 === i.indexOf("-") ? void 0 : On.DashCase;
              if (null == r)
                s ? n.removeStyle(e, i, o) : e.style.removeProperty(i);
              else {
                const a = "string" == typeof r && r.endsWith("!important");
                a && ((r = r.slice(0, -10)), (o |= On.Important)),
                  s
                    ? n.setStyle(e, i, r, o)
                    : e.style.setProperty(i, r, a ? "important" : "");
              }
            }
          })(i, o, Xc(pn(), e), r, s));
      }
      function LC(n, t, e, i, r, s) {
        const o = null === t;
        let a;
        for (; r > 0; ) {
          const l = n[r],
            c = Array.isArray(l),
            u = c ? l[1] : l,
            d = null === u;
          let h = e[r + 1];
          h === he && (h = d ? qe : void 0);
          let p = d ? dp(h, i) : u === i ? h : void 0;
          if ((c && !Lu(p) && (p = dp(l, i)), Lu(p) && ((a = p), o))) return a;
          const g = n[r + 1];
          r = o ? _i(g) : ar(g);
        }
        if (null !== t) {
          let l = s ? t.residualClasses : t.residualStyles;
          null != l && (a = dp(l, i));
        }
        return a;
      }
      function Lu(n) {
        return void 0 !== n;
      }
      function VC(n, t) {
        return 0 != (n.flags & (t ? 16 : 32));
      }
      function I(n, t = "") {
        const e = k(),
          i = xe(),
          r = n + 20,
          s = i.firstCreatePass ? Do(i, r, 1, t, null) : i.data[r],
          o = (e[r] = (function (n, t) {
            return ht(n) ? n.createText(t) : n.createTextNode(t);
          })(e[11], t));
        Du(i, e, o, s), Li(s, !1);
      }
      function Ke(n) {
        return ye("", n, ""), Ke;
      }
      function ye(n, t, e) {
        const i = k(),
          r = No(i, n, t, e);
        return r !== he && cr(i, pn(), r), ye;
      }
      function Bt(n, t, e) {
        const i = k();
        return sn(i, so(), t) && Pn(xe(), ft(), i, n, t, i[11], e, !0), Bt;
      }
      function Vu(n, t, e) {
        const i = k();
        if (sn(i, so(), t)) {
          const s = xe(),
            o = ft();
          Pn(s, o, i, n, t, D0(ep(s.data), o, i), e, !0);
        }
        return Vu;
      }
      const ms = void 0;
      var K2 = [
        "en",
        [["a", "p"], ["AM", "PM"], ms],
        [["AM", "PM"], ms, ms],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        ms,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        ms,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", ms, "{1} 'at' {0}", ms],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function (n) {
          const t = Math.floor(Math.abs(n)),
            e = n.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === t && 0 === e ? 1 : 5;
        },
      ];
      let Ho = {};
      function s1(n) {
        return (
          n in Ho ||
            (Ho[n] =
              ze.ng &&
              ze.ng.common &&
              ze.ng.common.locales &&
              ze.ng.common.locales[n]),
          Ho[n]
        );
      }
      var $ = (() => (
        (($ = $ || {})[($.LocaleId = 0)] = "LocaleId"),
        ($[($.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
        ($[($.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
        ($[($.DaysFormat = 3)] = "DaysFormat"),
        ($[($.DaysStandalone = 4)] = "DaysStandalone"),
        ($[($.MonthsFormat = 5)] = "MonthsFormat"),
        ($[($.MonthsStandalone = 6)] = "MonthsStandalone"),
        ($[($.Eras = 7)] = "Eras"),
        ($[($.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
        ($[($.WeekendRange = 9)] = "WeekendRange"),
        ($[($.DateFormat = 10)] = "DateFormat"),
        ($[($.TimeFormat = 11)] = "TimeFormat"),
        ($[($.DateTimeFormat = 12)] = "DateTimeFormat"),
        ($[($.NumberSymbols = 13)] = "NumberSymbols"),
        ($[($.NumberFormats = 14)] = "NumberFormats"),
        ($[($.CurrencyCode = 15)] = "CurrencyCode"),
        ($[($.CurrencySymbol = 16)] = "CurrencySymbol"),
        ($[($.CurrencyName = 17)] = "CurrencyName"),
        ($[($.Currencies = 18)] = "Currencies"),
        ($[($.Directionality = 19)] = "Directionality"),
        ($[($.PluralCase = 20)] = "PluralCase"),
        ($[($.ExtraData = 21)] = "ExtraData"),
        $
      ))();
      const Bu = "en-US";
      let o1 = Bu;
      function wg(n) {
        kn(n, "Expected localeId to be defined"),
          "string" == typeof n && (o1 = n.toLowerCase().replace(/_/g, "-"));
      }
      function Eg(n, t, e, i, r) {
        if (((n = ee(n)), Array.isArray(n)))
          for (let s = 0; s < n.length; s++) Eg(n[s], t, e, i, r);
        else {
          const s = xe(),
            o = k();
          let a = To(n) ? n : ee(n.provide),
            l = k0(n);
          const c = At(),
            u = 1048575 & c.providerIndexes,
            d = c.directiveStart,
            h = c.providerIndexes >> 20;
          if (To(n) || !n.multi) {
            const p = new Qa(l, r, f),
              g = Sg(a, t, r ? u : u + h, d);
            -1 === g
              ? (uu(Za(c, o), s, a),
                Mg(s, n, t.length),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(p),
                o.push(p))
              : ((e[g] = p), (o[g] = p));
          } else {
            const p = Sg(a, t, u + h, d),
              g = Sg(a, t, u, u + h),
              _ = p >= 0 && e[p],
              y = g >= 0 && e[g];
            if ((r && !y) || (!r && !_)) {
              uu(Za(c, o), s, a);
              const E = (function (n, t, e, i, r) {
                const s = new Qa(n, e, f);
                return (
                  (s.multi = []),
                  (s.index = t),
                  (s.componentProviders = 0),
                  k1(s, r, i && !e),
                  s
                );
              })(r ? zL : UL, e.length, r, i, l);
              !r && y && (e[g].providerFactory = E),
                Mg(s, n, t.length, 0),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(E),
                o.push(E);
            } else Mg(s, n, p > -1 ? p : g, k1(e[r ? g : p], l, !r && i));
            !r && i && y && e[g].componentProviders++;
          }
        }
      }
      function Mg(n, t, e, i) {
        const r = To(t);
        if (
          r ||
          (function (n) {
            return !!n.useClass;
          })(t)
        ) {
          const o = (t.useClass || t).prototype.ngOnDestroy;
          if (o) {
            const a = n.destroyHooks || (n.destroyHooks = []);
            if (!r && t.multi) {
              const l = a.indexOf(e);
              -1 === l ? a.push(e, [i, o]) : a[l + 1].push(i, o);
            } else a.push(e, o);
          }
        }
      }
      function k1(n, t, e) {
        return e && n.componentProviders++, n.multi.push(t) - 1;
      }
      function Sg(n, t, e, i) {
        for (let r = e; r < i; r++) if (t[r] === n) return r;
        return -1;
      }
      function UL(n, t, e, i) {
        return Tg(this.multi, []);
      }
      function zL(n, t, e, i) {
        const r = this.multi;
        let s;
        if (this.providerFactory) {
          const o = this.providerFactory.componentProviders,
            a = el(e, e[1], this.providerFactory.index, i);
          (s = a.slice(0, o)), Tg(r, s);
          for (let l = o; l < a.length; l++) s.push(a[l]);
        } else (s = []), Tg(r, s);
        return s;
      }
      function Tg(n, t) {
        for (let e = 0; e < n.length; e++) t.push((0, n[e])());
        return t;
      }
      function Y(n, t = []) {
        return (e) => {
          e.providersResolver = (i, r) =>
            (function (n, t, e) {
              const i = xe();
              if (i.firstCreatePass) {
                const r = pi(n);
                Eg(e, i.data, i.blueprint, r, !0),
                  Eg(t, i.data, i.blueprint, r, !1);
              }
            })(i, r ? r(n) : n, t);
        };
      }
      class N1 {}
      const I1 = "ngComponent";
      class qL {
        resolveComponentFactory(t) {
          throw (function (n) {
            const t = Error(
              `No component factory found for ${De(
                n
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (t[I1] = n), t;
          })(t);
        }
      }
      class on {}
      function zu(...n) {}
      function Uo(n, t) {
        return new L(Yn(n, t));
      }
      on.NULL = new qL();
      const JL = function () {
        return Uo(At(), k());
      };
      let L = (() => {
        class n {
          constructor(e) {
            this.nativeElement = e;
          }
        }
        return (n.__NG_ELEMENT_ID__ = JL), n;
      })();
      function x1(n) {
        return n instanceof L ? n.nativeElement : n;
      }
      class hr {}
      let Yt = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = () => XL()), n;
      })();
      const XL = function () {
        const n = k(),
          e = Rn(At().index, n);
        return (function (n) {
          return n[11];
        })(Fi(e) ? e : n);
      };
      let kg = (() => {
        class n {}
        return (
          (n.ɵprov = A({ token: n, providedIn: "root", factory: () => null })),
          n
        );
      })();
      class Vr {
        constructor(t) {
          (this.full = t),
            (this.major = t.split(".")[0]),
            (this.minor = t.split(".")[1]),
            (this.patch = t.split(".").slice(2).join("."));
        }
      }
      const O1 = new Vr("12.2.5");
      class P1 {
        constructor() {}
        supports(t) {
          return bl(t);
        }
        create(t) {
          return new nV(t);
        }
      }
      const tV = (n, t) => t;
      class nV {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || tV);
        }
        forEachItem(t) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) t(e);
        }
        forEachOperation(t) {
          let e = this._itHead,
            i = this._removalsHead,
            r = 0,
            s = null;
          for (; e || i; ) {
            const o = !i || (e && e.currentIndex < L1(i, r, s)) ? e : i,
              a = L1(o, r, s),
              l = o.currentIndex;
            if (o === i) r--, (i = i._nextRemoved);
            else if (((e = e._next), null == o.previousIndex)) r++;
            else {
              s || (s = []);
              const c = a - r,
                u = l - r;
              if (c != u) {
                for (let h = 0; h < c; h++) {
                  const p = h < s.length ? s[h] : (s[h] = 0),
                    g = p + h;
                  u <= g && g < c && (s[h] = p + 1);
                }
                s[o.previousIndex] = u - c;
              }
            }
            a !== l && t(o, a, l);
          }
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachMovedItem(t) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        forEachIdentityChange(t) {
          let e;
          for (
            e = this._identityChangesHead;
            null !== e;
            e = e._nextIdentityChange
          )
            t(e);
        }
        diff(t) {
          if ((null == t && (t = []), !bl(t)))
            throw new Error(
              `Error trying to diff '${De(
                t
              )}'. Only arrays and iterables are allowed`
            );
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let r,
            s,
            o,
            e = this._itHead,
            i = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let a = 0; a < this.length; a++)
              (s = t[a]),
                (o = this._trackByFn(a, s)),
                null !== e && Object.is(e.trackById, o)
                  ? (i && (e = this._verifyReinsertion(e, s, o, a)),
                    Object.is(e.item, s) || this._addIdentityChange(e, s))
                  : ((e = this._mismatch(e, s, o, a)), (i = !0)),
                (e = e._next);
          } else
            (r = 0),
              (function (n, t) {
                if (Array.isArray(n))
                  for (let e = 0; e < n.length; e++) t(n[e]);
                else {
                  const e = n[Ao()]();
                  let i;
                  for (; !(i = e.next()).done; ) t(i.value);
                }
              })(t, (a) => {
                (o = this._trackByFn(r, a)),
                  null !== e && Object.is(e.trackById, o)
                    ? (i && (e = this._verifyReinsertion(e, a, o, r)),
                      Object.is(e.item, a) || this._addIdentityChange(e, a))
                    : ((e = this._mismatch(e, a, o, r)), (i = !0)),
                  (e = e._next),
                  r++;
              }),
              (this.length = r);
          return this._truncate(e), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, e, i, r) {
          let s;
          return (
            null === t ? (s = this._itTail) : ((s = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._reinsertAfter(t, s, r))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, r))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e),
                this._moveAfter(t, s, r))
              : (t = this._addAfter(new iV(e, i), s, r)),
            t
          );
        }
        _verifyReinsertion(t, e, i, r) {
          let s =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== s
              ? (t = this._reinsertAfter(s, t._prev, r))
              : t.currentIndex != r &&
                ((t.currentIndex = r), this._addToMoves(t, r)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const e = t._next;
            this._addToRemovals(this._unlink(t)), (t = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, e, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const r = t._prevRemoved,
            s = t._nextRemoved;
          return (
            null === r ? (this._removalsHead = s) : (r._nextRemoved = s),
            null === s ? (this._removalsTail = r) : (s._prevRemoved = r),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _moveAfter(t, e, i) {
          return (
            this._unlink(t),
            this._insertAfter(t, e, i),
            this._addToMoves(t, i),
            t
          );
        }
        _addAfter(t, e, i) {
          return (
            this._insertAfter(t, e, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, e, i) {
          const r = null === e ? this._itHead : e._next;
          return (
            (t._next = r),
            (t._prev = e),
            null === r ? (this._itTail = t) : (r._prev = t),
            null === e ? (this._itHead = t) : (e._next = t),
            null === this._linkedRecords && (this._linkedRecords = new F1()),
            this._linkedRecords.put(t),
            (t.currentIndex = i),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const e = t._prev,
            i = t._next;
          return (
            null === e ? (this._itHead = i) : (e._next = i),
            null === i ? (this._itTail = e) : (i._prev = e),
            t
          );
        }
        _addToMoves(t, e) {
          return (
            t.previousIndex === e ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new F1()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, e) {
          return (
            (t.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class iV {
        constructor(t, e) {
          (this.item = t),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class rV {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, e) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === e || e <= i.currentIndex) &&
              Object.is(i.trackById, t)
            )
              return i;
          return null;
        }
        remove(t) {
          const e = t._prevDup,
            i = t._nextDup;
          return (
            null === e ? (this._head = i) : (e._nextDup = i),
            null === i ? (this._tail = e) : (i._prevDup = e),
            null === this._head
          );
        }
      }
      class F1 {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const e = t.trackById;
          let i = this.map.get(e);
          i || ((i = new rV()), this.map.set(e, i)), i.add(t);
        }
        get(t, e) {
          const r = this.map.get(t);
          return r ? r.get(t, e) : null;
        }
        remove(t) {
          const e = t.trackById;
          return this.map.get(e).remove(t) && this.map.delete(e), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function L1(n, t, e) {
        const i = n.previousIndex;
        if (null === i) return i;
        let r = 0;
        return e && i < e.length && (r = e[i]), i + t + r;
      }
      class V1 {
        constructor() {}
        supports(t) {
          return t instanceof Map || hg(t);
        }
        create() {
          return new sV();
        }
      }
      class sV {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) t(e);
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachChangedItem(t) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || hg(t)))
              throw new Error(
                `Error trying to diff '${De(
                  t
                )}'. Only maps and objects are allowed`
              );
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (i, r) => {
              if (e && e.key === r)
                this._maybeAddToChanges(e, i),
                  (this._appendAfter = e),
                  (e = e._next);
              else {
                const s = this._getOrCreateRecordForKey(r, i);
                e = this._insertBeforeOrAppend(e, s);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let i = e; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, e) {
          if (t) {
            const i = t._prev;
            return (
              (e._next = t),
              (e._prev = i),
              (t._prev = e),
              i && (i._next = e),
              t === this._mapHead && (this._mapHead = e),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = e), (e._prev = this._appendAfter))
              : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(t, e) {
          if (this._records.has(t)) {
            const r = this._records.get(t);
            this._maybeAddToChanges(r, e);
            const s = r._prev,
              o = r._next;
            return (
              s && (s._next = o),
              o && (o._prev = s),
              (r._next = null),
              (r._prev = null),
              r
            );
          }
          const i = new oV(t);
          return (
            this._records.set(t, i),
            (i.currentValue = e),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, e) {
          Object.is(e, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = e),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, e) {
          t instanceof Map
            ? t.forEach(e)
            : Object.keys(t).forEach((i) => e(t[i], i));
        }
      }
      class oV {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function B1() {
        return new Di([new P1()]);
      }
      let Di = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (null != i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || B1()),
              deps: [[n, new Hi(), new nn()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (null != i) return i;
            throw new Error(
              `Cannot find a differ supporting object '${e}' of type '${(function (
                n
              ) {
                return n.name || typeof n;
              })(e)}'`
            );
          }
        }
        return (n.ɵprov = A({ token: n, providedIn: "root", factory: B1 })), n;
      })();
      function H1() {
        return new zo([new V1()]);
      }
      let zo = (() => {
        class n {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new n(e);
          }
          static extend(e) {
            return {
              provide: n,
              useFactory: (i) => n.create(e, i || H1()),
              deps: [[n, new Hi(), new nn()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (i) return i;
            throw new Error(`Cannot find a differ supporting object '${e}'`);
          }
        }
        return (n.ɵprov = A({ token: n, providedIn: "root", factory: H1 })), n;
      })();
      function Gu(n, t, e, i, r = !1) {
        for (; null !== e; ) {
          const s = t[e.index];
          if ((null !== s && i.push(wt(s)), fi(s)))
            for (let a = 10; a < s.length; a++) {
              const l = s[a],
                c = l[1].firstChild;
              null !== c && Gu(l[1], l, c, i);
            }
          const o = e.type;
          if (8 & o) Gu(n, t, e.child, i);
          else if (32 & o) {
            const a = Ap(e, t);
            let l;
            for (; (l = a()); ) i.push(l);
          } else if (16 & o) {
            const a = Bw(t, e);
            if (Array.isArray(a)) i.push(...a);
            else {
              const l = hl(t[16]);
              Gu(l[1], l, a, i, !0);
            }
          }
          e = r ? e.projectionNext : e.next;
        }
        return i;
      }
      class Al {
        constructor(t, e) {
          (this._lView = t),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const t = this._lView,
            e = t[1];
          return Gu(e, t, e.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        set context(t) {
          this._lView[8] = t;
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[3];
            if (fi(t)) {
              const e = t[8],
                i = e ? e.indexOf(this) : -1;
              i > -1 && (xp(t, i), us(e, i));
            }
            this._attachedToViewContainer = !1;
          }
          Nw(this._lView[1], this._lView);
        }
        onDestroy(t) {
          d0(this._lView[1], this._lView, null, t);
        }
        markForCheck() {
          eg(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          ng(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function (n, t, e) {
            eu(!0);
            try {
              ng(n, t, e);
            } finally {
              eu(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef() {
          if (this._appRef)
            throw new Error(
              "This view is already attached directly to the ApplicationRef!"
            );
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function (n, t) {
              fl(n, t, t[11], 2, null, null);
            })(this._lView[1], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer)
            throw new Error(
              "This view is already attached to a ViewContainer!"
            );
          this._appRef = t;
        }
      }
      class lV extends Al {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          v0(this._view);
        }
        checkNoChanges() {
          !(function (n) {
            eu(!0);
            try {
              v0(n);
            } finally {
              eu(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      const uV = function (n) {
        return (function (n, t, e) {
          if (Jc(n) && !e) {
            const i = Rn(n.index, t);
            return new Al(i, i);
          }
          return 47 & n.type ? new Al(t[16], t) : null;
        })(At(), k(), 16 == (16 & n));
      };
      let Be = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = uV), n;
      })();
      const fV = [new V1()],
        gV = new Di([new P1()]),
        mV = new zo(fV),
        yV = function () {
          return Wu(At(), k());
        };
      let Se = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = yV), n;
      })();
      const bV = Se,
        vV = class extends bV {
          constructor(t, e, i) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = e),
              (this.elementRef = i);
          }
          createEmbeddedView(t) {
            const e = this._declarationTContainer.tViews,
              i = pl(
                this._declarationLView,
                e,
                t,
                16,
                null,
                e.declTNode,
                null,
                null,
                null,
                null
              );
            i[17] = this._declarationLView[this._declarationTContainer.index];
            const s = this._declarationLView[19];
            return (
              null !== s && (i[19] = s.createEmbeddedView(e)),
              gl(e, i, t),
              new Al(i)
            );
          }
        };
      function Wu(n, t) {
        return 4 & n.type ? new vV(t, n, Uo(n, t)) : null;
      }
      class Yi {}
      class $1 {}
      const DV = function () {
        return z1(At(), k());
      };
      let Ze = (() => {
        class n {}
        return (n.__NG_ELEMENT_ID__ = DV), n;
      })();
      const MV = Ze,
        j1 = class extends MV {
          constructor(t, e, i) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = e),
              (this._hostLView = i);
          }
          get element() {
            return Uo(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new co(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = cu(this._hostTNode, this._hostLView);
            if (xv(t)) {
              const e = lo(t, this._hostLView),
                i = ao(t);
              return new co(e[1].data[i + 8], e);
            }
            return new co(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const e = U1(this._lContainer);
            return (null !== e && e[t]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(t, e, i) {
            const r = t.createEmbeddedView(e || {});
            return this.insert(r, i), r;
          }
          createComponent(t, e, i, r, s) {
            const o = i || this.parentInjector;
            if (!s && null == t.ngModule && o) {
              const l = o.get(Yi, null);
              l && (s = l);
            }
            const a = t.create(o, r, void 0, s);
            return this.insert(a.hostView, e), a;
          }
          insert(t, e) {
            const i = t._lView,
              r = i[1];
            if (
              (function (n) {
                return fi(n[3]);
              })(i)
            ) {
              const u = this.indexOf(t);
              if (-1 !== u) this.detach(u);
              else {
                const d = i[3],
                  h = new j1(d, d[6], d[3]);
                h.detach(h.indexOf(t));
              }
            }
            const s = this._adjustIndex(e),
              o = this._lContainer;
            !(function (n, t, e, i) {
              const r = 10 + i,
                s = e.length;
              i > 0 && (e[r - 1][4] = t),
                i < s - 10
                  ? ((t[4] = e[r]), fu(e, 10 + i, t))
                  : (e.push(t), (t[4] = null)),
                (t[3] = e);
              const o = t[17];
              null !== o &&
                e !== o &&
                (function (n, t) {
                  const e = n[9];
                  t[16] !== t[3][3][16] && (n[2] = !0),
                    null === e ? (n[9] = [t]) : e.push(t);
                })(o, t);
              const a = t[19];
              null !== a && a.insertView(n), (t[2] |= 128);
            })(r, i, o, s);
            const a = Fp(s, o),
              l = i[11],
              c = Cu(l, o[7]);
            return (
              null !== c &&
                (function (n, t, e, i, r, s) {
                  (i[0] = r), (i[6] = t), fl(n, i, e, 1, r, s);
                })(r, o[6], l, i, c, a),
              t.attachToViewContainerRef(),
              fu(Ng(o), s, t),
              t
            );
          }
          move(t, e) {
            return this.insert(t, e);
          }
          indexOf(t) {
            const e = U1(this._lContainer);
            return null !== e ? e.indexOf(t) : -1;
          }
          remove(t) {
            const e = this._adjustIndex(t, -1),
              i = xp(this._lContainer, e);
            i && (us(Ng(this._lContainer), e), Nw(i[1], i));
          }
          detach(t) {
            const e = this._adjustIndex(t, -1),
              i = xp(this._lContainer, e);
            return i && null != us(Ng(this._lContainer), e) ? new Al(i) : null;
          }
          _adjustIndex(t, e = 0) {
            return null == t ? this.length + e : t;
          }
        };
      function U1(n) {
        return n[8];
      }
      function Ng(n) {
        return n[8] || (n[8] = []);
      }
      function z1(n, t) {
        let e;
        const i = t[n.index];
        if (fi(i)) e = i;
        else {
          let r;
          if (8 & n.type) r = wt(i);
          else {
            const s = t[11];
            r = s.createComment("");
            const o = Yn(n, t);
            ps(
              s,
              Cu(s, o),
              r,
              (function (n, t) {
                return ht(n) ? n.nextSibling(t) : t.nextSibling;
              })(s, o),
              !1
            );
          }
          (t[n.index] = e = b0(i, t, r, n)), ku(t, e);
        }
        return new j1(e, n, t);
      }
      const Yo = {};
      class uD extends on {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = hn(t);
          return new hD(e, this.ngModule);
        }
      }
      function dD(n) {
        const t = [];
        for (let e in n)
          n.hasOwnProperty(e) && t.push({ propName: n[e], templateName: e });
        return t;
      }
      const wB = new P("SCHEDULER_TOKEN", {
        providedIn: "root",
        factory: () => Cw,
      });
      class hD extends N1 {
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = (function (n) {
              return n.map(bP).join(",");
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        get inputs() {
          return dD(this.componentDef.inputs);
        }
        get outputs() {
          return dD(this.componentDef.outputs);
        }
        create(t, e, i, r) {
          const s = (r = r || this.ngModule)
              ? (function (n, t) {
                  return {
                    get: (e, i, r) => {
                      const s = n.get(e, Yo, r);
                      return s !== Yo || i === Yo ? s : t.get(e, i, r);
                    },
                  };
                })(t, r.injector)
              : t,
            o = s.get(hr, _v),
            a = s.get(kg, null),
            l = o.createRenderer(null, this.componentDef),
            c = this.componentDef.selectors[0][0] || "div",
            u = i
              ? (function (n, t, e) {
                  if (ht(n)) return n.selectRootElement(t, e === vt.ShadowDom);
                  let i = "string" == typeof t ? n.querySelector(t) : t;
                  return (i.textContent = ""), i;
                })(l, i, this.componentDef.encapsulation)
              : Ip(
                  o.createRenderer(null, this.componentDef),
                  c,
                  (function (n) {
                    const t = n.toLowerCase();
                    return "svg" === t
                      ? gv
                      : "math" === t
                      ? "http://www.w3.org/1998/MathML/"
                      : null;
                  })(c)
                ),
            d = this.componentDef.onPush ? 576 : 528,
            h = (function (n, t) {
              return {
                components: [],
                scheduler: n || Cw,
                clean: iF,
                playerHandler: t || null,
                flags: 0,
              };
            })(),
            p = Au(0, null, null, 1, 0, null, null, null, null, null),
            g = pl(null, p, h, d, null, null, o, l, a, s);
          let _, y;
          tu(g);
          try {
            const E = (function (n, t, e, i, r, s) {
              const o = e[1];
              e[20] = n;
              const l = Do(o, 20, 2, "#host", null),
                c = (l.mergedAttrs = t.hostAttrs);
              null !== c &&
                (Nu(l, c, !0),
                null !== n &&
                  (ou(r, n, c),
                  null !== l.classes && Vp(r, n, l.classes),
                  null !== l.styles && jw(r, n, l.styles)));
              const u = i.createRenderer(n, t),
                d = pl(
                  e,
                  l0(t),
                  null,
                  t.onPush ? 64 : 16,
                  e[20],
                  l,
                  i,
                  u,
                  s || null,
                  null
                );
              return (
                o.firstCreatePass &&
                  (uu(Za(l, e), o, t.type), m0(o, l), _0(l, e.length, 1)),
                ku(e, d),
                (e[20] = d)
              );
            })(u, this.componentDef, g, o, l);
            if (u)
              if (i) ou(l, u, ["ng-version", O1.full]);
              else {
                const { attrs: C, classes: N } = (function (n) {
                  const t = [],
                    e = [];
                  let i = 1,
                    r = 2;
                  for (; i < n.length; ) {
                    let s = n[i];
                    if ("string" == typeof s)
                      2 === r
                        ? "" !== s && t.push(s, n[++i])
                        : 8 === r && e.push(s);
                    else {
                      if (!mi(r)) break;
                      r = s;
                    }
                    i++;
                  }
                  return { attrs: t, classes: e };
                })(this.componentDef.selectors[0]);
                C && ou(l, u, C), N && N.length > 0 && Vp(l, u, N.join(" "));
              }
            if (((y = Yf(p, 20)), void 0 !== e)) {
              const C = (y.projection = []);
              for (let N = 0; N < this.ngContentSelectors.length; N++) {
                const x = e[N];
                C.push(null != x ? Array.from(x) : null);
              }
            }
            (_ = (function (n, t, e, i, r) {
              const s = e[1],
                o = (function (n, t, e) {
                  const i = At();
                  n.firstCreatePass &&
                    (e.providersResolver && e.providersResolver(e),
                    y0(n, i, t, Eo(n, t, 1, null), e));
                  const r = el(t, n, i.directiveStart, i);
                  rn(r, t);
                  const s = Yn(i, t);
                  return s && rn(s, t), r;
                })(s, e, t);
              if (
                (i.components.push(o),
                (n[8] = o),
                r && r.forEach((l) => l(o, t)),
                t.contentQueries)
              ) {
                const l = At();
                t.contentQueries(1, o, l.directiveStart);
              }
              const a = At();
              return (
                !s.firstCreatePass ||
                  (null === t.hostBindings && null === t.hostAttrs) ||
                  (xr(a.index),
                  p0(e[1], a, 0, a.directiveStart, a.directiveEnd, t),
                  g0(t, o)),
                o
              );
            })(E, this.componentDef, g, h, [kF])),
              gl(p, g, null);
          } finally {
            nu();
          }
          return new EB(this.componentType, _, Uo(y, g), g, y);
        }
      }
      class EB extends class {} {
        constructor(t, e, i, r, s) {
          super(),
            (this.location = i),
            (this._rootLView = r),
            (this._tNode = s),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new lV(r)),
            (this.componentType = t);
        }
        get injector() {
          return new co(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      const Ko = new Map();
      class TB extends Yi {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new uD(this));
          const i = Gn(t),
            r = (function (n) {
              return n[LI] || null;
            })(t);
          r && wg(r),
            (this._bootstrapComponents = Ui(i.bootstrap)),
            (this._r3Injector = A0(
              t,
              e,
              [
                { provide: Yi, useValue: this },
                { provide: on, useValue: this.componentFactoryResolver },
              ],
              De(t)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(t));
        }
        get(t, e = ae.THROW_IF_NOT_FOUND, i = te.Default) {
          return t === ae || t === Yi || t === ur
            ? this
            : this._r3Injector.get(t, e, i);
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class Ug extends $1 {
        constructor(t) {
          super(),
            (this.moduleType = t),
            null !== Gn(t) &&
              (function (n) {
                const t = new Set();
                !(function e(i) {
                  const r = Gn(i, !0),
                    s = r.id;
                  null !== s &&
                    ((function (n, t, e) {
                      if (t && t !== e)
                        throw new Error(
                          `Duplicate module registered for ${n} - ${De(
                            t
                          )} vs ${De(t.name)}`
                        );
                    })(s, Ko.get(s), i),
                    Ko.set(s, i));
                  const o = Ui(r.imports);
                  for (const a of o) t.has(a) || (t.add(a), e(a));
                })(n);
              })(t);
        }
        create(t) {
          return new TB(this.moduleType, t);
        }
      }
      function zg(n, t, e) {
        const i = fn() + n,
          r = k();
        return r[i] === he
          ? Gi(r, i, e ? t.call(e) : t())
          : (function (n, t) {
              return n[t];
            })(r, i);
      }
      function Jo(n, t, e, i) {
        return gD(k(), fn(), n, t, e, i);
      }
      function gD(n, t, e, i, r, s) {
        const o = t + e;
        return sn(n, o, r)
          ? Gi(n, o + 1, s ? i.call(s, r) : i(r))
          : (function (n, t) {
              const e = n[t];
              return e === he ? void 0 : e;
            })(n, o + 1);
      }
      function Wg(n, t, e) {
        const i = n + 20,
          r = k(),
          s = ro(r, i);
        return (function (n, t) {
          bi.isWrapped(t) &&
            ((t = bi.unwrap(t)), (n[ue.lFrame.bindingIndex] = he));
          return t;
        })(
          r,
          (function (n, t) {
            return n[1].data[t].pure;
          })(r, i)
            ? gD(r, fn(), t, s.transform, e, s)
            : s.transform(e)
        );
      }
      function qg(n) {
        return (t) => {
          setTimeout(n, void 0, t);
        };
      }
      const F = class extends O {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, i) {
          var r, s, o;
          let a = t,
            l = e || (() => null),
            c = i;
          if (t && "object" == typeof t) {
            const d = t;
            (a = null === (r = d.next) || void 0 === r ? void 0 : r.bind(d)),
              (l = null === (s = d.error) || void 0 === s ? void 0 : s.bind(d)),
              (c =
                null === (o = d.complete) || void 0 === o ? void 0 : o.bind(d));
          }
          this.__isAsync && ((l = qg(l)), a && (a = qg(a)), c && (c = qg(c)));
          const u = super.subscribe({ next: a, error: l, complete: c });
          return t instanceof Ve && t.add(u), u;
        }
      };
      function HB() {
        return this._results[Ao()]();
      }
      class Qo {
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = Ao(),
            i = Qo.prototype;
          i[e] || (i[e] = HB);
        }
        get changes() {
          return this._changes || (this._changes = new F());
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, e) {
          const i = this;
          i.dirty = !1;
          const r = Kn(t);
          (this._changesDetected = !(function (n, t, e) {
            if (n.length !== t.length) return !1;
            for (let i = 0; i < n.length; i++) {
              let r = n[i],
                s = t[i];
              if ((e && ((r = e(r)), (s = e(s))), s !== r)) return !1;
            }
            return !0;
          })(i._results, r, e)) &&
            ((i._results = r),
            (i.length = r.length),
            (i.last = r[this.length - 1]),
            (i.first = r[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      Symbol;
      class Yg {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new Yg(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Kg {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const i =
                null !== t.contentQueries ? t.contentQueries[0] : e.length,
              r = [];
            for (let s = 0; s < i; s++) {
              const o = e.getByIndex(s);
              r.push(this.queries[o.indexInDeclarationView].clone());
            }
            return new Kg(r);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++)
            null !== ED(t, e).matches && this.queries[e].setDirty();
        }
      }
      class vD {
        constructor(t, e, i = null) {
          (this.predicate = t), (this.flags = e), (this.read = i);
        }
      }
      class Jg {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let i = 0; i < this.length; i++) {
            const r = null !== e ? e.length : 0,
              s = this.getByIndex(i).embeddedTView(t, r);
            s &&
              ((s.indexInDeclarationView = i),
              null !== e ? e.push(s) : (e = [s]));
          }
          return null !== e ? new Jg(e) : null;
        }
        template(t, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class Qg {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, e),
              new Qg(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let i = t.parent;
            for (; null !== i && 8 & i.type && i.index !== e; ) i = i.parent;
            return e === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let r = 0; r < i.length; r++) {
              const s = i[r];
              this.matchTNodeWithReadOption(t, e, UB(e, s)),
                this.matchTNodeWithReadOption(t, e, du(e, t, s, !1, !1));
            }
          else
            i === Se
              ? 4 & e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, du(e, t, i, !1, !1));
        }
        matchTNodeWithReadOption(t, e, i) {
          if (null !== i) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === L || r === Ze || (r === Se && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const s = du(e, t, r, !1, !1);
                null !== s && this.addMatch(e.index, s);
              }
            else this.addMatch(e.index, i);
          }
        }
        addMatch(t, e) {
          null === this.matches
            ? (this.matches = [t, e])
            : this.matches.push(t, e);
        }
      }
      function UB(n, t) {
        const e = n.localNames;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) if (e[i] === t) return e[i + 1];
        return null;
      }
      function GB(n, t, e, i) {
        return -1 === e
          ? (function (n, t) {
              return 11 & n.type ? Uo(n, t) : 4 & n.type ? Wu(n, t) : null;
            })(t, n)
          : -2 === e
          ? (function (n, t, e) {
              return e === L
                ? Uo(t, n)
                : e === Se
                ? Wu(t, n)
                : e === Ze
                ? z1(t, n)
                : void 0;
            })(n, t, i)
          : el(n, n[1], e, t);
      }
      function wD(n, t, e, i) {
        const r = t[19].queries[i];
        if (null === r.matches) {
          const s = n.data,
            o = e.matches,
            a = [];
          for (let l = 0; l < o.length; l += 2) {
            const c = o[l];
            a.push(c < 0 ? null : GB(t, s[c], o[l + 1], e.metadata.read));
          }
          r.matches = a;
        }
        return r.matches;
      }
      function Xg(n, t, e, i) {
        const r = n.queries.getByIndex(e),
          s = r.matches;
        if (null !== s) {
          const o = wD(n, t, r, e);
          for (let a = 0; a < s.length; a += 2) {
            const l = s[a];
            if (l > 0) i.push(o[a / 2]);
            else {
              const c = s[a + 1],
                u = t[-l];
              for (let d = 10; d < u.length; d++) {
                const h = u[d];
                h[17] === h[3] && Xg(h[1], h, c, i);
              }
              if (null !== u[9]) {
                const d = u[9];
                for (let h = 0; h < d.length; h++) {
                  const p = d[h];
                  Xg(p[1], p, c, i);
                }
              }
            }
          }
        }
        return i;
      }
      function U(n) {
        const t = k(),
          e = xe(),
          i = Ev();
        tp(i + 1);
        const r = ED(e, i);
        if (n.dirty && yv(t) === (2 == (2 & r.metadata.flags))) {
          if (null === r.matches) n.reset([]);
          else {
            const s = r.crossesNgTemplate ? Xg(e, t, i, []) : wD(e, t, r, i);
            n.reset(s, x1), n.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Qe(n, t, e) {
        const i = xe();
        i.firstCreatePass &&
          (DD(i, new vD(n, t, e), -1),
          2 == (2 & t) && (i.staticViewQueries = !0)),
          CD(i, k(), t);
      }
      function me(n, t, e, i) {
        const r = xe();
        if (r.firstCreatePass) {
          const s = At();
          DD(r, new vD(t, e, i), s.index),
            (function (n, t) {
              const e = n.contentQueries || (n.contentQueries = []);
              t !== (e.length ? e[e.length - 1] : -1) &&
                e.push(n.queries.length - 1, t);
            })(r, n),
            2 == (2 & e) && (r.staticContentQueries = !0);
        }
        CD(r, k(), e);
      }
      function z() {
        return (function (n, t) {
          return n[19].queries[t].queryList;
        })(k(), Ev());
      }
      function CD(n, t, e) {
        const i = new Qo(4 == (4 & e));
        d0(n, t, i, i.destroy),
          null === t[19] && (t[19] = new Kg()),
          t[19].queries.push(new Yg(i));
      }
      function DD(n, t, e) {
        null === n.queries && (n.queries = new Jg()),
          n.queries.track(new Qg(t, e));
      }
      function ED(n, t) {
        return n.queries.getByIndex(t);
      }
      const Zo = new P("Application Initializer");
      let ea = (() => {
        class n {
          constructor(e) {
            (this.appInits = e),
              (this.resolve = zu),
              (this.reject = zu),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, r) => {
                (this.resolve = i), (this.reject = r);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const e = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let r = 0; r < this.appInits.length; r++) {
                const s = this.appInits[r]();
                if (wl(s)) e.push(s);
                else if (Ou(s)) {
                  const o = new Promise((a, l) => {
                    s.subscribe({ complete: a, error: l });
                  });
                  e.push(o);
                }
              }
            Promise.all(e)
              .then(() => {
                i();
              })
              .catch((r) => {
                this.reject(r);
              }),
              0 === e.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(Zo, 8));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const $l = new P("AppId"),
        wH = {
          provide: $l,
          useFactory: function () {
            return `${rm()}${rm()}${rm()}`;
          },
          deps: [],
        };
      function rm() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const jD = new P("Platform Initializer"),
        fr = new P("Platform ID"),
        UD = new P("appBootstrapListener");
      let ed = (() => {
        class n {
          log(e) {
            console.log(e);
          }
          warn(e) {
            console.warn(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Ln = new P("LocaleId"),
        zD = new P("DefaultCurrencyCode");
      class DH {
        constructor(t, e) {
          (this.ngModuleFactory = t), (this.componentFactories = e);
        }
      }
      const sm = function (n) {
          return new Ug(n);
        },
        EH = sm,
        MH = function (n) {
          return Promise.resolve(sm(n));
        },
        GD = function (n) {
          const t = sm(n),
            i = Ui(Gn(n).declarations).reduce((r, s) => {
              const o = hn(s);
              return o && r.push(new hD(o)), r;
            }, []);
          return new DH(t, i);
        },
        SH = GD,
        TH = function (n) {
          return Promise.resolve(GD(n));
        };
      let bs = (() => {
        class n {
          constructor() {
            (this.compileModuleSync = EH),
              (this.compileModuleAsync = MH),
              (this.compileModuleAndAllComponentsSync = SH),
              (this.compileModuleAndAllComponentsAsync = TH);
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const NH = (() => Promise.resolve(0))();
      function om(n) {
        "undefined" == typeof Zone
          ? NH.then(() => {
              n && n.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", n);
      }
      class H {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new F(!1)),
            (this.onMicrotaskEmpty = new F(!1)),
            (this.onStable = new F(!1)),
            (this.onError = new F(!1)),
            "undefined" == typeof Zone)
          )
            throw new Error("In this configuration Angular requires Zone.js");
          Zone.assertZonePatched();
          const r = this;
          (r._nesting = 0),
            (r._outer = r._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
            (r.shouldCoalesceEventChangeDetection = !i && e),
            (r.shouldCoalesceRunChangeDetection = i),
            (r.lastRequestAnimationFrameId = -1),
            (r.nativeRequestAnimationFrame = (function () {
              let n = ze.requestAnimationFrame,
                t = ze.cancelAnimationFrame;
              if ("undefined" != typeof Zone && n && t) {
                const e = n[Zone.__symbol__("OriginalDelegate")];
                e && (n = e);
                const i = t[Zone.__symbol__("OriginalDelegate")];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: n,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function (n) {
              const t = () => {
                !(function (n) {
                  n.isCheckStableRunning ||
                    -1 !== n.lastRequestAnimationFrameId ||
                    ((n.lastRequestAnimationFrameId =
                      n.nativeRequestAnimationFrame.call(ze, () => {
                        n.fakeTopEventTask ||
                          (n.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (n.lastRequestAnimationFrameId = -1),
                                lm(n),
                                (n.isCheckStableRunning = !0),
                                am(n),
                                (n.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          n.fakeTopEventTask.invoke();
                      })),
                    lm(n));
                })(n);
              };
              n._inner = n._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (e, i, r, s, o, a) => {
                  try {
                    return WD(n), e.invokeTask(r, s, o, a);
                  } finally {
                    ((n.shouldCoalesceEventChangeDetection &&
                      "eventTask" === s.type) ||
                      n.shouldCoalesceRunChangeDetection) &&
                      t(),
                      qD(n);
                  }
                },
                onInvoke: (e, i, r, s, o, a, l) => {
                  try {
                    return WD(n), e.invoke(r, s, o, a, l);
                  } finally {
                    n.shouldCoalesceRunChangeDetection && t(), qD(n);
                  }
                },
                onHasTask: (e, i, r, s) => {
                  e.hasTask(r, s),
                    i === r &&
                      ("microTask" == s.change
                        ? ((n._hasPendingMicrotasks = s.microTask),
                          lm(n),
                          am(n))
                        : "macroTask" == s.change &&
                          (n.hasPendingMacrotasks = s.macroTask));
                },
                onHandleError: (e, i, r, s) => (
                  e.handleError(r, s),
                  n.runOutsideAngular(() => n.onError.emit(s)),
                  !1
                ),
              });
            })(r);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!H.isInAngularZone())
            throw new Error("Expected to be in Angular Zone, but it is not!");
        }
        static assertNotInAngularZone() {
          if (H.isInAngularZone())
            throw new Error("Expected to not be in Angular Zone, but it is!");
        }
        run(t, e, i) {
          return this._inner.run(t, e, i);
        }
        runTask(t, e, i, r) {
          const s = this._inner,
            o = s.scheduleEventTask("NgZoneEvent: " + r, t, IH, zu, zu);
          try {
            return s.runTask(o, e, i);
          } finally {
            s.cancelTask(o);
          }
        }
        runGuarded(t, e, i) {
          return this._inner.runGuarded(t, e, i);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const IH = {};
      function am(n) {
        if (0 == n._nesting && !n.hasPendingMicrotasks && !n.isStable)
          try {
            n._nesting++, n.onMicrotaskEmpty.emit(null);
          } finally {
            if ((n._nesting--, !n.hasPendingMicrotasks))
              try {
                n.runOutsideAngular(() => n.onStable.emit(null));
              } finally {
                n.isStable = !0;
              }
          }
      }
      function lm(n) {
        n.hasPendingMicrotasks = !!(
          n._hasPendingMicrotasks ||
          ((n.shouldCoalesceEventChangeDetection ||
            n.shouldCoalesceRunChangeDetection) &&
            -1 !== n.lastRequestAnimationFrameId)
        );
      }
      function WD(n) {
        n._nesting++,
          n.isStable && ((n.isStable = !1), n.onUnstable.emit(null));
      }
      function qD(n) {
        n._nesting--, am(n);
      }
      class PH {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new F()),
            (this.onMicrotaskEmpty = new F()),
            (this.onStable = new F()),
            (this.onError = new F());
        }
        run(t, e, i) {
          return t.apply(e, i);
        }
        runGuarded(t, e, i) {
          return t.apply(e, i);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, i, r) {
          return t.apply(e, i);
        }
      }
      let cm = (() => {
          class n {
            constructor(e) {
              (this._ngZone = e),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    "undefined" == typeof Zone
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      H.assertNotInAngularZone(),
                        om(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                om(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(e) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, i, r) {
              let s = -1;
              i &&
                i > 0 &&
                (s = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (o) => o.timeoutId !== s
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: e, timeoutId: s, updateCb: r });
            }
            whenStable(e, i, r) {
              if (r && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(e, i, r), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(e, i, r) {
              return [];
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(H));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        YD = (() => {
          class n {
            constructor() {
              (this._applications = new Map()), um.addToWindow(this);
            }
            registerApplication(e, i) {
              this._applications.set(e, i);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, i = !0) {
              return um.findTestabilityInTree(this, e, i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      class FH {
        addToWindow(t) {}
        findTestabilityInTree(t, e, i) {
          return null;
        }
      }
      let um = new FH(),
        KD = !0,
        JD = !1;
      function dm() {
        return (JD = !0), KD;
      }
      let Si;
      const QD = new P("AllowMultipleToken");
      class hm {
        constructor(t, e) {
          (this.name = t), (this.token = e);
        }
      }
      function XD(n, t, e = []) {
        const i = `Platform: ${t}`,
          r = new P(i);
        return (s = []) => {
          let o = ZD();
          if (!o || o.injector.get(QD, !1))
            if (n) n(e.concat(s).concat({ provide: r, useValue: !0 }));
            else {
              const a = e
                .concat(s)
                .concat(
                  { provide: r, useValue: !0 },
                  { provide: ml, useValue: "platform" }
                );
              !(function (n) {
                if (Si && !Si.destroyed && !Si.injector.get(QD, !1))
                  throw new Error(
                    "There can be only one platform. Destroy the previous one to create a new one."
                  );
                Si = n.get(eE);
                const t = n.get(jD, null);
                t && t.forEach((e) => e());
              })(ae.create({ providers: a, name: i }));
            }
          return (function (n) {
            const t = ZD();
            if (!t) throw new Error("No platform exists!");
            if (!t.injector.get(n, null))
              throw new Error(
                "A platform with a different configuration has been created. Please destroy it first."
              );
            return t;
          })(r);
        };
      }
      function ZD() {
        return Si && !Si.destroyed ? Si : null;
      }
      let eE = (() => {
        class n {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, i) {
            const a = (function (n, t) {
                let e;
                return (
                  (e =
                    "noop" === n
                      ? new PH()
                      : ("zone.js" === n ? void 0 : n) ||
                        new H({
                          enableLongStackTrace: dm(),
                          shouldCoalesceEventChangeDetection: !!(null == t
                            ? void 0
                            : t.ngZoneEventCoalescing),
                          shouldCoalesceRunChangeDetection: !!(null == t
                            ? void 0
                            : t.ngZoneRunCoalescing),
                        })),
                  e
                );
              })(i ? i.ngZone : void 0, {
                ngZoneEventCoalescing: (i && i.ngZoneEventCoalescing) || !1,
                ngZoneRunCoalescing: (i && i.ngZoneRunCoalescing) || !1,
              }),
              l = [{ provide: H, useValue: a }];
            return a.run(() => {
              const c = ae.create({
                  providers: l,
                  parent: this.injector,
                  name: e.moduleType.name,
                }),
                u = e.create(c),
                d = u.injector.get(fs, null);
              if (!d)
                throw new Error(
                  "No ErrorHandler. Is platform module (BrowserModule) included?"
                );
              return (
                a.runOutsideAngular(() => {
                  const h = a.onError.subscribe({
                    next: (p) => {
                      d.handleError(p);
                    },
                  });
                  u.onDestroy(() => {
                    fm(this._modules, u), h.unsubscribe();
                  });
                }),
                (function (n, t, e) {
                  try {
                    const i = e();
                    return wl(i)
                      ? i.catch((r) => {
                          throw (
                            (t.runOutsideAngular(() => n.handleError(r)), r)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => n.handleError(i)), i);
                  }
                })(d, a, () => {
                  const h = u.injector.get(ea);
                  return (
                    h.runInitializers(),
                    h.donePromise.then(
                      () => (
                        wg(u.injector.get(Ln, Bu) || Bu),
                        this._moduleDoBootstrap(u),
                        u
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, i = []) {
            const r = tE({}, i);
            return (function (n, t, e) {
              const i = new Ug(e);
              return Promise.resolve(i);
            })(0, 0, e).then((s) => this.bootstrapModuleFactory(s, r));
          }
          _moduleDoBootstrap(e) {
            const i = e.injector.get(Vn);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((r) => i.bootstrap(r));
            else {
              if (!e.instance.ngDoBootstrap)
                throw new Error(
                  `The module ${De(
                    e.instance.constructor
                  )} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`
                );
              e.instance.ngDoBootstrap(i);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed)
              throw new Error("The platform has already been destroyed!");
            this._modules.slice().forEach((e) => e.destroy()),
              this._destroyListeners.forEach((e) => e()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(ae));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function tE(n, t) {
        return Array.isArray(t)
          ? t.reduce(tE, n)
          : Object.assign(Object.assign({}, n), t);
      }
      let Vn = (() => {
        class n {
          constructor(e, i, r, s, o) {
            (this._zone = e),
              (this._injector = i),
              (this._exceptionHandler = r),
              (this._componentFactoryResolver = s),
              (this._initStatus = o),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const a = new Ce((c) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    c.next(this._stable), c.complete();
                  });
              }),
              l = new Ce((c) => {
                let u;
                this._zone.runOutsideAngular(() => {
                  u = this._zone.onStable.subscribe(() => {
                    H.assertNotInAngularZone(),
                      om(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), c.next(!0));
                      });
                  });
                });
                const d = this._zone.onUnstable.subscribe(() => {
                  H.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        c.next(!1);
                      }));
                });
                return () => {
                  u.unsubscribe(), d.unsubscribe();
                };
              });
            this.isStable = Tn(
              a,
              l.pipe((n) => If()(xf(DI)(n)))
            );
          }
          bootstrap(e, i) {
            if (!this._initStatus.done)
              throw new Error(
                "Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module."
              );
            let r;
            (r =
              e instanceof N1
                ? e
                : this._componentFactoryResolver.resolveComponentFactory(e)),
              this.componentTypes.push(r.componentType);
            const s = (function (n) {
                return n.isBoundToModule;
              })(r)
                ? void 0
                : this._injector.get(Yi),
              a = r.create(ae.NULL, [], i || r.selector, s),
              l = a.location.nativeElement,
              c = a.injector.get(cm, null),
              u = c && a.injector.get(YD);
            return (
              c && u && u.registerApplication(l, c),
              a.onDestroy(() => {
                this.detachView(a.hostView),
                  fm(this.components, a),
                  u && u.unregisterApplication(l);
              }),
              this._loadComponent(a),
              a
            );
          }
          tick() {
            if (this._runningTick)
              throw new Error("ApplicationRef.tick is called recursively");
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
            } catch (e) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(e)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const i = e;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(e) {
            const i = e;
            fm(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView),
              this.tick(),
              this.components.push(e),
              this._injector
                .get(UD, [])
                .concat(this._bootstrapListeners)
                .forEach((r) => r(e));
          }
          ngOnDestroy() {
            this._views.slice().forEach((e) => e.destroy()),
              this._onMicrotaskEmptySubscription.unsubscribe();
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(H), m(ae), m(fs), m(on), m(ea));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function fm(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      class nd {}
      class QH {}
      const XH = { factoryPathPrefix: "", factoryPathSuffix: ".ngfactory" };
      let ZH = (() => {
        class n {
          constructor(e, i) {
            (this._compiler = e), (this._config = i || XH);
          }
          load(e) {
            return this.loadAndCompile(e);
          }
          loadAndCompile(e) {
            let [i, r] = e.split("#");
            return (
              void 0 === r && (r = "default"),
              ja(255)(i)
                .then((s) => s[r])
                .then((s) => sE(s, i, r))
                .then((s) => this._compiler.compileModuleAsync(s))
            );
          }
          loadFactory(e) {
            let [i, r] = e.split("#"),
              s = "NgFactory";
            return (
              void 0 === r && ((r = "default"), (s = "")),
              ja(255)(
                this._config.factoryPathPrefix +
                  i +
                  this._config.factoryPathSuffix
              )
                .then((o) => o[r + s])
                .then((o) => sE(o, i, r))
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(bs), m(QH, 8));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function sE(n, t, e) {
        if (!n) throw new Error(`Cannot find '${e}' in '${t}'`);
        return n;
      }
      const c3 = XD(null, "core", [
          { provide: fr, useValue: "unknown" },
          { provide: eE, deps: [ae] },
          { provide: YD, deps: [] },
          { provide: ed, deps: [] },
        ]),
        p3 = [
          { provide: Vn, useClass: Vn, deps: [H, ae, fs, on, ea] },
          {
            provide: wB,
            deps: [H],
            useFactory: function (n) {
              let t = [];
              return (
                n.onStable.subscribe(() => {
                  for (; t.length; ) t.pop()();
                }),
                function (e) {
                  t.push(e);
                }
              );
            },
          },
          { provide: ea, useClass: ea, deps: [[new nn(), Zo]] },
          { provide: bs, useClass: bs, deps: [] },
          wH,
          {
            provide: Di,
            useFactory: function () {
              return gV;
            },
            deps: [],
          },
          {
            provide: zo,
            useFactory: function () {
              return mV;
            },
            deps: [],
          },
          {
            provide: Ln,
            useFactory: function (n) {
              return (
                wg(
                  (n =
                    n ||
                    ("undefined" != typeof $localize && $localize.locale) ||
                    Bu)
                ),
                n
              );
            },
            deps: [[new yo(Ln), new nn(), new Hi()]],
          },
          { provide: zD, useValue: "USD" },
        ];
      let m3 = (() => {
          class n {
            constructor(e) {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Vn));
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ providers: p3 })),
            n
          );
        })(),
        hd = null;
      function Ki() {
        return hd;
      }
      const j = new P("DocumentToken");
      let Cs = (() => {
        class n {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({ factory: g$, token: n, providedIn: "platform" })),
          n
        );
      })();
      function g$() {
        return m(kE);
      }
      const m$ = new P("Location Initialized");
      let kE = (() => {
        class n extends Cs {
          constructor(e) {
            super(), (this._doc = e), this._init();
          }
          _init() {
            (this.location = window.location), (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return Ki().getBaseHref(this._doc);
          }
          onPopState(e) {
            const i = Ki().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("popstate", e, !1),
              () => i.removeEventListener("popstate", e)
            );
          }
          onHashChange(e) {
            const i = Ki().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("hashchange", e, !1),
              () => i.removeEventListener("hashchange", e)
            );
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(e) {
            this.location.pathname = e;
          }
          pushState(e, i, r) {
            NE() ? this._history.pushState(e, i, r) : (this.location.hash = r);
          }
          replaceState(e, i, r) {
            NE()
              ? this._history.replaceState(e, i, r)
              : (this.location.hash = r);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(e = 0) {
            this._history.go(e);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(j));
          }),
          (n.ɵprov = A({ factory: _$, token: n, providedIn: "platform" })),
          n
        );
      })();
      function NE() {
        return !!window.history.pushState;
      }
      function _$() {
        return new kE(m(j));
      }
      function Am(n, t) {
        if (0 == n.length) return t;
        if (0 == t.length) return n;
        let e = 0;
        return (
          n.endsWith("/") && e++,
          t.startsWith("/") && e++,
          2 == e ? n + t.substring(1) : 1 == e ? n + t : n + "/" + t
        );
      }
      function RE(n) {
        const t = n.match(/#|\?|$/),
          e = (t && t.index) || n.length;
        return n.slice(0, e - ("/" === n[e - 1] ? 1 : 0)) + n.slice(e);
      }
      function gr(n) {
        return n && "?" !== n[0] ? "?" + n : n;
      }
      let ia = (() => {
        class n {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({ factory: y$, token: n, providedIn: "root" })),
          n
        );
      })();
      function y$(n) {
        const t = m(j).location;
        return new IE(m(Cs), (t && t.origin) || "");
      }
      const km = new P("appBaseHref");
      let IE = (() => {
          class n extends ia {
            constructor(e, i) {
              if (
                (super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                null == i && (i = this._platformLocation.getBaseHrefFromDOM()),
                null == i)
              )
                throw new Error(
                  "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
                );
              this._baseHref = i;
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return Am(this._baseHref, e);
            }
            path(e = !1) {
              const i =
                  this._platformLocation.pathname +
                  gr(this._platformLocation.search),
                r = this._platformLocation.hash;
              return r && e ? `${i}${r}` : i;
            }
            pushState(e, i, r, s) {
              const o = this.prepareExternalUrl(r + gr(s));
              this._platformLocation.pushState(e, i, o);
            }
            replaceState(e, i, r, s) {
              const o = this.prepareExternalUrl(r + gr(s));
              this._platformLocation.replaceState(e, i, o);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            historyGo(e = 0) {
              var i, r;
              null === (r = (i = this._platformLocation).historyGo) ||
                void 0 === r ||
                r.call(i, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Cs), m(km, 8));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        b$ = (() => {
          class n extends ia {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(e) {
              const i = Am(this._baseHref, e);
              return i.length > 0 ? "#" + i : i;
            }
            pushState(e, i, r, s) {
              let o = this.prepareExternalUrl(r + gr(s));
              0 == o.length && (o = this._platformLocation.pathname),
                this._platformLocation.pushState(e, i, o);
            }
            replaceState(e, i, r, s) {
              let o = this.prepareExternalUrl(r + gr(s));
              0 == o.length && (o = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, i, o);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            historyGo(e = 0) {
              var i, r;
              null === (r = (i = this._platformLocation).historyGo) ||
                void 0 === r ||
                r.call(i, e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Cs), m(km, 8));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        ra = (() => {
          class n {
            constructor(e, i) {
              (this._subject = new F()),
                (this._urlChangeListeners = []),
                (this._platformStrategy = e);
              const r = this._platformStrategy.getBaseHref();
              (this._platformLocation = i),
                (this._baseHref = RE(xE(r))),
                this._platformStrategy.onPopState((s) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: s.state,
                    type: s.type,
                  });
                });
            }
            path(e = !1) {
              return this.normalize(this._platformStrategy.path(e));
            }
            getState() {
              return this._platformLocation.getState();
            }
            isCurrentPathEqualTo(e, i = "") {
              return this.path() == this.normalize(e + gr(i));
            }
            normalize(e) {
              return n.stripTrailingSlash(
                (function (n, t) {
                  return n && t.startsWith(n) ? t.substring(n.length) : t;
                })(this._baseHref, xE(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._platformStrategy.prepareExternalUrl(e)
              );
            }
            go(e, i = "", r = null) {
              this._platformStrategy.pushState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + gr(i)),
                  r
                );
            }
            replaceState(e, i = "", r = null) {
              this._platformStrategy.replaceState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + gr(i)),
                  r
                );
            }
            forward() {
              this._platformStrategy.forward();
            }
            back() {
              this._platformStrategy.back();
            }
            historyGo(e = 0) {
              var i, r;
              null === (r = (i = this._platformStrategy).historyGo) ||
                void 0 === r ||
                r.call(i, e);
            }
            onUrlChange(e) {
              this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  }));
            }
            _notifyUrlChangeListeners(e = "", i) {
              this._urlChangeListeners.forEach((r) => r(e, i));
            }
            subscribe(e, i, r) {
              return this._subject.subscribe({
                next: e,
                error: i,
                complete: r,
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(ia), m(Cs));
            }),
            (n.normalizeQueryParams = gr),
            (n.joinWithSlash = Am),
            (n.stripTrailingSlash = RE),
            (n.ɵprov = A({ factory: v$, token: n, providedIn: "root" })),
            n
          );
        })();
      function v$() {
        return new ra(m(ia), m(Cs));
      }
      function xE(n) {
        return n.replace(/\/index.html$/, "");
      }
      var Ct = (() => (
        ((Ct = Ct || {})[(Ct.Zero = 0)] = "Zero"),
        (Ct[(Ct.One = 1)] = "One"),
        (Ct[(Ct.Two = 2)] = "Two"),
        (Ct[(Ct.Few = 3)] = "Few"),
        (Ct[(Ct.Many = 4)] = "Many"),
        (Ct[(Ct.Other = 5)] = "Other"),
        Ct
      ))();
      const M$ = function (n) {
        return (function (n) {
          const t = (function (n) {
            return n.toLowerCase().replace(/_/g, "-");
          })(n);
          let e = s1(t);
          if (e) return e;
          const i = t.split("-")[0];
          if (((e = s1(i)), e)) return e;
          if ("en" === i) return K2;
          throw new Error(`Missing locale data for the locale "${n}".`);
        })(n)[$.PluralCase];
      };
      class Cd {}
      let Z$ = (() => {
        class n extends Cd {
          constructor(e) {
            super(), (this.locale = e);
          }
          getPluralCategory(e, i) {
            switch (M$(i || this.locale)(e)) {
              case Ct.Zero:
                return "zero";
              case Ct.One:
                return "one";
              case Ct.Two:
                return "two";
              case Ct.Few:
                return "few";
              case Ct.Many:
                return "many";
              default:
                return "other";
            }
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(Ln));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function GE(n, t) {
        t = encodeURIComponent(t);
        for (const e of n.split(";")) {
          const i = e.indexOf("="),
            [r, s] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
          if (r.trim() === t) return decodeURIComponent(s);
        }
        return null;
      }
      let Dd = (() => {
        class n {
          constructor(e, i, r, s) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = i),
              (this._ngEl = r),
              (this._renderer = s),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass(e) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses =
                "string" == typeof e ? e.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass(e) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = "string" == typeof e ? e.split(/\s+/) : e),
              this._rawClass &&
                (bl(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers
                      .find(this._rawClass)
                      .create())
                  : (this._keyValueDiffer = this._keyValueDiffers
                      .find(this._rawClass)
                      .create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const e = this._iterableDiffer.diff(this._rawClass);
              e && this._applyIterableChanges(e);
            } else if (this._keyValueDiffer) {
              const e = this._keyValueDiffer.diff(this._rawClass);
              e && this._applyKeyValueChanges(e);
            }
          }
          _applyKeyValueChanges(e) {
            e.forEachAddedItem((i) => this._toggleClass(i.key, i.currentValue)),
              e.forEachChangedItem((i) =>
                this._toggleClass(i.key, i.currentValue)
              ),
              e.forEachRemovedItem((i) => {
                i.previousValue && this._toggleClass(i.key, !1);
              });
          }
          _applyIterableChanges(e) {
            e.forEachAddedItem((i) => {
              if ("string" != typeof i.item)
                throw new Error(
                  `NgClass can only toggle CSS classes expressed as strings, got ${De(
                    i.item
                  )}`
                );
              this._toggleClass(i.item, !0);
            }),
              e.forEachRemovedItem((i) => this._toggleClass(i.item, !1));
          }
          _applyClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !0))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !!e[i])));
          }
          _removeClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !1))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !1)));
          }
          _toggleClass(e, i) {
            (e = e.trim()) &&
              e.split(/\s+/g).forEach((r) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, r)
                  : this._renderer.removeClass(this._ngEl.nativeElement, r);
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(f(Di), f(zo), f(L), f(Yt));
          }),
          (n.ɵdir = M({
            type: n,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
          })),
          n
        );
      })();
      class tj {
        constructor(t, e, i, r) {
          (this.$implicit = t),
            (this.ngForOf = e),
            (this.index = i),
            (this.count = r);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let En = (() => {
        class n {
          constructor(e, i, r) {
            (this._viewContainer = e),
              (this._template = i),
              (this._differs = r),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            this._trackByFn = e;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const e = this._ngForOf;
              if (!this._differ && e)
                try {
                  this._differ = this._differs
                    .find(e)
                    .create(this.ngForTrackBy);
                } catch (i) {
                  throw new Error(
                    `Cannot find a differ supporting object '${e}' of type '${(function (
                      n
                    ) {
                      return n.name || typeof n;
                    })(
                      e
                    )}'. NgFor only supports binding to Iterables such as Arrays.`
                  );
                }
            }
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const i = [];
            e.forEachOperation((r, s, o) => {
              if (null == r.previousIndex) {
                const a = this._viewContainer.createEmbeddedView(
                    this._template,
                    new tj(null, this._ngForOf, -1, -1),
                    null === o ? void 0 : o
                  ),
                  l = new WE(r, a);
                i.push(l);
              } else if (null == o)
                this._viewContainer.remove(null === s ? void 0 : s);
              else if (null !== s) {
                const a = this._viewContainer.get(s);
                this._viewContainer.move(a, o);
                const l = new WE(r, a);
                i.push(l);
              }
            });
            for (let r = 0; r < i.length; r++)
              this._perViewChange(i[r].view, i[r].record);
            for (let r = 0, s = this._viewContainer.length; r < s; r++) {
              const o = this._viewContainer.get(r);
              (o.context.index = r),
                (o.context.count = s),
                (o.context.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((r) => {
              this._viewContainer.get(r.currentIndex).context.$implicit =
                r.item;
            });
          }
          _perViewChange(e, i) {
            e.context.$implicit = i.item;
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(f(Ze), f(Se), f(Di));
          }),
          (n.ɵdir = M({
            type: n,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
          })),
          n
        );
      })();
      class WE {
        constructor(t, e) {
          (this.record = t), (this.view = e);
        }
      }
      let bt = (() => {
        class n {
          constructor(e, i) {
            (this._viewContainer = e),
              (this._context = new ij()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            qE("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            qE("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(f(Ze), f(Se));
          }),
          (n.ɵdir = M({
            type: n,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
          })),
          n
        );
      })();
      class ij {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function qE(n, t) {
        if (t && !t.createEmbeddedView)
          throw new Error(
            `${n} must be a TemplateRef, but received '${De(t)}'.`
          );
      }
      class Bm {
        constructor(t, e) {
          (this._viewContainerRef = t),
            (this._templateRef = e),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(t) {
          t && !this._created
            ? this.create()
            : !t && this._created && this.destroy();
        }
      }
      let Yl = (() => {
          class n {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews || (this._defaultViews = []),
                this._defaultViews.push(e);
            }
            _matchCase(e) {
              const i = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (let i = 0; i < this._defaultViews.length; i++)
                  this._defaultViews[i].enforceState(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
            })),
            n
          );
        })(),
        Hm = (() => {
          class n {
            constructor(e, i, r) {
              (this.ngSwitch = r), r._addCase(), (this._view = new Bm(e, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Ze), f(Se), f(Yl, 9));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
            })),
            n
          );
        })(),
        YE = (() => {
          class n {
            constructor(e, i, r) {
              r._addDefault(new Bm(e, i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Ze), f(Se), f(Yl, 9));
            }),
            (n.ɵdir = M({ type: n, selectors: [["", "ngSwitchDefault", ""]] })),
            n
          );
        })();
      class oj {
        createSubscription(t, e) {
          return t.subscribe({
            next: e,
            error: (i) => {
              throw i;
            },
          });
        }
        dispose(t) {
          t.unsubscribe();
        }
        onDestroy(t) {
          t.unsubscribe();
        }
      }
      class aj {
        createSubscription(t, e) {
          return t.then(e, (i) => {
            throw i;
          });
        }
        dispose(t) {}
        onDestroy(t) {}
      }
      const lj = new aj(),
        cj = new oj();
      let JE = (() => {
          class n {
            constructor(e) {
              (this._ref = e),
                (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null);
            }
            ngOnDestroy() {
              this._subscription && this._dispose();
            }
            transform(e) {
              return this._obj
                ? e !== this._obj
                  ? (this._dispose(), this.transform(e))
                  : this._latestValue
                : (e && this._subscribe(e), this._latestValue);
            }
            _subscribe(e) {
              (this._obj = e),
                (this._strategy = this._selectStrategy(e)),
                (this._subscription = this._strategy.createSubscription(
                  e,
                  (i) => this._updateLatestValue(e, i)
                ));
            }
            _selectStrategy(e) {
              if (wl(e)) return lj;
              if (gC(e)) return cj;
              throw (function (n, t) {
                return Error(`InvalidPipeArgument: '${t}' for pipe '${De(n)}'`);
              })(n, e);
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(e, i) {
              e === this._obj &&
                ((this._latestValue = i), this._ref.markForCheck());
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Be, 16));
            }),
            (n.ɵpipe = wn({ name: "async", type: n, pure: !1 })),
            n
          );
        })(),
        Et = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ providers: [{ provide: Cd, useClass: Z$ }] })),
            n
          );
        })();
      const ZE = "browser";
      function Ed(n) {
        return n === ZE;
      }
      let eM = (() => {
        class n {}
        return (
          (n.ɵprov = A({
            token: n,
            providedIn: "root",
            factory: () => new Tj(m(j), window),
          })),
          n
        );
      })();
      class Tj {
        constructor(t, e) {
          (this.document = t), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(t) {
          this.offset = Array.isArray(t) ? () => t : t;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(t) {
          this.supportsScrolling() && this.window.scrollTo(t[0], t[1]);
        }
        scrollToAnchor(t) {
          if (!this.supportsScrolling()) return;
          const e = (function (n, t) {
            const e = n.getElementById(t) || n.getElementsByName(t)[0];
            if (e) return e;
            if (
              "function" == typeof n.createTreeWalker &&
              n.body &&
              (n.body.createShadowRoot || n.body.attachShadow)
            ) {
              const i = n.createTreeWalker(n.body, NodeFilter.SHOW_ELEMENT);
              let r = i.currentNode;
              for (; r; ) {
                const s = r.shadowRoot;
                if (s) {
                  const o =
                    s.getElementById(t) || s.querySelector(`[name="${t}"]`);
                  if (o) return o;
                }
                r = i.nextNode();
              }
            }
            return null;
          })(this.document, t);
          e && (this.scrollToElement(e), this.attemptFocus(e));
        }
        setHistoryScrollRestoration(t) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = t);
          }
        }
        scrollToElement(t) {
          const e = t.getBoundingClientRect(),
            i = e.left + this.window.pageXOffset,
            r = e.top + this.window.pageYOffset,
            s = this.offset();
          this.window.scrollTo(i - s[0], r - s[1]);
        }
        attemptFocus(t) {
          return t.focus(), this.document.activeElement === t;
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const t =
              tM(this.window.history) ||
              tM(Object.getPrototypeOf(this.window.history));
            return !(!t || (!t.writable && !t.set));
          } catch (t) {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch (t) {
            return !1;
          }
        }
      }
      function tM(n) {
        return Object.getOwnPropertyDescriptor(n, "scrollRestoration");
      }
      class nM {}
      class Um extends class extends class {} {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      } {
        static makeCurrent() {
          !(function (n) {
            hd || (hd = n);
          })(new Um());
        }
        onAndCancel(t, e, i) {
          return (
            t.addEventListener(e, i, !1),
            () => {
              t.removeEventListener(e, i, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          t.parentNode && t.parentNode.removeChild(t);
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return "window" === e
            ? window
            : "document" === e
            ? t
            : "body" === e
            ? t.body
            : null;
        }
        getBaseHref(t) {
          const e =
            ((Kl = Kl || document.querySelector("base")),
            Kl ? Kl.getAttribute("href") : null);
          return null == e
            ? null
            : (function (n) {
                (Md = Md || document.createElement("a")),
                  Md.setAttribute("href", n);
                const t = Md.pathname;
                return "/" === t.charAt(0) ? t : `/${t}`;
              })(e);
        }
        resetBaseElement() {
          Kl = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(t) {
          return GE(document.cookie, t);
        }
      }
      let Md,
        Kl = null;
      const iM = new P("TRANSITION_ID"),
        xj = [
          {
            provide: Zo,
            useFactory: function (n, t, e) {
              return () => {
                e.get(ea).donePromise.then(() => {
                  const i = Ki(),
                    r = t.querySelectorAll(`style[ng-transition="${n}"]`);
                  for (let s = 0; s < r.length; s++) i.remove(r[s]);
                });
              };
            },
            deps: [iM, j, ae],
            multi: !0,
          },
        ];
      class zm {
        static init() {
          !(function (n) {
            um = n;
          })(new zm());
        }
        addToWindow(t) {
          (ze.getAngularTestability = (i, r = !0) => {
            const s = t.findTestabilityInTree(i, r);
            if (null == s)
              throw new Error("Could not find testability for element.");
            return s;
          }),
            (ze.getAllAngularTestabilities = () => t.getAllTestabilities()),
            (ze.getAllAngularRootElements = () => t.getAllRootElements()),
            ze.frameworkStabilizers || (ze.frameworkStabilizers = []),
            ze.frameworkStabilizers.push((i) => {
              const r = ze.getAllAngularTestabilities();
              let s = r.length,
                o = !1;
              const a = function (l) {
                (o = o || l), s--, 0 == s && i(o);
              };
              r.forEach(function (l) {
                l.whenStable(a);
              });
            });
        }
        findTestabilityInTree(t, e, i) {
          if (null == e) return null;
          const r = t.getTestability(e);
          return null != r
            ? r
            : i
            ? Ki().isShadowRoot(e)
              ? this.findTestabilityInTree(t, e.host, !0)
              : this.findTestabilityInTree(t, e.parentElement, !0)
            : null;
        }
      }
      let Oj = (() => {
        class n {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Jl = new P("EventManagerPlugins");
      let Td = (() => {
        class n {
          constructor(e, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              e.forEach((r) => (r.manager = this)),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, i, r) {
            return this._findPluginFor(i).addEventListener(e, i, r);
          }
          addGlobalEventListener(e, i, r) {
            return this._findPluginFor(i).addGlobalEventListener(e, i, r);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const i = this._eventNameToPlugin.get(e);
            if (i) return i;
            const r = this._plugins;
            for (let s = 0; s < r.length; s++) {
              const o = r[s];
              if (o.supports(e)) return this._eventNameToPlugin.set(e, o), o;
            }
            throw new Error(`No event manager plugin found for event ${e}`);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(Jl), m(H));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Gm {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, i) {
          const r = Ki().getGlobalEventTarget(this._doc, t);
          if (!r)
            throw new Error(`Unsupported event target ${r} for event ${e}`);
          return this.addEventListener(r, e, i);
        }
      }
      let sM = (() => {
          class n {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(e) {
              const i = new Set();
              e.forEach((r) => {
                this._stylesSet.has(r) || (this._stylesSet.add(r), i.add(r));
              }),
                this.onStylesAdded(i);
            }
            onStylesAdded(e) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ql = (() => {
          class n extends sM {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._hostNodes = new Map()),
                this._hostNodes.set(e.head, []);
            }
            _addStylesToHost(e, i, r) {
              e.forEach((s) => {
                const o = this._doc.createElement("style");
                (o.textContent = s), r.push(i.appendChild(o));
              });
            }
            addHost(e) {
              const i = [];
              this._addStylesToHost(this._stylesSet, e, i),
                this._hostNodes.set(e, i);
            }
            removeHost(e) {
              const i = this._hostNodes.get(e);
              i && i.forEach(oM), this._hostNodes.delete(e);
            }
            onStylesAdded(e) {
              this._hostNodes.forEach((i, r) => {
                this._addStylesToHost(e, r, i);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((e) => e.forEach(oM));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      function oM(n) {
        Ki().remove(n);
      }
      const Wm = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        },
        qm = /%COMP%/g;
      function Ad(n, t, e) {
        for (let i = 0; i < t.length; i++) {
          let r = t[i];
          Array.isArray(r) ? Ad(n, r, e) : ((r = r.replace(qm, n)), e.push(r));
        }
        return e;
      }
      function cM(n) {
        return (t) => {
          if ("__ngUnwrap__" === t) return n;
          !1 === n(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      let kd = (() => {
        class n {
          constructor(e, i, r) {
            (this.eventManager = e),
              (this.sharedStylesHost = i),
              (this.appId = r),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Ym(e));
          }
          createRenderer(e, i) {
            if (!e || !i) return this.defaultRenderer;
            switch (i.encapsulation) {
              case vt.Emulated: {
                let r = this.rendererByCompId.get(i.id);
                return (
                  r ||
                    ((r = new Kj(
                      this.eventManager,
                      this.sharedStylesHost,
                      i,
                      this.appId
                    )),
                    this.rendererByCompId.set(i.id, r)),
                  r.applyToHost(e),
                  r
                );
              }
              case 1:
              case vt.ShadowDom:
                return new Jj(this.eventManager, this.sharedStylesHost, e, i);
              default:
                if (!this.rendererByCompId.has(i.id)) {
                  const r = Ad(i.id, i.styles, []);
                  this.sharedStylesHost.addStyles(r),
                    this.rendererByCompId.set(i.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(Td), m(Ql), m($l));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class Ym {
        constructor(t) {
          (this.eventManager = t), (this.data = Object.create(null));
        }
        destroy() {}
        createElement(t, e) {
          return e
            ? document.createElementNS(Wm[e] || e, t)
            : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          t.appendChild(e);
        }
        insertBefore(t, e, i) {
          t && t.insertBefore(e, i);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let i = "string" == typeof t ? document.querySelector(t) : t;
          if (!i)
            throw new Error(`The selector "${t}" did not match any elements`);
          return e || (i.textContent = ""), i;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, i, r) {
          if (r) {
            e = r + ":" + e;
            const s = Wm[r];
            s ? t.setAttributeNS(s, e, i) : t.setAttribute(e, i);
          } else t.setAttribute(e, i);
        }
        removeAttribute(t, e, i) {
          if (i) {
            const r = Wm[i];
            r ? t.removeAttributeNS(r, e) : t.removeAttribute(`${i}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, i, r) {
          r & (On.DashCase | On.Important)
            ? t.style.setProperty(e, i, r & On.Important ? "important" : "")
            : (t.style[e] = i);
        }
        removeStyle(t, e, i) {
          i & On.DashCase ? t.style.removeProperty(e) : (t.style[e] = "");
        }
        setProperty(t, e, i) {
          t[e] = i;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, i) {
          return "string" == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, cM(i))
            : this.eventManager.addEventListener(t, e, cM(i));
        }
      }
      class Kj extends Ym {
        constructor(t, e, i, r) {
          super(t), (this.component = i);
          const s = Ad(r + "-" + i.id, i.styles, []);
          e.addStyles(s),
            (this.contentAttr = (function (n) {
              return "_ngcontent-%COMP%".replace(qm, n);
            })(r + "-" + i.id)),
            (this.hostAttr = (function (n) {
              return "_nghost-%COMP%".replace(qm, n);
            })(r + "-" + i.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, "");
        }
        createElement(t, e) {
          const i = super.createElement(t, e);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      class Jj extends Ym {
        constructor(t, e, i, r) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const s = Ad(r.id, r.styles, []);
          for (let o = 0; o < s.length; o++) {
            const a = document.createElement("style");
            (a.textContent = s[o]), this.shadowRoot.appendChild(a);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, i) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, i);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(t))
          );
        }
      }
      let Qj = (() => {
        class n extends Gm {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, i, r) {
            return (
              e.addEventListener(i, r, !1),
              () => this.removeEventListener(e, i, r)
            );
          }
          removeEventListener(e, i, r) {
            return e.removeEventListener(i, r);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(j));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const hM = ["alt", "control", "meta", "shift"],
        r8 = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        fM = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        s8 = {
          alt: (n) => n.altKey,
          control: (n) => n.ctrlKey,
          meta: (n) => n.metaKey,
          shift: (n) => n.shiftKey,
        };
      let o8 = (() => {
        class n extends Gm {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return null != n.parseEventName(e);
          }
          addEventListener(e, i, r) {
            const s = n.parseEventName(i),
              o = n.eventCallback(s.fullKey, r, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => Ki().onAndCancel(e, s.domEventName, o));
          }
          static parseEventName(e) {
            const i = e.toLowerCase().split("."),
              r = i.shift();
            if (0 === i.length || ("keydown" !== r && "keyup" !== r))
              return null;
            const s = n._normalizeKey(i.pop());
            let o = "";
            if (
              (hM.forEach((l) => {
                const c = i.indexOf(l);
                c > -1 && (i.splice(c, 1), (o += l + "."));
              }),
              (o += s),
              0 != i.length || 0 === s.length)
            )
              return null;
            const a = {};
            return (a.domEventName = r), (a.fullKey = o), a;
          }
          static getEventFullKey(e) {
            let i = "",
              r = (function (n) {
                let t = n.key;
                if (null == t) {
                  if (((t = n.keyIdentifier), null == t)) return "Unidentified";
                  t.startsWith("U+") &&
                    ((t = String.fromCharCode(parseInt(t.substring(2), 16))),
                    3 === n.location && fM.hasOwnProperty(t) && (t = fM[t]));
                }
                return r8[t] || t;
              })(e);
            return (
              (r = r.toLowerCase()),
              " " === r ? (r = "space") : "." === r && (r = "dot"),
              hM.forEach((s) => {
                s != r && s8[s](e) && (i += s + ".");
              }),
              (i += r),
              i
            );
          }
          static eventCallback(e, i, r) {
            return (s) => {
              n.getEventFullKey(s) === e && r.runGuarded(() => i(s));
            };
          }
          static _normalizeKey(e) {
            switch (e) {
              case "esc":
                return "escape";
              default:
                return e;
            }
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(j));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const p8 = XD(c3, "browser", [
          { provide: fr, useValue: ZE },
          {
            provide: jD,
            useValue: function () {
              Um.makeCurrent(), zm.init();
            },
            multi: !0,
          },
          {
            provide: j,
            useFactory: function () {
              return (
                (function (n) {
                  Wf = n;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        g8 = [
          [],
          { provide: ml, useValue: "root" },
          {
            provide: fs,
            useFactory: function () {
              return new fs();
            },
            deps: [],
          },
          { provide: Jl, useClass: Qj, multi: !0, deps: [j, H, fr] },
          { provide: Jl, useClass: o8, multi: !0, deps: [j] },
          [],
          { provide: kd, useClass: kd, deps: [Td, Ql, $l] },
          { provide: hr, useExisting: kd },
          { provide: sM, useExisting: Ql },
          { provide: Ql, useClass: Ql, deps: [j] },
          { provide: cm, useClass: cm, deps: [H] },
          { provide: Td, useClass: Td, deps: [Jl, H] },
          { provide: nM, useClass: Oj, deps: [] },
          [],
        ];
      let Xm = (() => {
        class n {
          constructor(e) {
            if (e)
              throw new Error(
                "BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead."
              );
          }
          static withServerTransition(e) {
            return {
              ngModule: n,
              providers: [
                { provide: $l, useValue: e.appId },
                { provide: iM, useExisting: $l },
                xj,
              ],
            };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(n, 12));
          }),
          (n.ɵmod = K({ type: n })),
          (n.ɵinj = W({ providers: g8, imports: [Et, m3] })),
          n
        );
      })();
      function J(...n) {
        let t = n[n.length - 1];
        return Ks(t) ? (n.pop(), Rf(n, t)) : Ga(n);
      }
      "undefined" != typeof window && window;
      class rt extends O {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return e && !e.closed && t.next(this._value), e;
        }
        getValue() {
          if (this.hasError) throw this.thrownError;
          if (this.closed) throw new ns();
          return this._value;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
      class e_ extends He {
        notifyNext(t, e, i, r, s) {
          this.destination.next(e);
        }
        notifyError(t, e) {
          this.destination.error(t);
        }
        notifyComplete(t) {
          this.destination.complete();
        }
      }
      class D8 extends He {
        constructor(t, e, i) {
          super(),
            (this.parent = t),
            (this.outerValue = e),
            (this.outerIndex = i),
            (this.index = 0);
        }
        _next(t) {
          this.parent.notifyNext(
            this.outerValue,
            t,
            this.outerIndex,
            this.index++,
            this
          );
        }
        _error(t) {
          this.parent.notifyError(t, this), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(this), this.unsubscribe();
        }
      }
      function t_(n, t, e, i, r = new D8(n, e, i)) {
        if (!r.closed) return t instanceof Ce ? t.subscribe(r) : Nf(t)(r);
      }
      const gM = {};
      function Ds(...n) {
        let t, e;
        return (
          Ks(n[n.length - 1]) && (e = n.pop()),
          "function" == typeof n[n.length - 1] && (t = n.pop()),
          1 === n.length && Tr(n[0]) && (n = n[0]),
          Ga(n, e).lift(new E8(t))
        );
      }
      class E8 {
        constructor(t) {
          this.resultSelector = t;
        }
        call(t, e) {
          return e.subscribe(new M8(t, this.resultSelector));
        }
      }
      class M8 extends e_ {
        constructor(t, e) {
          super(t),
            (this.resultSelector = e),
            (this.active = 0),
            (this.values = []),
            (this.observables = []);
        }
        _next(t) {
          this.values.push(gM), this.observables.push(t);
        }
        _complete() {
          const t = this.observables,
            e = t.length;
          if (0 === e) this.destination.complete();
          else {
            (this.active = e), (this.toRespond = e);
            for (let i = 0; i < e; i++) this.add(t_(this, t[i], void 0, i));
          }
        }
        notifyComplete(t) {
          0 == (this.active -= 1) && this.destination.complete();
        }
        notifyNext(t, e, i) {
          const r = this.values,
            o = this.toRespond
              ? r[i] === gM
                ? --this.toRespond
                : this.toRespond
              : 0;
          (r[i] = e),
            0 === o &&
              (this.resultSelector
                ? this._tryResultSelector(r)
                : this.destination.next(r.slice()));
        }
        _tryResultSelector(t) {
          let e;
          try {
            e = this.resultSelector.apply(this, t);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.destination.next(e);
        }
      }
      const Nd = (() => {
        function n() {
          return (
            Error.call(this),
            (this.message = "no elements in sequence"),
            (this.name = "EmptyError"),
            this
          );
        }
        return (n.prototype = Object.create(Error.prototype)), n;
      })();
      function sa(...n) {
        return za(1)(J(...n));
      }
      const jr = new Ce((n) => n.complete());
      function Rd(n) {
        return n
          ? (function (n) {
              return new Ce((t) => n.schedule(() => t.complete()));
            })(n)
          : jr;
      }
      function oa(n) {
        return new Ce((t) => {
          let e;
          try {
            e = n();
          } catch (r) {
            return void t.error(r);
          }
          return (e ? Pt(e) : Rd()).subscribe(t);
        });
      }
      function jt(n, t) {
        return "function" == typeof t
          ? (e) =>
              e.pipe(jt((i, r) => Pt(n(i, r)).pipe(Q((s, o) => t(i, s, r, o)))))
          : (e) => e.lift(new A8(n));
      }
      class A8 {
        constructor(t) {
          this.project = t;
        }
        call(t, e) {
          return e.subscribe(new k8(t, this.project));
        }
      }
      class k8 extends Qs {
        constructor(t, e) {
          super(t), (this.project = e), (this.index = 0);
        }
        _next(t) {
          let e;
          const i = this.index++;
          try {
            e = this.project(t, i);
          } catch (r) {
            return void this.destination.error(r);
          }
          this._innerSub(e);
        }
        _innerSub(t) {
          const e = this.innerSubscription;
          e && e.unsubscribe();
          const i = new Js(this),
            r = this.destination;
          r.add(i),
            (this.innerSubscription = Xs(t, i)),
            this.innerSubscription !== i && r.add(this.innerSubscription);
        }
        _complete() {
          const { innerSubscription: t } = this;
          (!t || t.closed) && super._complete(), this.unsubscribe();
        }
        _unsubscribe() {
          this.innerSubscription = void 0;
        }
        notifyComplete() {
          (this.innerSubscription = void 0),
            this.isStopped && super._complete();
        }
        notifyNext(t) {
          this.destination.next(t);
        }
      }
      const mM = (() => {
        function n() {
          return (
            Error.call(this),
            (this.message = "argument out of range"),
            (this.name = "ArgumentOutOfRangeError"),
            this
          );
        }
        return (n.prototype = Object.create(Error.prototype)), n;
      })();
      function Oe(n) {
        return (t) => (0 === n ? Rd() : t.lift(new N8(n)));
      }
      class N8 {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new mM();
        }
        call(t, e) {
          return e.subscribe(new R8(t, this.total));
        }
      }
      class R8 extends He {
        constructor(t, e) {
          super(t), (this.total = e), (this.count = 0);
        }
        _next(t) {
          const e = this.total,
            i = ++this.count;
          i <= e &&
            (this.destination.next(t),
            i === e && (this.destination.complete(), this.unsubscribe()));
        }
      }
      function Bn(...n) {
        const t = n[n.length - 1];
        return Ks(t) ? (n.pop(), (e) => sa(n, e, t)) : (e) => sa(n, e);
      }
      function _M(n, t) {
        let e = !1;
        return (
          arguments.length >= 2 && (e = !0),
          function (r) {
            return r.lift(new I8(n, t, e));
          }
        );
      }
      class I8 {
        constructor(t, e, i = !1) {
          (this.accumulator = t), (this.seed = e), (this.hasSeed = i);
        }
        call(t, e) {
          return e.subscribe(
            new x8(t, this.accumulator, this.seed, this.hasSeed)
          );
        }
      }
      class x8 extends He {
        constructor(t, e, i, r) {
          super(t),
            (this.accumulator = e),
            (this._seed = i),
            (this.hasSeed = r),
            (this.index = 0);
        }
        get seed() {
          return this._seed;
        }
        set seed(t) {
          (this.hasSeed = !0), (this._seed = t);
        }
        _next(t) {
          if (this.hasSeed) return this._tryNext(t);
          (this.seed = t), this.destination.next(t);
        }
        _tryNext(t) {
          const e = this.index++;
          let i;
          try {
            i = this.accumulator(this.seed, t, e);
          } catch (r) {
            this.destination.error(r);
          }
          (this.seed = i), this.destination.next(i);
        }
      }
      function Pe(n, t) {
        return function (i) {
          return i.lift(new O8(n, t));
        };
      }
      class O8 {
        constructor(t, e) {
          (this.predicate = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new P8(t, this.predicate, this.thisArg));
        }
      }
      class P8 extends He {
        constructor(t, e, i) {
          super(t), (this.predicate = e), (this.thisArg = i), (this.count = 0);
        }
        _next(t) {
          let e;
          try {
            e = this.predicate.call(this.thisArg, t, this.count++);
          } catch (i) {
            return void this.destination.error(i);
          }
          e && this.destination.next(t);
        }
      }
      function Es(n) {
        return function (e) {
          const i = new F8(n),
            r = e.lift(i);
          return (i.caught = r);
        };
      }
      class F8 {
        constructor(t) {
          this.selector = t;
        }
        call(t, e) {
          return e.subscribe(new L8(t, this.selector, this.caught));
        }
      }
      class L8 extends Qs {
        constructor(t, e, i) {
          super(t), (this.selector = e), (this.caught = i);
        }
        error(t) {
          if (!this.isStopped) {
            let e;
            try {
              e = this.selector(t, this.caught);
            } catch (s) {
              return void super.error(s);
            }
            this._unsubscribeAndRecycle();
            const i = new Js(this);
            this.add(i);
            const r = Xs(e, i);
            r !== i && this.add(r);
          }
        }
      }
      function aa(n, t) {
        return Ft(n, t, 1);
      }
      function n_(n) {
        return function (e) {
          return 0 === n ? Rd() : e.lift(new V8(n));
        };
      }
      class V8 {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new mM();
        }
        call(t, e) {
          return e.subscribe(new B8(t, this.total));
        }
      }
      class B8 extends He {
        constructor(t, e) {
          super(t),
            (this.total = e),
            (this.ring = new Array()),
            (this.count = 0);
        }
        _next(t) {
          const e = this.ring,
            i = this.total,
            r = this.count++;
          e.length < i ? e.push(t) : (e[r % i] = t);
        }
        _complete() {
          const t = this.destination;
          let e = this.count;
          if (e > 0) {
            const i = this.count >= this.total ? this.total : this.count,
              r = this.ring;
            for (let s = 0; s < i; s++) {
              const o = e++ % i;
              t.next(r[o]);
            }
          }
          t.complete();
        }
      }
      function yM(n = j8) {
        return (t) => t.lift(new H8(n));
      }
      class H8 {
        constructor(t) {
          this.errorFactory = t;
        }
        call(t, e) {
          return e.subscribe(new $8(t, this.errorFactory));
        }
      }
      class $8 extends He {
        constructor(t, e) {
          super(t), (this.errorFactory = e), (this.hasValue = !1);
        }
        _next(t) {
          (this.hasValue = !0), this.destination.next(t);
        }
        _complete() {
          if (this.hasValue) return this.destination.complete();
          {
            let t;
            try {
              t = this.errorFactory();
            } catch (e) {
              t = e;
            }
            this.destination.error(t);
          }
        }
      }
      function j8() {
        return new Nd();
      }
      function bM(n = null) {
        return (t) => t.lift(new U8(n));
      }
      class U8 {
        constructor(t) {
          this.defaultValue = t;
        }
        call(t, e) {
          return e.subscribe(new z8(t, this.defaultValue));
        }
      }
      class z8 extends He {
        constructor(t, e) {
          super(t), (this.defaultValue = e), (this.isEmpty = !0);
        }
        _next(t) {
          (this.isEmpty = !1), this.destination.next(t);
        }
        _complete() {
          this.isEmpty && this.destination.next(this.defaultValue),
            this.destination.complete();
        }
      }
      function la(n, t) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            n ? Pe((r, s) => n(r, s, i)) : Uc,
            Oe(1),
            e ? bM(t) : yM(() => new Nd())
          );
      }
      function _r() {}
      function It(n, t, e) {
        return function (r) {
          return r.lift(new W8(n, t, e));
        };
      }
      class W8 {
        constructor(t, e, i) {
          (this.nextOrObserver = t), (this.error = e), (this.complete = i);
        }
        call(t, e) {
          return e.subscribe(
            new q8(t, this.nextOrObserver, this.error, this.complete)
          );
        }
      }
      class q8 extends He {
        constructor(t, e, i, r) {
          super(t),
            (this._tapNext = _r),
            (this._tapError = _r),
            (this._tapComplete = _r),
            (this._tapError = i || _r),
            (this._tapComplete = r || _r),
            Pi(e)
              ? ((this._context = this), (this._tapNext = e))
              : e &&
                ((this._context = e),
                (this._tapNext = e.next || _r),
                (this._tapError = e.error || _r),
                (this._tapComplete = e.complete || _r));
        }
        _next(t) {
          try {
            this._tapNext.call(this._context, t);
          } catch (e) {
            return void this.destination.error(e);
          }
          this.destination.next(t);
        }
        _error(t) {
          try {
            this._tapError.call(this._context, t);
          } catch (e) {
            return void this.destination.error(e);
          }
          this.destination.error(t);
        }
        _complete() {
          try {
            this._tapComplete.call(this._context);
          } catch (t) {
            return void this.destination.error(t);
          }
          return this.destination.complete();
        }
      }
      class K8 {
        constructor(t) {
          this.callback = t;
        }
        call(t, e) {
          return e.subscribe(new J8(t, this.callback));
        }
      }
      class J8 extends He {
        constructor(t, e) {
          super(t), this.add(new Ve(e));
        }
      }
      class yr {
        constructor(t, e) {
          (this.id = t), (this.url = e);
        }
      }
      class i_ extends yr {
        constructor(t, e, i = "imperative", r = null) {
          super(t, e), (this.navigationTrigger = i), (this.restoredState = r);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Xl extends yr {
        constructor(t, e, i) {
          super(t, e), (this.urlAfterRedirects = i);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class vM extends yr {
        constructor(t, e, i) {
          super(t, e), (this.reason = i);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Q8 extends yr {
        constructor(t, e, i) {
          super(t, e), (this.error = i);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class X8 extends yr {
        constructor(t, e, i, r) {
          super(t, e), (this.urlAfterRedirects = i), (this.state = r);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Z8 extends yr {
        constructor(t, e, i, r) {
          super(t, e), (this.urlAfterRedirects = i), (this.state = r);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class e5 extends yr {
        constructor(t, e, i, r, s) {
          super(t, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.shouldActivate = s);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class t5 extends yr {
        constructor(t, e, i, r) {
          super(t, e), (this.urlAfterRedirects = i), (this.state = r);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class n5 extends yr {
        constructor(t, e, i, r) {
          super(t, e), (this.urlAfterRedirects = i), (this.state = r);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class wM {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class CM {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class i5 {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class r5 {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class s5 {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class o5 {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class DM {
        constructor(t, e, i) {
          (this.routerEvent = t), (this.position = e), (this.anchor = i);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      const Re = "primary";
      class a5 {
        constructor(t) {
          this.params = t || {};
        }
        has(t) {
          return Object.prototype.hasOwnProperty.call(this.params, t);
        }
        get(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function ca(n) {
        return new a5(n);
      }
      const EM = "ngNavigationCancelingError";
      function r_(n) {
        const t = Error("NavigationCancelingError: " + n);
        return (t[EM] = !0), t;
      }
      function c5(n, t, e) {
        const i = e.path.split("/");
        if (
          i.length > n.length ||
          ("full" === e.pathMatch && (t.hasChildren() || i.length < n.length))
        )
          return null;
        const r = {};
        for (let s = 0; s < i.length; s++) {
          const o = i[s],
            a = n[s];
          if (o.startsWith(":")) r[o.substring(1)] = a;
          else if (o !== a.path) return null;
        }
        return { consumed: n.slice(0, i.length), posParams: r };
      }
      function Ji(n, t) {
        const e = n ? Object.keys(n) : void 0,
          i = t ? Object.keys(t) : void 0;
        if (!e || !i || e.length != i.length) return !1;
        let r;
        for (let s = 0; s < e.length; s++)
          if (((r = e[s]), !MM(n[r], t[r]))) return !1;
        return !0;
      }
      function MM(n, t) {
        if (Array.isArray(n) && Array.isArray(t)) {
          if (n.length !== t.length) return !1;
          const e = [...n].sort(),
            i = [...t].sort();
          return e.every((r, s) => i[s] === r);
        }
        return n === t;
      }
      function SM(n) {
        return Array.prototype.concat.apply([], n);
      }
      function TM(n) {
        return n.length > 0 ? n[n.length - 1] : null;
      }
      function Jt(n, t) {
        for (const e in n) n.hasOwnProperty(e) && t(n[e], e);
      }
      function Qi(n) {
        return Ou(n) ? n : wl(n) ? Pt(Promise.resolve(n)) : J(n);
      }
      const h5 = {
          exact: function NM(n, t, e) {
            if (
              !Ss(n.segments, t.segments) ||
              !Id(n.segments, t.segments, e) ||
              n.numberOfChildren !== t.numberOfChildren
            )
              return !1;
            for (const i in t.children)
              if (!n.children[i] || !NM(n.children[i], t.children[i], e))
                return !1;
            return !0;
          },
          subset: RM,
        },
        AM = {
          exact: function (n, t) {
            return Ji(n, t);
          },
          subset: function (n, t) {
            return (
              Object.keys(t).length <= Object.keys(n).length &&
              Object.keys(t).every((e) => MM(n[e], t[e]))
            );
          },
          ignored: () => !0,
        };
      function kM(n, t, e) {
        return (
          h5[e.paths](n.root, t.root, e.matrixParams) &&
          AM[e.queryParams](n.queryParams, t.queryParams) &&
          !("exact" === e.fragment && n.fragment !== t.fragment)
        );
      }
      function RM(n, t, e) {
        return IM(n, t, t.segments, e);
      }
      function IM(n, t, e, i) {
        if (n.segments.length > e.length) {
          const r = n.segments.slice(0, e.length);
          return !(!Ss(r, e) || t.hasChildren() || !Id(r, e, i));
        }
        if (n.segments.length === e.length) {
          if (!Ss(n.segments, e) || !Id(n.segments, e, i)) return !1;
          for (const r in t.children)
            if (!n.children[r] || !RM(n.children[r], t.children[r], i))
              return !1;
          return !0;
        }
        {
          const r = e.slice(0, n.segments.length),
            s = e.slice(n.segments.length);
          return (
            !!(Ss(n.segments, r) && Id(n.segments, r, i) && n.children[Re]) &&
            IM(n.children[Re], t, s, i)
          );
        }
      }
      function Id(n, t, e) {
        return t.every((i, r) => AM[e](n[r].parameters, i.parameters));
      }
      class Ms {
        constructor(t, e, i) {
          (this.root = t), (this.queryParams = e), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ca(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return _5.serialize(this);
        }
      }
      class Ie {
        constructor(t, e) {
          (this.segments = t),
            (this.children = e),
            (this.parent = null),
            Jt(e, (i, r) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return xd(this);
        }
      }
      class Zl {
        constructor(t, e) {
          (this.path = t), (this.parameters = e);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = ca(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return FM(this);
        }
      }
      function Ss(n, t) {
        return n.length === t.length && n.every((e, i) => e.path === t[i].path);
      }
      class s_ {}
      class xM {
        parse(t) {
          const e = new S5(t);
          return new Ms(
            e.parseRootSegment(),
            e.parseQueryParams(),
            e.parseFragment()
          );
        }
        serialize(t) {
          return `${`/${ec(t.root, !0)}`}${(function (n) {
            const t = Object.keys(n)
              .map((e) => {
                const i = n[e];
                return Array.isArray(i)
                  ? i.map((r) => `${Od(e)}=${Od(r)}`).join("&")
                  : `${Od(e)}=${Od(i)}`;
              })
              .filter((e) => !!e);
            return t.length ? `?${t.join("&")}` : "";
          })(t.queryParams)}${
            "string" == typeof t.fragment
              ? `#${(function (n) {
                  return encodeURI(n);
                })(t.fragment)}`
              : ""
          }`;
        }
      }
      const _5 = new xM();
      function xd(n) {
        return n.segments.map((t) => FM(t)).join("/");
      }
      function ec(n, t) {
        if (!n.hasChildren()) return xd(n);
        if (t) {
          const e = n.children[Re] ? ec(n.children[Re], !1) : "",
            i = [];
          return (
            Jt(n.children, (r, s) => {
              s !== Re && i.push(`${s}:${ec(r, !1)}`);
            }),
            i.length > 0 ? `${e}(${i.join("//")})` : e
          );
        }
        {
          const e = (function (n, t) {
            let e = [];
            return (
              Jt(n.children, (i, r) => {
                r === Re && (e = e.concat(t(i, r)));
              }),
              Jt(n.children, (i, r) => {
                r !== Re && (e = e.concat(t(i, r)));
              }),
              e
            );
          })(n, (i, r) =>
            r === Re ? [ec(n.children[Re], !1)] : [`${r}:${ec(i, !1)}`]
          );
          return 1 === Object.keys(n.children).length && null != n.children[Re]
            ? `${xd(n)}/${e[0]}`
            : `${xd(n)}/(${e.join("//")})`;
        }
      }
      function OM(n) {
        return encodeURIComponent(n)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function Od(n) {
        return OM(n).replace(/%3B/gi, ";");
      }
      function o_(n) {
        return OM(n)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function Pd(n) {
        return decodeURIComponent(n);
      }
      function PM(n) {
        return Pd(n.replace(/\+/g, "%20"));
      }
      function FM(n) {
        return `${o_(n.path)}${(function (n) {
          return Object.keys(n)
            .map((t) => `;${o_(t)}=${o_(n[t])}`)
            .join("");
        })(n.parameters)}`;
      }
      const w5 = /^[^\/()?;=#]+/;
      function Fd(n) {
        const t = n.match(w5);
        return t ? t[0] : "";
      }
      const C5 = /^[^=?&#]+/,
        E5 = /^[^?&#]+/;
      class S5 {
        constructor(t) {
          (this.url = t), (this.remaining = t);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new Ie([], {})
              : new Ie([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const t = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(t);
            } while (this.consumeOptional("&"));
          return t;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const t = [];
          for (
            this.peekStartsWith("(") || t.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), t.push(this.parseSegment());
          let e = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (e = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith("(") && (i = this.parseParens(!1)),
            (t.length > 0 || Object.keys(e).length > 0) &&
              (i[Re] = new Ie(t, e)),
            i
          );
        }
        parseSegment() {
          const t = Fd(this.remaining);
          if ("" === t && this.peekStartsWith(";"))
            throw new Error(
              `Empty path url segment cannot have parameters: '${this.remaining}'.`
            );
          return this.capture(t), new Zl(Pd(t), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const t = {};
          for (; this.consumeOptional(";"); ) this.parseParam(t);
          return t;
        }
        parseParam(t) {
          const e = Fd(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const r = Fd(this.remaining);
            r && ((i = r), this.capture(i));
          }
          t[Pd(e)] = Pd(i);
        }
        parseQueryParam(t) {
          const e = (function (n) {
            const t = n.match(C5);
            return t ? t[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const o = (function (n) {
              const t = n.match(E5);
              return t ? t[0] : "";
            })(this.remaining);
            o && ((i = o), this.capture(i));
          }
          const r = PM(e),
            s = PM(i);
          if (t.hasOwnProperty(r)) {
            let o = t[r];
            Array.isArray(o) || ((o = [o]), (t[r] = o)), o.push(s);
          } else t[r] = s;
        }
        parseParens(t) {
          const e = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const i = Fd(this.remaining),
              r = this.remaining[i.length];
            if ("/" !== r && ")" !== r && ";" !== r)
              throw new Error(`Cannot parse url '${this.url}'`);
            let s;
            i.indexOf(":") > -1
              ? ((s = i.substr(0, i.indexOf(":"))),
                this.capture(s),
                this.capture(":"))
              : t && (s = Re);
            const o = this.parseChildren();
            (e[s] = 1 === Object.keys(o).length ? o[Re] : new Ie([], o)),
              this.consumeOptional("//");
          }
          return e;
        }
        peekStartsWith(t) {
          return this.remaining.startsWith(t);
        }
        consumeOptional(t) {
          return (
            !!this.peekStartsWith(t) &&
            ((this.remaining = this.remaining.substring(t.length)), !0)
          );
        }
        capture(t) {
          if (!this.consumeOptional(t)) throw new Error(`Expected "${t}".`);
        }
      }
      class LM {
        constructor(t) {
          this._root = t;
        }
        get root() {
          return this._root.value;
        }
        parent(t) {
          const e = this.pathFromRoot(t);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(t) {
          const e = a_(t, this._root);
          return e ? e.children.map((i) => i.value) : [];
        }
        firstChild(t) {
          const e = a_(t, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(t) {
          const e = l_(t, this._root);
          return e.length < 2
            ? []
            : e[e.length - 2].children
                .map((r) => r.value)
                .filter((r) => r !== t);
        }
        pathFromRoot(t) {
          return l_(t, this._root).map((e) => e.value);
        }
      }
      function a_(n, t) {
        if (n === t.value) return t;
        for (const e of t.children) {
          const i = a_(n, e);
          if (i) return i;
        }
        return null;
      }
      function l_(n, t) {
        if (n === t.value) return [t];
        for (const e of t.children) {
          const i = l_(n, e);
          if (i.length) return i.unshift(t), i;
        }
        return [];
      }
      class br {
        constructor(t, e) {
          (this.value = t), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function tc(n) {
        const t = {};
        return n && n.children.forEach((e) => (t[e.value.outlet] = e)), t;
      }
      class VM extends LM {
        constructor(t, e) {
          super(t), (this.snapshot = e), c_(this, t);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function BM(n, t) {
        const e = (function (n, t) {
            const o = new Ld([], {}, {}, "", {}, Re, t, null, n.root, -1, {});
            return new $M("", new br(o, []));
          })(n, t),
          i = new rt([new Zl("", {})]),
          r = new rt({}),
          s = new rt({}),
          o = new rt({}),
          a = new rt(""),
          l = new ua(i, r, o, a, s, Re, t, e.root);
        return (l.snapshot = e.root), new VM(new br(l, []), e);
      }
      class ua {
        constructor(t, e, i, r, s, o, a, l) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = s),
            (this.outlet = o),
            (this.component = a),
            (this._futureSnapshot = l);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(Q((t) => ca(t)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(Q((t) => ca(t)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function HM(n, t = "emptyOnly") {
        const e = n.pathFromRoot;
        let i = 0;
        if ("always" !== t)
          for (i = e.length - 1; i >= 1; ) {
            const r = e[i],
              s = e[i - 1];
            if (r.routeConfig && "" === r.routeConfig.path) i--;
            else {
              if (s.component) break;
              i--;
            }
          }
        return (function (n) {
          return n.reduce(
            (t, e) => ({
              params: Object.assign(Object.assign({}, t.params), e.params),
              data: Object.assign(Object.assign({}, t.data), e.data),
              resolve: Object.assign(
                Object.assign({}, t.resolve),
                e._resolvedData
              ),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(e.slice(i));
      }
      class Ld {
        constructor(t, e, i, r, s, o, a, l, c, u, d) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = s),
            (this.outlet = o),
            (this.component = a),
            (this.routeConfig = l),
            (this._urlSegment = c),
            (this._lastPathIndex = u),
            (this._resolve = d);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = ca(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ca(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class $M extends LM {
        constructor(t, e) {
          super(e), (this.url = t), c_(this, e);
        }
        toString() {
          return jM(this._root);
        }
      }
      function c_(n, t) {
        (t.value._routerState = n), t.children.forEach((e) => c_(n, e));
      }
      function jM(n) {
        const t =
          n.children.length > 0 ? ` { ${n.children.map(jM).join(", ")} } ` : "";
        return `${n.value}${t}`;
      }
      function u_(n) {
        if (n.snapshot) {
          const t = n.snapshot,
            e = n._futureSnapshot;
          (n.snapshot = e),
            Ji(t.queryParams, e.queryParams) ||
              n.queryParams.next(e.queryParams),
            t.fragment !== e.fragment && n.fragment.next(e.fragment),
            Ji(t.params, e.params) || n.params.next(e.params),
            (function (n, t) {
              if (n.length !== t.length) return !1;
              for (let e = 0; e < n.length; ++e) if (!Ji(n[e], t[e])) return !1;
              return !0;
            })(t.url, e.url) || n.url.next(e.url),
            Ji(t.data, e.data) || n.data.next(e.data);
        } else
          (n.snapshot = n._futureSnapshot), n.data.next(n._futureSnapshot.data);
      }
      function d_(n, t) {
        return (
          Ji(n.params, t.params) &&
          (function (n, t) {
            return (
              Ss(n, t) && n.every((e, i) => Ji(e.parameters, t[i].parameters))
            );
          })(n.url, t.url) &&
          !(!n.parent != !t.parent) &&
          (!n.parent || d_(n.parent, t.parent))
        );
      }
      function Vd(n, t, e) {
        if (e && n.shouldReuseRoute(t.value, e.value.snapshot)) {
          const i = e.value;
          i._futureSnapshot = t.value;
          const r = (function (n, t, e) {
            return t.children.map((i) => {
              for (const r of e.children)
                if (n.shouldReuseRoute(i.value, r.value.snapshot))
                  return Vd(n, i, r);
              return Vd(n, i);
            });
          })(n, t, e);
          return new br(i, r);
        }
        {
          if (n.shouldAttach(t.value)) {
            const s = n.retrieve(t.value);
            if (null !== s) {
              const o = s.route;
              return UM(t, o), o;
            }
          }
          const i = (function (n) {
              return new ua(
                new rt(n.url),
                new rt(n.params),
                new rt(n.queryParams),
                new rt(n.fragment),
                new rt(n.data),
                n.outlet,
                n.component,
                n
              );
            })(t.value),
            r = t.children.map((s) => Vd(n, s));
          return new br(i, r);
        }
      }
      function UM(n, t) {
        if (n.value.routeConfig !== t.value.routeConfig)
          throw new Error(
            "Cannot reattach ActivatedRouteSnapshot created from a different route"
          );
        if (n.children.length !== t.children.length)
          throw new Error(
            "Cannot reattach ActivatedRouteSnapshot with a different number of children"
          );
        t.value._futureSnapshot = n.value;
        for (let e = 0; e < n.children.length; ++e)
          UM(n.children[e], t.children[e]);
      }
      function Bd(n) {
        return (
          "object" == typeof n && null != n && !n.outlets && !n.segmentPath
        );
      }
      function nc(n) {
        return "object" == typeof n && null != n && n.outlets;
      }
      function h_(n, t, e, i, r) {
        let s = {};
        return (
          i &&
            Jt(i, (o, a) => {
              s[a] = Array.isArray(o) ? o.map((l) => `${l}`) : `${o}`;
            }),
          new Ms(e.root === n ? t : zM(e.root, n, t), s, r)
        );
      }
      function zM(n, t, e) {
        const i = {};
        return (
          Jt(n.children, (r, s) => {
            i[s] = r === t ? e : zM(r, t, e);
          }),
          new Ie(n.segments, i)
        );
      }
      class GM {
        constructor(t, e, i) {
          if (
            ((this.isAbsolute = t),
            (this.numberOfDoubleDots = e),
            (this.commands = i),
            t && i.length > 0 && Bd(i[0]))
          )
            throw new Error("Root segment cannot have matrix parameters");
          const r = i.find(nc);
          if (r && r !== TM(i))
            throw new Error("{outlets:{}} has to be the last command");
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class f_ {
        constructor(t, e, i) {
          (this.segmentGroup = t), (this.processChildren = e), (this.index = i);
        }
      }
      function WM(n, t, e) {
        if (
          (n || (n = new Ie([], {})),
          0 === n.segments.length && n.hasChildren())
        )
          return Hd(n, t, e);
        const i = (function (n, t, e) {
            let i = 0,
              r = t;
            const s = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; r < n.segments.length; ) {
              if (i >= e.length) return s;
              const o = n.segments[r],
                a = e[i];
              if (nc(a)) break;
              const l = `${a}`,
                c = i < e.length - 1 ? e[i + 1] : null;
              if (r > 0 && void 0 === l) break;
              if (l && c && "object" == typeof c && void 0 === c.outlets) {
                if (!YM(l, c, o)) return s;
                i += 2;
              } else {
                if (!YM(l, {}, o)) return s;
                i++;
              }
              r++;
            }
            return { match: !0, pathIndex: r, commandIndex: i };
          })(n, t, e),
          r = e.slice(i.commandIndex);
        if (i.match && i.pathIndex < n.segments.length) {
          const s = new Ie(n.segments.slice(0, i.pathIndex), {});
          return (
            (s.children[Re] = new Ie(
              n.segments.slice(i.pathIndex),
              n.children
            )),
            Hd(s, 0, r)
          );
        }
        return i.match && 0 === r.length
          ? new Ie(n.segments, {})
          : i.match && !n.hasChildren()
          ? p_(n, t, e)
          : i.match
          ? Hd(n, 0, r)
          : p_(n, t, e);
      }
      function Hd(n, t, e) {
        if (0 === e.length) return new Ie(n.segments, {});
        {
          const i = (function (n) {
              return nc(n[0]) ? n[0].outlets : { [Re]: n };
            })(e),
            r = {};
          return (
            Jt(i, (s, o) => {
              "string" == typeof s && (s = [s]),
                null !== s && (r[o] = WM(n.children[o], t, s));
            }),
            Jt(n.children, (s, o) => {
              void 0 === i[o] && (r[o] = s);
            }),
            new Ie(n.segments, r)
          );
        }
      }
      function p_(n, t, e) {
        const i = n.segments.slice(0, t);
        let r = 0;
        for (; r < e.length; ) {
          const s = e[r];
          if (nc(s)) {
            const l = V5(s.outlets);
            return new Ie(i, l);
          }
          if (0 === r && Bd(e[0])) {
            i.push(new Zl(n.segments[t].path, qM(e[0]))), r++;
            continue;
          }
          const o = nc(s) ? s.outlets[Re] : `${s}`,
            a = r < e.length - 1 ? e[r + 1] : null;
          o && a && Bd(a)
            ? (i.push(new Zl(o, qM(a))), (r += 2))
            : (i.push(new Zl(o, {})), r++);
        }
        return new Ie(i, {});
      }
      function V5(n) {
        const t = {};
        return (
          Jt(n, (e, i) => {
            "string" == typeof e && (e = [e]),
              null !== e && (t[i] = p_(new Ie([], {}), 0, e));
          }),
          t
        );
      }
      function qM(n) {
        const t = {};
        return Jt(n, (e, i) => (t[i] = `${e}`)), t;
      }
      function YM(n, t, e) {
        return n == e.path && Ji(t, e.parameters);
      }
      class H5 {
        constructor(t, e, i, r) {
          (this.routeReuseStrategy = t),
            (this.futureState = e),
            (this.currState = i),
            (this.forwardEvent = r);
        }
        activate(t) {
          const e = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, i, t),
            u_(this.futureState.root),
            this.activateChildRoutes(e, i, t);
        }
        deactivateChildRoutes(t, e, i) {
          const r = tc(e);
          t.children.forEach((s) => {
            const o = s.value.outlet;
            this.deactivateRoutes(s, r[o], i), delete r[o];
          }),
            Jt(r, (s, o) => {
              this.deactivateRouteAndItsChildren(s, i);
            });
        }
        deactivateRoutes(t, e, i) {
          const r = t.value,
            s = e ? e.value : null;
          if (r === s)
            if (r.component) {
              const o = i.getContext(r.outlet);
              o && this.deactivateChildRoutes(t, e, o.children);
            } else this.deactivateChildRoutes(t, e, i);
          else s && this.deactivateRouteAndItsChildren(e, i);
        }
        deactivateRouteAndItsChildren(t, e) {
          this.routeReuseStrategy.shouldDetach(t.value.snapshot)
            ? this.detachAndStoreRouteSubtree(t, e)
            : this.deactivateRouteAndOutlet(t, e);
        }
        detachAndStoreRouteSubtree(t, e) {
          const i = e.getContext(t.value.outlet);
          if (i && i.outlet) {
            const r = i.outlet.detach(),
              s = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(t.value.snapshot, {
              componentRef: r,
              route: t,
              contexts: s,
            });
          }
        }
        deactivateRouteAndOutlet(t, e) {
          const i = e.getContext(t.value.outlet),
            r = i && t.value.component ? i.children : e,
            s = tc(t);
          for (const o of Object.keys(s))
            this.deactivateRouteAndItsChildren(s[o], r);
          i &&
            i.outlet &&
            (i.outlet.deactivate(),
            i.children.onOutletDeactivated(),
            (i.attachRef = null),
            (i.resolver = null),
            (i.route = null));
        }
        activateChildRoutes(t, e, i) {
          const r = tc(e);
          t.children.forEach((s) => {
            this.activateRoutes(s, r[s.value.outlet], i),
              this.forwardEvent(new o5(s.value.snapshot));
          }),
            t.children.length && this.forwardEvent(new r5(t.value.snapshot));
        }
        activateRoutes(t, e, i) {
          const r = t.value,
            s = e ? e.value : null;
          if ((u_(r), r === s))
            if (r.component) {
              const o = i.getOrCreateContext(r.outlet);
              this.activateChildRoutes(t, e, o.children);
            } else this.activateChildRoutes(t, e, i);
          else if (r.component) {
            const o = i.getOrCreateContext(r.outlet);
            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
              const a = this.routeReuseStrategy.retrieve(r.snapshot);
              this.routeReuseStrategy.store(r.snapshot, null),
                o.children.onOutletReAttached(a.contexts),
                (o.attachRef = a.componentRef),
                (o.route = a.route.value),
                o.outlet && o.outlet.attach(a.componentRef, a.route.value),
                KM(a.route);
            } else {
              const a = (function (n) {
                  for (let t = n.parent; t; t = t.parent) {
                    const e = t.routeConfig;
                    if (e && e._loadedConfig) return e._loadedConfig;
                    if (e && e.component) return null;
                  }
                  return null;
                })(r.snapshot),
                l = a ? a.module.componentFactoryResolver : null;
              (o.attachRef = null),
                (o.route = r),
                (o.resolver = l),
                o.outlet && o.outlet.activateWith(r, l),
                this.activateChildRoutes(t, null, o.children);
            }
          } else this.activateChildRoutes(t, null, i);
        }
      }
      function KM(n) {
        u_(n.value), n.children.forEach(KM);
      }
      class g_ {
        constructor(t, e) {
          (this.routes = t), (this.module = e);
        }
      }
      function Ur(n) {
        return "function" == typeof n;
      }
      function Ts(n) {
        return n instanceof Ms;
      }
      const ic = Symbol("INITIAL_VALUE");
      function rc() {
        return jt((n) =>
          Ds(n.map((t) => t.pipe(Oe(1), Bn(ic)))).pipe(
            _M((t, e) => {
              let i = !1;
              return e.reduce(
                (r, s, o) =>
                  r !== ic
                    ? r
                    : (s === ic && (i = !0),
                      i || (!1 !== s && o !== e.length - 1 && !Ts(s)) ? r : s),
                t
              );
            }, ic),
            Pe((t) => t !== ic),
            Q((t) => (Ts(t) ? t : !0 === t)),
            Oe(1)
          )
        );
      }
      let JM = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵcmp = ne({
            type: n,
            selectors: [["ng-component"]],
            decls: 1,
            vars: 0,
            template: function (e, i) {
              1 & e && Z(0, "router-outlet");
            },
            directives: function () {
              return [w_];
            },
            encapsulation: 2,
          })),
          n
        );
      })();
      function QM(n, t = "") {
        for (let e = 0; e < n.length; e++) {
          const i = n[e];
          q5(i, Y5(t, i));
        }
      }
      function q5(n, t) {
        n.children && QM(n.children, t);
      }
      function Y5(n, t) {
        return t
          ? n || t.path
            ? n && !t.path
              ? `${n}/`
              : !n && t.path
              ? t.path
              : `${n}/${t.path}`
            : ""
          : n;
      }
      function m_(n) {
        const t = n.children && n.children.map(m_),
          e = t
            ? Object.assign(Object.assign({}, n), { children: t })
            : Object.assign({}, n);
        return (
          !e.component &&
            (t || e.loadChildren) &&
            e.outlet &&
            e.outlet !== Re &&
            (e.component = JM),
          e
        );
      }
      function ri(n) {
        return n.outlet || Re;
      }
      function XM(n, t) {
        const e = n.filter((i) => ri(i) === t);
        return e.push(...n.filter((i) => ri(i) !== t)), e;
      }
      const ZM = {
        matched: !1,
        consumedSegments: [],
        lastChild: 0,
        parameters: {},
        positionalParamSegments: {},
      };
      function $d(n, t, e) {
        var i;
        if ("" === t.path)
          return "full" === t.pathMatch && (n.hasChildren() || e.length > 0)
            ? Object.assign({}, ZM)
            : {
                matched: !0,
                consumedSegments: [],
                lastChild: 0,
                parameters: {},
                positionalParamSegments: {},
              };
        const s = (t.matcher || c5)(e, n, t);
        if (!s) return Object.assign({}, ZM);
        const o = {};
        Jt(s.posParams, (l, c) => {
          o[c] = l.path;
        });
        const a =
          s.consumed.length > 0
            ? Object.assign(
                Object.assign({}, o),
                s.consumed[s.consumed.length - 1].parameters
              )
            : o;
        return {
          matched: !0,
          consumedSegments: s.consumed,
          lastChild: s.consumed.length,
          parameters: a,
          positionalParamSegments:
            null !== (i = s.posParams) && void 0 !== i ? i : {},
        };
      }
      function jd(n, t, e, i, r = "corrected") {
        if (
          e.length > 0 &&
          (function (n, t, e) {
            return e.some((i) => Ud(n, t, i) && ri(i) !== Re);
          })(n, e, i)
        ) {
          const o = new Ie(
            t,
            (function (n, t, e, i) {
              const r = {};
              (r[Re] = i),
                (i._sourceSegment = n),
                (i._segmentIndexShift = t.length);
              for (const s of e)
                if ("" === s.path && ri(s) !== Re) {
                  const o = new Ie([], {});
                  (o._sourceSegment = n),
                    (o._segmentIndexShift = t.length),
                    (r[ri(s)] = o);
                }
              return r;
            })(n, t, i, new Ie(e, n.children))
          );
          return (
            (o._sourceSegment = n),
            (o._segmentIndexShift = t.length),
            { segmentGroup: o, slicedSegments: [] }
          );
        }
        if (
          0 === e.length &&
          (function (n, t, e) {
            return e.some((i) => Ud(n, t, i));
          })(n, e, i)
        ) {
          const o = new Ie(
            n.segments,
            (function (n, t, e, i, r, s) {
              const o = {};
              for (const a of i)
                if (Ud(n, e, a) && !r[ri(a)]) {
                  const l = new Ie([], {});
                  (l._sourceSegment = n),
                    (l._segmentIndexShift =
                      "legacy" === s ? n.segments.length : t.length),
                    (o[ri(a)] = l);
                }
              return Object.assign(Object.assign({}, r), o);
            })(n, t, e, i, n.children, r)
          );
          return (
            (o._sourceSegment = n),
            (o._segmentIndexShift = t.length),
            { segmentGroup: o, slicedSegments: e }
          );
        }
        const s = new Ie(n.segments, n.children);
        return (
          (s._sourceSegment = n),
          (s._segmentIndexShift = t.length),
          { segmentGroup: s, slicedSegments: e }
        );
      }
      function Ud(n, t, e) {
        return (
          (!(n.hasChildren() || t.length > 0) || "full" !== e.pathMatch) &&
          "" === e.path
        );
      }
      function eS(n, t, e, i) {
        return (
          !!(ri(n) === i || (i !== Re && Ud(t, e, n))) &&
          ("**" === n.path || $d(t, n, e).matched)
        );
      }
      function tS(n, t, e) {
        return 0 === t.length && !n.children[e];
      }
      class sc {
        constructor(t) {
          this.segmentGroup = t || null;
        }
      }
      class nS {
        constructor(t) {
          this.urlTree = t;
        }
      }
      function zd(n) {
        return new Ce((t) => t.error(new sc(n)));
      }
      function iS(n) {
        return new Ce((t) => t.error(new nS(n)));
      }
      function Z5(n) {
        return new Ce((t) =>
          t.error(
            new Error(
              `Only absolute redirects can have named outlets. redirectTo: '${n}'`
            )
          )
        );
      }
      class n4 {
        constructor(t, e, i, r, s) {
          (this.configLoader = e),
            (this.urlSerializer = i),
            (this.urlTree = r),
            (this.config = s),
            (this.allowRedirects = !0),
            (this.ngModule = t.get(Yi));
        }
        apply() {
          const t = jd(this.urlTree.root, [], [], this.config).segmentGroup,
            e = new Ie(t.segments, t.children);
          return this.expandSegmentGroup(this.ngModule, this.config, e, Re)
            .pipe(
              Q((s) =>
                this.createUrlTree(
                  __(s),
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              Es((s) => {
                if (s instanceof nS)
                  return (this.allowRedirects = !1), this.match(s.urlTree);
                throw s instanceof sc ? this.noMatchError(s) : s;
              })
            );
        }
        match(t) {
          return this.expandSegmentGroup(this.ngModule, this.config, t.root, Re)
            .pipe(
              Q((r) => this.createUrlTree(__(r), t.queryParams, t.fragment))
            )
            .pipe(
              Es((r) => {
                throw r instanceof sc ? this.noMatchError(r) : r;
              })
            );
        }
        noMatchError(t) {
          return new Error(
            `Cannot match any routes. URL Segment: '${t.segmentGroup}'`
          );
        }
        createUrlTree(t, e, i) {
          const r = t.segments.length > 0 ? new Ie([], { [Re]: t }) : t;
          return new Ms(r, e, i);
        }
        expandSegmentGroup(t, e, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.expandChildren(t, e, i).pipe(Q((s) => new Ie([], s)))
            : this.expandSegment(t, i, e, i.segments, r, !0);
        }
        expandChildren(t, e, i) {
          const r = [];
          for (const s of Object.keys(i.children))
            "primary" === s ? r.unshift(s) : r.push(s);
          return Pt(r).pipe(
            aa((s) => {
              const o = i.children[s],
                a = XM(e, s);
              return this.expandSegmentGroup(t, a, o, s).pipe(
                Q((l) => ({ segment: l, outlet: s }))
              );
            }),
            _M((s, o) => ((s[o.outlet] = o.segment), s), {}),
            (function (n, t) {
              const e = arguments.length >= 2;
              return (i) =>
                i.pipe(
                  n ? Pe((r, s) => n(r, s, i)) : Uc,
                  n_(1),
                  e ? bM(t) : yM(() => new Nd())
                );
            })()
          );
        }
        expandSegment(t, e, i, r, s, o) {
          return Pt(i).pipe(
            aa((a) =>
              this.expandSegmentAgainstRoute(t, e, i, a, r, s, o).pipe(
                Es((c) => {
                  if (c instanceof sc) return J(null);
                  throw c;
                })
              )
            ),
            la((a) => !!a),
            Es((a, l) => {
              if (a instanceof Nd || "EmptyError" === a.name) {
                if (tS(e, r, s)) return J(new Ie([], {}));
                throw new sc(e);
              }
              throw a;
            })
          );
        }
        expandSegmentAgainstRoute(t, e, i, r, s, o, a) {
          return eS(r, e, s, o)
            ? void 0 === r.redirectTo
              ? this.matchSegmentAgainstRoute(t, e, r, s, o)
              : a && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(t, e, i, r, s, o)
              : zd(e)
            : zd(e);
        }
        expandSegmentAgainstRouteUsingRedirect(t, e, i, r, s, o) {
          return "**" === r.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, i, r, o)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                t,
                e,
                i,
                r,
                s,
                o
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, i, r) {
          const s = this.applyRedirectCommands([], i.redirectTo, {});
          return i.redirectTo.startsWith("/")
            ? iS(s)
            : this.lineralizeSegments(i, s).pipe(
                Ft((o) => {
                  const a = new Ie(o, {});
                  return this.expandSegment(t, a, e, o, r, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(t, e, i, r, s, o) {
          const {
            matched: a,
            consumedSegments: l,
            lastChild: c,
            positionalParamSegments: u,
          } = $d(e, r, s);
          if (!a) return zd(e);
          const d = this.applyRedirectCommands(l, r.redirectTo, u);
          return r.redirectTo.startsWith("/")
            ? iS(d)
            : this.lineralizeSegments(r, d).pipe(
                Ft((h) =>
                  this.expandSegment(t, e, i, h.concat(s.slice(c)), o, !1)
                )
              );
        }
        matchSegmentAgainstRoute(t, e, i, r, s) {
          if ("**" === i.path)
            return i.loadChildren
              ? (i._loadedConfig
                  ? J(i._loadedConfig)
                  : this.configLoader.load(t.injector, i)
                ).pipe(Q((h) => ((i._loadedConfig = h), new Ie(r, {}))))
              : J(new Ie(r, {}));
          const { matched: o, consumedSegments: a, lastChild: l } = $d(e, i, r);
          if (!o) return zd(e);
          const c = r.slice(l);
          return this.getChildConfig(t, i, r).pipe(
            Ft((d) => {
              const h = d.module,
                p = d.routes,
                { segmentGroup: g, slicedSegments: _ } = jd(e, a, c, p),
                y = new Ie(g.segments, g.children);
              if (0 === _.length && y.hasChildren())
                return this.expandChildren(h, p, y).pipe(
                  Q((x) => new Ie(a, x))
                );
              if (0 === p.length && 0 === _.length) return J(new Ie(a, {}));
              const E = ri(i) === s;
              return this.expandSegment(h, y, p, _, E ? Re : s, !0).pipe(
                Q((N) => new Ie(a.concat(N.segments), N.children))
              );
            })
          );
        }
        getChildConfig(t, e, i) {
          return e.children
            ? J(new g_(e.children, t))
            : e.loadChildren
            ? void 0 !== e._loadedConfig
              ? J(e._loadedConfig)
              : this.runCanLoadGuards(t.injector, e, i).pipe(
                  Ft((r) =>
                    r
                      ? this.configLoader
                          .load(t.injector, e)
                          .pipe(Q((s) => ((e._loadedConfig = s), s)))
                      : (function (n) {
                          return new Ce((t) =>
                            t.error(
                              r_(
                                `Cannot load children because the guard of the route "path: '${n.path}'" returned false`
                              )
                            )
                          );
                        })(e)
                  )
                )
            : J(new g_([], t));
        }
        runCanLoadGuards(t, e, i) {
          const r = e.canLoad;
          return r && 0 !== r.length
            ? J(
                r.map((o) => {
                  const a = t.get(o);
                  let l;
                  if (
                    (function (n) {
                      return n && Ur(n.canLoad);
                    })(a)
                  )
                    l = a.canLoad(e, i);
                  else {
                    if (!Ur(a)) throw new Error("Invalid CanLoad guard");
                    l = a(e, i);
                  }
                  return Qi(l);
                })
              ).pipe(
                rc(),
                It((o) => {
                  if (!Ts(o)) return;
                  const a = r_(
                    `Redirecting to "${this.urlSerializer.serialize(o)}"`
                  );
                  throw ((a.url = o), a);
                }),
                Q((o) => !0 === o)
              )
            : J(!0);
        }
        lineralizeSegments(t, e) {
          let i = [],
            r = e.root;
          for (;;) {
            if (((i = i.concat(r.segments)), 0 === r.numberOfChildren))
              return J(i);
            if (r.numberOfChildren > 1 || !r.children[Re])
              return Z5(t.redirectTo);
            r = r.children[Re];
          }
        }
        applyRedirectCommands(t, e, i) {
          return this.applyRedirectCreatreUrlTree(
            e,
            this.urlSerializer.parse(e),
            t,
            i
          );
        }
        applyRedirectCreatreUrlTree(t, e, i, r) {
          const s = this.createSegmentGroup(t, e.root, i, r);
          return new Ms(
            s,
            this.createQueryParams(e.queryParams, this.urlTree.queryParams),
            e.fragment
          );
        }
        createQueryParams(t, e) {
          const i = {};
          return (
            Jt(t, (r, s) => {
              if ("string" == typeof r && r.startsWith(":")) {
                const a = r.substring(1);
                i[s] = e[a];
              } else i[s] = r;
            }),
            i
          );
        }
        createSegmentGroup(t, e, i, r) {
          const s = this.createSegments(t, e.segments, i, r);
          let o = {};
          return (
            Jt(e.children, (a, l) => {
              o[l] = this.createSegmentGroup(t, a, i, r);
            }),
            new Ie(s, o)
          );
        }
        createSegments(t, e, i, r) {
          return e.map((s) =>
            s.path.startsWith(":")
              ? this.findPosParam(t, s, r)
              : this.findOrReturn(s, i)
          );
        }
        findPosParam(t, e, i) {
          const r = i[e.path.substring(1)];
          if (!r)
            throw new Error(
              `Cannot redirect to '${t}'. Cannot find '${e.path}'.`
            );
          return r;
        }
        findOrReturn(t, e) {
          let i = 0;
          for (const r of e) {
            if (r.path === t.path) return e.splice(i), r;
            i++;
          }
          return t;
        }
      }
      function __(n) {
        const t = {};
        for (const i of Object.keys(n.children)) {
          const s = __(n.children[i]);
          (s.segments.length > 0 || s.hasChildren()) && (t[i] = s);
        }
        return (function (n) {
          if (1 === n.numberOfChildren && n.children[Re]) {
            const t = n.children[Re];
            return new Ie(n.segments.concat(t.segments), t.children);
          }
          return n;
        })(new Ie(n.segments, t));
      }
      class rS {
        constructor(t) {
          (this.path = t), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Gd {
        constructor(t, e) {
          (this.component = t), (this.route = e);
        }
      }
      function s4(n, t, e) {
        const i = n._root;
        return oc(i, t ? t._root : null, e, [i.value]);
      }
      function Wd(n, t, e) {
        const i = (function (n) {
          if (!n) return null;
          for (let t = n.parent; t; t = t.parent) {
            const e = t.routeConfig;
            if (e && e._loadedConfig) return e._loadedConfig;
          }
          return null;
        })(t);
        return (i ? i.module.injector : e).get(n);
      }
      function oc(
        n,
        t,
        e,
        i,
        r = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const s = tc(t);
        return (
          n.children.forEach((o) => {
            (function (
              n,
              t,
              e,
              i,
              r = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const s = n.value,
                o = t ? t.value : null,
                a = e ? e.getContext(n.value.outlet) : null;
              if (o && s.routeConfig === o.routeConfig) {
                const l = (function (n, t, e) {
                  if ("function" == typeof e) return e(n, t);
                  switch (e) {
                    case "pathParamsChange":
                      return !Ss(n.url, t.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !Ss(n.url, t.url) || !Ji(n.queryParams, t.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !d_(n, t) || !Ji(n.queryParams, t.queryParams);
                    case "paramsChange":
                    default:
                      return !d_(n, t);
                  }
                })(o, s, s.routeConfig.runGuardsAndResolvers);
                l
                  ? r.canActivateChecks.push(new rS(i))
                  : ((s.data = o.data), (s._resolvedData = o._resolvedData)),
                  oc(n, t, s.component ? (a ? a.children : null) : e, i, r),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    r.canDeactivateChecks.push(new Gd(a.outlet.component, o));
              } else
                o && ac(t, a, r),
                  r.canActivateChecks.push(new rS(i)),
                  oc(n, null, s.component ? (a ? a.children : null) : e, i, r);
            })(o, s[o.value.outlet], e, i.concat([o.value]), r),
              delete s[o.value.outlet];
          }),
          Jt(s, (o, a) => ac(o, e.getContext(a), r)),
          r
        );
      }
      function ac(n, t, e) {
        const i = tc(n),
          r = n.value;
        Jt(i, (s, o) => {
          ac(s, r.component ? (t ? t.children.getContext(o) : null) : t, e);
        }),
          e.canDeactivateChecks.push(
            new Gd(
              r.component && t && t.outlet && t.outlet.isActivated
                ? t.outlet.component
                : null,
              r
            )
          );
      }
      class y4 {}
      function sS(n) {
        return new Ce((t) => t.error(n));
      }
      class v4 {
        constructor(t, e, i, r, s, o) {
          (this.rootComponentType = t),
            (this.config = e),
            (this.urlTree = i),
            (this.url = r),
            (this.paramsInheritanceStrategy = s),
            (this.relativeLinkResolution = o);
        }
        recognize() {
          const t = jd(
              this.urlTree.root,
              [],
              [],
              this.config.filter((o) => void 0 === o.redirectTo),
              this.relativeLinkResolution
            ).segmentGroup,
            e = this.processSegmentGroup(this.config, t, Re);
          if (null === e) return null;
          const i = new Ld(
              [],
              Object.freeze({}),
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              {},
              Re,
              this.rootComponentType,
              null,
              this.urlTree.root,
              -1,
              {}
            ),
            r = new br(i, e),
            s = new $M(this.url, r);
          return this.inheritParamsAndData(s._root), s;
        }
        inheritParamsAndData(t) {
          const e = t.value,
            i = HM(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(i.params)),
            (e.data = Object.freeze(i.data)),
            t.children.forEach((r) => this.inheritParamsAndData(r));
        }
        processSegmentGroup(t, e, i) {
          return 0 === e.segments.length && e.hasChildren()
            ? this.processChildren(t, e)
            : this.processSegment(t, e, e.segments, i);
        }
        processChildren(t, e) {
          const i = [];
          for (const s of Object.keys(e.children)) {
            const o = e.children[s],
              a = XM(t, s),
              l = this.processSegmentGroup(a, o, s);
            if (null === l) return null;
            i.push(...l);
          }
          const r = oS(i);
          return (
            (function (n) {
              n.sort((t, e) =>
                t.value.outlet === Re
                  ? -1
                  : e.value.outlet === Re
                  ? 1
                  : t.value.outlet.localeCompare(e.value.outlet)
              );
            })(r),
            r
          );
        }
        processSegment(t, e, i, r) {
          for (const s of t) {
            const o = this.processSegmentAgainstRoute(s, e, i, r);
            if (null !== o) return o;
          }
          return tS(e, i, r) ? [] : null;
        }
        processSegmentAgainstRoute(t, e, i, r) {
          if (t.redirectTo || !eS(t, e, i, r)) return null;
          let s,
            o = [],
            a = [];
          if ("**" === t.path) {
            const p = i.length > 0 ? TM(i).parameters : {};
            s = new Ld(
              i,
              p,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              cS(t),
              ri(t),
              t.component,
              t,
              aS(e),
              lS(e) + i.length,
              uS(t)
            );
          } else {
            const p = $d(e, t, i);
            if (!p.matched) return null;
            (o = p.consumedSegments),
              (a = i.slice(p.lastChild)),
              (s = new Ld(
                o,
                p.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                cS(t),
                ri(t),
                t.component,
                t,
                aS(e),
                lS(e) + o.length,
                uS(t)
              ));
          }
          const l = (function (n) {
              return n.children
                ? n.children
                : n.loadChildren
                ? n._loadedConfig.routes
                : [];
            })(t),
            { segmentGroup: c, slicedSegments: u } = jd(
              e,
              o,
              a,
              l.filter((p) => void 0 === p.redirectTo),
              this.relativeLinkResolution
            );
          if (0 === u.length && c.hasChildren()) {
            const p = this.processChildren(l, c);
            return null === p ? null : [new br(s, p)];
          }
          if (0 === l.length && 0 === u.length) return [new br(s, [])];
          const d = ri(t) === r,
            h = this.processSegment(l, c, u, d ? Re : r);
          return null === h ? null : [new br(s, h)];
        }
      }
      function D4(n) {
        const t = n.value.routeConfig;
        return t && "" === t.path && void 0 === t.redirectTo;
      }
      function oS(n) {
        const t = [],
          e = new Set();
        for (const i of n) {
          if (!D4(i)) {
            t.push(i);
            continue;
          }
          const r = t.find((s) => i.value.routeConfig === s.value.routeConfig);
          void 0 !== r ? (r.children.push(...i.children), e.add(r)) : t.push(i);
        }
        for (const i of e) {
          const r = oS(i.children);
          t.push(new br(i.value, r));
        }
        return t.filter((i) => !e.has(i));
      }
      function aS(n) {
        let t = n;
        for (; t._sourceSegment; ) t = t._sourceSegment;
        return t;
      }
      function lS(n) {
        let t = n,
          e = t._segmentIndexShift ? t._segmentIndexShift : 0;
        for (; t._sourceSegment; )
          (t = t._sourceSegment),
            (e += t._segmentIndexShift ? t._segmentIndexShift : 0);
        return e - 1;
      }
      function cS(n) {
        return n.data || {};
      }
      function uS(n) {
        return n.resolve || {};
      }
      function y_(n) {
        return jt((t) => {
          const e = n(t);
          return e ? Pt(e).pipe(Q(() => t)) : J(t);
        });
      }
      class R4 extends class {
        shouldDetach(t) {
          return !1;
        }
        store(t, e) {}
        shouldAttach(t) {
          return !1;
        }
        retrieve(t) {
          return null;
        }
        shouldReuseRoute(t, e) {
          return t.routeConfig === e.routeConfig;
        }
      } {}
      const b_ = new P("ROUTES");
      class dS {
        constructor(t, e, i, r) {
          (this.loader = t),
            (this.compiler = e),
            (this.onLoadStartListener = i),
            (this.onLoadEndListener = r);
        }
        load(t, e) {
          if (e._loader$) return e._loader$;
          this.onLoadStartListener && this.onLoadStartListener(e);
          const r = this.loadModuleFactory(e.loadChildren).pipe(
            Q((s) => {
              this.onLoadEndListener && this.onLoadEndListener(e);
              const o = s.create(t);
              return new g_(
                SM(o.injector.get(b_, void 0, te.Self | te.Optional)).map(m_),
                o
              );
            }),
            Es((s) => {
              throw ((e._loader$ = void 0), s);
            })
          );
          return (e._loader$ = new Xb(r, () => new O()).pipe(If())), e._loader$;
        }
        loadModuleFactory(t) {
          return "string" == typeof t
            ? Pt(this.loader.load(t))
            : Qi(t()).pipe(
                Ft((e) =>
                  e instanceof $1
                    ? J(e)
                    : Pt(this.compiler.compileModuleAsync(e))
                )
              );
        }
      }
      class I4 {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new da()),
            (this.attachRef = null);
        }
      }
      class da {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(t, e) {
          const i = this.getOrCreateContext(t);
          (i.outlet = e), this.contexts.set(t, i);
        }
        onChildOutletDestroyed(t) {
          const e = this.getContext(t);
          e && (e.outlet = null);
        }
        onOutletDeactivated() {
          const t = this.contexts;
          return (this.contexts = new Map()), t;
        }
        onOutletReAttached(t) {
          this.contexts = t;
        }
        getOrCreateContext(t) {
          let e = this.getContext(t);
          return e || ((e = new I4()), this.contexts.set(t, e)), e;
        }
        getContext(t) {
          return this.contexts.get(t) || null;
        }
      }
      class O4 {
        shouldProcessUrl(t) {
          return !0;
        }
        extract(t) {
          return t;
        }
        merge(t, e) {
          return t;
        }
      }
      function P4(n) {
        throw n;
      }
      function F4(n, t, e) {
        return t.parse("/");
      }
      function hS(n, t) {
        return J(null);
      }
      const L4 = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        V4 = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let Mn = (() => {
        class n {
          constructor(e, i, r, s, o, a, l, c) {
            (this.rootComponentType = e),
              (this.urlSerializer = i),
              (this.rootContexts = r),
              (this.location = s),
              (this.config = c),
              (this.lastSuccessfulNavigation = null),
              (this.currentNavigation = null),
              (this.disposed = !1),
              (this.lastLocationChangeInfo = null),
              (this.navigationId = 0),
              (this.currentPageId = 0),
              (this.isNgZoneEnabled = !1),
              (this.events = new O()),
              (this.errorHandler = P4),
              (this.malformedUriErrorHandler = F4),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.hooks = {
                beforePreactivation: hS,
                afterPreactivation: hS,
              }),
              (this.urlHandlingStrategy = new O4()),
              (this.routeReuseStrategy = new R4()),
              (this.onSameUrlNavigation = "ignore"),
              (this.paramsInheritanceStrategy = "emptyOnly"),
              (this.urlUpdateStrategy = "deferred"),
              (this.relativeLinkResolution = "corrected"),
              (this.canceledNavigationResolution = "replace"),
              (this.ngModule = o.get(Yi)),
              (this.console = o.get(ed));
            const h = o.get(H);
            (this.isNgZoneEnabled = h instanceof H && H.isInAngularZone()),
              this.resetConfig(c),
              (this.currentUrlTree = new Ms(new Ie([], {}), {}, null)),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.configLoader = new dS(
                a,
                l,
                (p) => this.triggerEvent(new wM(p)),
                (p) => this.triggerEvent(new CM(p))
              )),
              (this.routerState = BM(
                this.currentUrlTree,
                this.rootComponentType
              )),
              (this.transitions = new rt({
                id: 0,
                targetPageId: 0,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                extractedUrl: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                urlAfterRedirects: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                rawUrl: this.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: "imperative",
                restoredState: null,
                currentSnapshot: this.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: this.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              (this.navigations = this.setupNavigations(this.transitions)),
              this.processNavigations();
          }
          get browserPageId() {
            var e;
            return null === (e = this.location.getState()) || void 0 === e
              ? void 0
              : e.ɵrouterPageId;
          }
          setupNavigations(e) {
            const i = this.events;
            return e.pipe(
              Pe((r) => 0 !== r.id),
              Q((r) =>
                Object.assign(Object.assign({}, r), {
                  extractedUrl: this.urlHandlingStrategy.extract(r.rawUrl),
                })
              ),
              jt((r) => {
                let s = !1,
                  o = !1;
                return J(r).pipe(
                  It((a) => {
                    this.currentNavigation = {
                      id: a.id,
                      initialUrl: a.currentRawUrl,
                      extractedUrl: a.extractedUrl,
                      trigger: a.source,
                      extras: a.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? Object.assign(
                            Object.assign({}, this.lastSuccessfulNavigation),
                            { previousNavigation: null }
                          )
                        : null,
                    };
                  }),
                  jt((a) => {
                    const l =
                        !this.navigated ||
                        a.extractedUrl.toString() !==
                          this.browserUrlTree.toString(),
                      c =
                        ("reload" === this.onSameUrlNavigation || l) &&
                        this.urlHandlingStrategy.shouldProcessUrl(a.rawUrl);
                    if ((qd(a.source) && (this.browserUrlTree = a.rawUrl), c))
                      return J(a).pipe(
                        jt((u) => {
                          const d = this.transitions.getValue();
                          return (
                            i.next(
                              new i_(
                                u.id,
                                this.serializeUrl(u.extractedUrl),
                                u.source,
                                u.restoredState
                              )
                            ),
                            d !== this.transitions.getValue()
                              ? jr
                              : Promise.resolve(u)
                          );
                        }),
                        (function (n, t, e, i) {
                          return jt((r) =>
                            (function (n, t, e, i, r) {
                              return new n4(n, t, e, i, r).apply();
                            })(n, t, e, r.extractedUrl, i).pipe(
                              Q((s) =>
                                Object.assign(Object.assign({}, r), {
                                  urlAfterRedirects: s,
                                })
                              )
                            )
                          );
                        })(
                          this.ngModule.injector,
                          this.configLoader,
                          this.urlSerializer,
                          this.config
                        ),
                        It((u) => {
                          this.currentNavigation = Object.assign(
                            Object.assign({}, this.currentNavigation),
                            { finalUrl: u.urlAfterRedirects }
                          );
                        }),
                        (function (n, t, e, i, r) {
                          return Ft((s) =>
                            (function (
                              n,
                              t,
                              e,
                              i,
                              r = "emptyOnly",
                              s = "legacy"
                            ) {
                              try {
                                const o = new v4(n, t, e, i, r, s).recognize();
                                return null === o ? sS(new y4()) : J(o);
                              } catch (o) {
                                return sS(o);
                              }
                            })(
                              n,
                              t,
                              s.urlAfterRedirects,
                              e(s.urlAfterRedirects),
                              i,
                              r
                            ).pipe(
                              Q((o) =>
                                Object.assign(Object.assign({}, s), {
                                  targetSnapshot: o,
                                })
                              )
                            )
                          );
                        })(
                          this.rootComponentType,
                          this.config,
                          (u) => this.serializeUrl(u),
                          this.paramsInheritanceStrategy,
                          this.relativeLinkResolution
                        ),
                        It((u) => {
                          "eager" === this.urlUpdateStrategy &&
                            (u.extras.skipLocationChange ||
                              this.setBrowserUrl(u.urlAfterRedirects, u),
                            (this.browserUrlTree = u.urlAfterRedirects));
                          const d = new X8(
                            u.id,
                            this.serializeUrl(u.extractedUrl),
                            this.serializeUrl(u.urlAfterRedirects),
                            u.targetSnapshot
                          );
                          i.next(d);
                        })
                      );
                    if (
                      l &&
                      this.rawUrlTree &&
                      this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)
                    ) {
                      const {
                          id: d,
                          extractedUrl: h,
                          source: p,
                          restoredState: g,
                          extras: _,
                        } = a,
                        y = new i_(d, this.serializeUrl(h), p, g);
                      i.next(y);
                      const E = BM(h, this.rootComponentType).snapshot;
                      return J(
                        Object.assign(Object.assign({}, a), {
                          targetSnapshot: E,
                          urlAfterRedirects: h,
                          extras: Object.assign(Object.assign({}, _), {
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          }),
                        })
                      );
                    }
                    return (
                      (this.rawUrlTree = a.rawUrl),
                      (this.browserUrlTree = a.urlAfterRedirects),
                      a.resolve(null),
                      jr
                    );
                  }),
                  y_((a) => {
                    const {
                      targetSnapshot: l,
                      id: c,
                      extractedUrl: u,
                      rawUrl: d,
                      extras: { skipLocationChange: h, replaceUrl: p },
                    } = a;
                    return this.hooks.beforePreactivation(l, {
                      navigationId: c,
                      appliedUrlTree: u,
                      rawUrlTree: d,
                      skipLocationChange: !!h,
                      replaceUrl: !!p,
                    });
                  }),
                  It((a) => {
                    const l = new Z8(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot
                    );
                    this.triggerEvent(l);
                  }),
                  Q((a) =>
                    Object.assign(Object.assign({}, a), {
                      guards: s4(
                        a.targetSnapshot,
                        a.currentSnapshot,
                        this.rootContexts
                      ),
                    })
                  ),
                  (function (n, t) {
                    return Ft((e) => {
                      const {
                        targetSnapshot: i,
                        currentSnapshot: r,
                        guards: {
                          canActivateChecks: s,
                          canDeactivateChecks: o,
                        },
                      } = e;
                      return 0 === o.length && 0 === s.length
                        ? J(
                            Object.assign(Object.assign({}, e), {
                              guardsResult: !0,
                            })
                          )
                        : (function (n, t, e, i) {
                            return Pt(n).pipe(
                              Ft((r) =>
                                (function (n, t, e, i, r) {
                                  const s =
                                    t && t.routeConfig
                                      ? t.routeConfig.canDeactivate
                                      : null;
                                  return s && 0 !== s.length
                                    ? J(
                                        s.map((a) => {
                                          const l = Wd(a, t, r);
                                          let c;
                                          if (
                                            (function (n) {
                                              return n && Ur(n.canDeactivate);
                                            })(l)
                                          )
                                            c = Qi(l.canDeactivate(n, t, e, i));
                                          else {
                                            if (!Ur(l))
                                              throw new Error(
                                                "Invalid CanDeactivate guard"
                                              );
                                            c = Qi(l(n, t, e, i));
                                          }
                                          return c.pipe(la());
                                        })
                                      ).pipe(rc())
                                    : J(!0);
                                })(r.component, r.route, e, t, i)
                              ),
                              la((r) => !0 !== r, !0)
                            );
                          })(o, i, r, n).pipe(
                            Ft((a) =>
                              a &&
                              (function (n) {
                                return "boolean" == typeof n;
                              })(a)
                                ? (function (n, t, e, i) {
                                    return Pt(t).pipe(
                                      aa((r) =>
                                        sa(
                                          (function (n, t) {
                                            return (
                                              null !== n && t && t(new i5(n)),
                                              J(!0)
                                            );
                                          })(r.route.parent, i),
                                          (function (n, t) {
                                            return (
                                              null !== n && t && t(new s5(n)),
                                              J(!0)
                                            );
                                          })(r.route, i),
                                          (function (n, t, e) {
                                            const i = t[t.length - 1],
                                              s = t
                                                .slice(0, t.length - 1)
                                                .reverse()
                                                .map((o) =>
                                                  (function (n) {
                                                    const t = n.routeConfig
                                                      ? n.routeConfig
                                                          .canActivateChild
                                                      : null;
                                                    return t && 0 !== t.length
                                                      ? { node: n, guards: t }
                                                      : null;
                                                  })(o)
                                                )
                                                .filter((o) => null !== o)
                                                .map((o) =>
                                                  oa(() =>
                                                    J(
                                                      o.guards.map((l) => {
                                                        const c = Wd(
                                                          l,
                                                          o.node,
                                                          e
                                                        );
                                                        let u;
                                                        if (
                                                          (function (n) {
                                                            return (
                                                              n &&
                                                              Ur(
                                                                n.canActivateChild
                                                              )
                                                            );
                                                          })(c)
                                                        )
                                                          u = Qi(
                                                            c.canActivateChild(
                                                              i,
                                                              n
                                                            )
                                                          );
                                                        else {
                                                          if (!Ur(c))
                                                            throw new Error(
                                                              "Invalid CanActivateChild guard"
                                                            );
                                                          u = Qi(c(i, n));
                                                        }
                                                        return u.pipe(la());
                                                      })
                                                    ).pipe(rc())
                                                  )
                                                );
                                            return J(s).pipe(rc());
                                          })(n, r.path, e),
                                          (function (n, t, e) {
                                            const i = t.routeConfig
                                              ? t.routeConfig.canActivate
                                              : null;
                                            return i && 0 !== i.length
                                              ? J(
                                                  i.map((s) =>
                                                    oa(() => {
                                                      const o = Wd(s, t, e);
                                                      let a;
                                                      if (
                                                        (function (n) {
                                                          return (
                                                            n &&
                                                            Ur(n.canActivate)
                                                          );
                                                        })(o)
                                                      )
                                                        a = Qi(
                                                          o.canActivate(t, n)
                                                        );
                                                      else {
                                                        if (!Ur(o))
                                                          throw new Error(
                                                            "Invalid CanActivate guard"
                                                          );
                                                        a = Qi(o(t, n));
                                                      }
                                                      return a.pipe(la());
                                                    })
                                                  )
                                                ).pipe(rc())
                                              : J(!0);
                                          })(n, r.route, e)
                                        )
                                      ),
                                      la((r) => !0 !== r, !0)
                                    );
                                  })(i, s, n, t)
                                : J(a)
                            ),
                            Q((a) =>
                              Object.assign(Object.assign({}, e), {
                                guardsResult: a,
                              })
                            )
                          );
                    });
                  })(this.ngModule.injector, (a) => this.triggerEvent(a)),
                  It((a) => {
                    if (Ts(a.guardsResult)) {
                      const c = r_(
                        `Redirecting to "${this.serializeUrl(a.guardsResult)}"`
                      );
                      throw ((c.url = a.guardsResult), c);
                    }
                    const l = new e5(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot,
                      !!a.guardsResult
                    );
                    this.triggerEvent(l);
                  }),
                  Pe(
                    (a) =>
                      !!a.guardsResult ||
                      (this.restoreHistory(a),
                      this.cancelNavigationTransition(a, ""),
                      !1)
                  ),
                  y_((a) => {
                    if (a.guards.canActivateChecks.length)
                      return J(a).pipe(
                        It((l) => {
                          const c = new t5(
                            l.id,
                            this.serializeUrl(l.extractedUrl),
                            this.serializeUrl(l.urlAfterRedirects),
                            l.targetSnapshot
                          );
                          this.triggerEvent(c);
                        }),
                        jt((l) => {
                          let c = !1;
                          return J(l).pipe(
                            (function (n, t) {
                              return Ft((e) => {
                                const {
                                  targetSnapshot: i,
                                  guards: { canActivateChecks: r },
                                } = e;
                                if (!r.length) return J(e);
                                let s = 0;
                                return Pt(r).pipe(
                                  aa((o) =>
                                    (function (n, t, e, i) {
                                      return (function (n, t, e, i) {
                                        const r = Object.keys(n);
                                        if (0 === r.length) return J({});
                                        const s = {};
                                        return Pt(r).pipe(
                                          Ft((o) =>
                                            (function (n, t, e, i) {
                                              const r = Wd(n, t, i);
                                              return Qi(
                                                r.resolve
                                                  ? r.resolve(t, e)
                                                  : r(t, e)
                                              );
                                            })(n[o], t, e, i).pipe(
                                              It((a) => {
                                                s[o] = a;
                                              })
                                            )
                                          ),
                                          n_(1),
                                          Ft(() =>
                                            Object.keys(s).length === r.length
                                              ? J(s)
                                              : jr
                                          )
                                        );
                                      })(n._resolve, n, t, i).pipe(
                                        Q(
                                          (s) => (
                                            (n._resolvedData = s),
                                            (n.data = Object.assign(
                                              Object.assign({}, n.data),
                                              HM(n, e).resolve
                                            )),
                                            null
                                          )
                                        )
                                      );
                                    })(o.route, i, n, t)
                                  ),
                                  It(() => s++),
                                  n_(1),
                                  Ft((o) => (s === r.length ? J(e) : jr))
                                );
                              });
                            })(
                              this.paramsInheritanceStrategy,
                              this.ngModule.injector
                            ),
                            It({
                              next: () => (c = !0),
                              complete: () => {
                                c ||
                                  (this.restoreHistory(l),
                                  this.cancelNavigationTransition(
                                    l,
                                    "At least one route resolver didn't emit any value."
                                  ));
                              },
                            })
                          );
                        }),
                        It((l) => {
                          const c = new n5(
                            l.id,
                            this.serializeUrl(l.extractedUrl),
                            this.serializeUrl(l.urlAfterRedirects),
                            l.targetSnapshot
                          );
                          this.triggerEvent(c);
                        })
                      );
                  }),
                  y_((a) => {
                    const {
                      targetSnapshot: l,
                      id: c,
                      extractedUrl: u,
                      rawUrl: d,
                      extras: { skipLocationChange: h, replaceUrl: p },
                    } = a;
                    return this.hooks.afterPreactivation(l, {
                      navigationId: c,
                      appliedUrlTree: u,
                      rawUrlTree: d,
                      skipLocationChange: !!h,
                      replaceUrl: !!p,
                    });
                  }),
                  Q((a) => {
                    const l = (function (n, t, e) {
                      const i = Vd(n, t._root, e ? e._root : void 0);
                      return new VM(i, t);
                    })(
                      this.routeReuseStrategy,
                      a.targetSnapshot,
                      a.currentRouterState
                    );
                    return Object.assign(Object.assign({}, a), {
                      targetRouterState: l,
                    });
                  }),
                  It((a) => {
                    (this.currentUrlTree = a.urlAfterRedirects),
                      (this.rawUrlTree = this.urlHandlingStrategy.merge(
                        this.currentUrlTree,
                        a.rawUrl
                      )),
                      (this.routerState = a.targetRouterState),
                      "deferred" === this.urlUpdateStrategy &&
                        (a.extras.skipLocationChange ||
                          this.setBrowserUrl(this.rawUrlTree, a),
                        (this.browserUrlTree = a.urlAfterRedirects));
                  }),
                  ((n, t, e) =>
                    Q(
                      (i) => (
                        new H5(
                          t,
                          i.targetRouterState,
                          i.currentRouterState,
                          e
                        ).activate(n),
                        i
                      )
                    ))(this.rootContexts, this.routeReuseStrategy, (a) =>
                    this.triggerEvent(a)
                  ),
                  It({
                    next() {
                      s = !0;
                    },
                    complete() {
                      s = !0;
                    },
                  }),
                  (function (n) {
                    return (t) => t.lift(new K8(n));
                  })(() => {
                    if (!s && !o) {
                      const a = `Navigation ID ${r.id} is not equal to the current navigation id ${this.navigationId}`;
                      "replace" === this.canceledNavigationResolution
                        ? (this.restoreHistory(r),
                          this.cancelNavigationTransition(r, a))
                        : this.cancelNavigationTransition(r, a);
                    }
                    this.currentNavigation = null;
                  }),
                  Es((a) => {
                    if (
                      ((o = !0),
                      (function (n) {
                        return n && n[EM];
                      })(a))
                    ) {
                      const l = Ts(a.url);
                      l || ((this.navigated = !0), this.restoreHistory(r, !0));
                      const c = new vM(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a.message
                      );
                      i.next(c),
                        l
                          ? setTimeout(() => {
                              const u = this.urlHandlingStrategy.merge(
                                  a.url,
                                  this.rawUrlTree
                                ),
                                d = {
                                  skipLocationChange:
                                    r.extras.skipLocationChange,
                                  replaceUrl:
                                    "eager" === this.urlUpdateStrategy ||
                                    qd(r.source),
                                };
                              this.scheduleNavigation(
                                u,
                                "imperative",
                                null,
                                d,
                                {
                                  resolve: r.resolve,
                                  reject: r.reject,
                                  promise: r.promise,
                                }
                              );
                            }, 0)
                          : r.resolve(!1);
                    } else {
                      this.restoreHistory(r, !0);
                      const l = new Q8(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a
                      );
                      i.next(l);
                      try {
                        r.resolve(this.errorHandler(a));
                      } catch (c) {
                        r.reject(c);
                      }
                    }
                    return jr;
                  })
                );
              })
            );
          }
          resetRootComponentType(e) {
            (this.rootComponentType = e),
              (this.routerState.root.component = this.rootComponentType);
          }
          getTransition() {
            const e = this.transitions.value;
            return (e.urlAfterRedirects = this.browserUrlTree), e;
          }
          setTransition(e) {
            this.transitions.next(
              Object.assign(Object.assign({}, this.getTransition()), e)
            );
          }
          initialNavigation() {
            this.setUpLocationChangeListener(),
              0 === this.navigationId &&
                this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((e) => {
                const i = this.extractLocationChangeInfoFromEvent(e);
                this.shouldScheduleNavigation(this.lastLocationChangeInfo, i) &&
                  setTimeout(() => {
                    const { source: r, state: s, urlTree: o } = i,
                      a = { replaceUrl: !0 };
                    if (s) {
                      const l = Object.assign({}, s);
                      delete l.navigationId,
                        delete l.ɵrouterPageId,
                        0 !== Object.keys(l).length && (a.state = l);
                    }
                    this.scheduleNavigation(o, r, s, a);
                  }, 0),
                  (this.lastLocationChangeInfo = i);
              }));
          }
          extractLocationChangeInfoFromEvent(e) {
            var i;
            return {
              source: "popstate" === e.type ? "popstate" : "hashchange",
              urlTree: this.parseUrl(e.url),
              state: (
                null === (i = e.state) || void 0 === i ? void 0 : i.navigationId
              )
                ? e.state
                : null,
              transitionId: this.getTransition().id,
            };
          }
          shouldScheduleNavigation(e, i) {
            if (!e) return !0;
            const r = i.urlTree.toString() === e.urlTree.toString();
            return (
              i.transitionId !== e.transitionId ||
              !r ||
              !(
                ("hashchange" === i.source && "popstate" === e.source) ||
                ("popstate" === i.source && "hashchange" === e.source)
              )
            );
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.currentNavigation;
          }
          triggerEvent(e) {
            this.events.next(e);
          }
          resetConfig(e) {
            QM(e),
              (this.config = e.map(m_)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.transitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0);
          }
          createUrlTree(e, i = {}) {
            const {
                relativeTo: r,
                queryParams: s,
                fragment: o,
                queryParamsHandling: a,
                preserveFragment: l,
              } = i,
              c = r || this.routerState.root,
              u = l ? this.currentUrlTree.fragment : o;
            let d = null;
            switch (a) {
              case "merge":
                d = Object.assign(
                  Object.assign({}, this.currentUrlTree.queryParams),
                  s
                );
                break;
              case "preserve":
                d = this.currentUrlTree.queryParams;
                break;
              default:
                d = s || null;
            }
            return (
              null !== d && (d = this.removeEmptyProps(d)),
              (function (n, t, e, i, r) {
                if (0 === e.length) return h_(t.root, t.root, t, i, r);
                const s = (function (n) {
                  if ("string" == typeof n[0] && 1 === n.length && "/" === n[0])
                    return new GM(!0, 0, n);
                  let t = 0,
                    e = !1;
                  const i = n.reduce((r, s, o) => {
                    if ("object" == typeof s && null != s) {
                      if (s.outlets) {
                        const a = {};
                        return (
                          Jt(s.outlets, (l, c) => {
                            a[c] = "string" == typeof l ? l.split("/") : l;
                          }),
                          [...r, { outlets: a }]
                        );
                      }
                      if (s.segmentPath) return [...r, s.segmentPath];
                    }
                    return "string" != typeof s
                      ? [...r, s]
                      : 0 === o
                      ? (s.split("/").forEach((a, l) => {
                          (0 == l && "." === a) ||
                            (0 == l && "" === a
                              ? (e = !0)
                              : ".." === a
                              ? t++
                              : "" != a && r.push(a));
                        }),
                        r)
                      : [...r, s];
                  }, []);
                  return new GM(e, t, i);
                })(e);
                if (s.toRoot()) return h_(t.root, new Ie([], {}), t, i, r);
                const o = (function (n, t, e) {
                    if (n.isAbsolute) return new f_(t.root, !0, 0);
                    if (-1 === e.snapshot._lastPathIndex) {
                      const s = e.snapshot._urlSegment;
                      return new f_(s, s === t.root, 0);
                    }
                    const i = Bd(n.commands[0]) ? 0 : 1;
                    return (function (n, t, e) {
                      let i = n,
                        r = t,
                        s = e;
                      for (; s > r; ) {
                        if (((s -= r), (i = i.parent), !i))
                          throw new Error("Invalid number of '../'");
                        r = i.segments.length;
                      }
                      return new f_(i, !1, r - s);
                    })(
                      e.snapshot._urlSegment,
                      e.snapshot._lastPathIndex + i,
                      n.numberOfDoubleDots
                    );
                  })(s, t, n),
                  a = o.processChildren
                    ? Hd(o.segmentGroup, o.index, s.commands)
                    : WM(o.segmentGroup, o.index, s.commands);
                return h_(o.segmentGroup, a, t, i, r);
              })(c, this.currentUrlTree, e, d, null != u ? u : null)
            );
          }
          navigateByUrl(e, i = { skipLocationChange: !1 }) {
            const r = Ts(e) ? e : this.parseUrl(e),
              s = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
            return this.scheduleNavigation(s, "imperative", null, i);
          }
          navigate(e, i = { skipLocationChange: !1 }) {
            return (
              (function (n) {
                for (let t = 0; t < n.length; t++) {
                  const e = n[t];
                  if (null == e)
                    throw new Error(
                      `The requested path contains ${e} segment at index ${t}`
                    );
                }
              })(e),
              this.navigateByUrl(this.createUrlTree(e, i), i)
            );
          }
          serializeUrl(e) {
            return this.urlSerializer.serialize(e);
          }
          parseUrl(e) {
            let i;
            try {
              i = this.urlSerializer.parse(e);
            } catch (r) {
              i = this.malformedUriErrorHandler(r, this.urlSerializer, e);
            }
            return i;
          }
          isActive(e, i) {
            let r;
            if (
              ((r =
                !0 === i
                  ? Object.assign({}, L4)
                  : !1 === i
                  ? Object.assign({}, V4)
                  : i),
              Ts(e))
            )
              return kM(this.currentUrlTree, e, r);
            const s = this.parseUrl(e);
            return kM(this.currentUrlTree, s, r);
          }
          removeEmptyProps(e) {
            return Object.keys(e).reduce((i, r) => {
              const s = e[r];
              return null != s && (i[r] = s), i;
            }, {});
          }
          processNavigations() {
            this.navigations.subscribe(
              (e) => {
                (this.navigated = !0),
                  (this.lastSuccessfulId = e.id),
                  (this.currentPageId = e.targetPageId),
                  this.events.next(
                    new Xl(
                      e.id,
                      this.serializeUrl(e.extractedUrl),
                      this.serializeUrl(this.currentUrlTree)
                    )
                  ),
                  (this.lastSuccessfulNavigation = this.currentNavigation),
                  e.resolve(!0);
              },
              (e) => {
                this.console.warn(`Unhandled Navigation Error: ${e}`);
              }
            );
          }
          scheduleNavigation(e, i, r, s, o) {
            var a, l;
            if (this.disposed) return Promise.resolve(!1);
            const c = this.getTransition(),
              u = qd(i) && c && !qd(c.source),
              p =
                (this.lastSuccessfulId === c.id || this.currentNavigation
                  ? c.rawUrl
                  : c.urlAfterRedirects
                ).toString() === e.toString();
            if (u && p) return Promise.resolve(!0);
            let g, _, y;
            o
              ? ((g = o.resolve), (_ = o.reject), (y = o.promise))
              : (y = new Promise((N, x) => {
                  (g = N), (_ = x);
                }));
            const E = ++this.navigationId;
            let C;
            return (
              "computed" === this.canceledNavigationResolution
                ? (0 === this.currentPageId && (r = this.location.getState()),
                  (C =
                    r && r.ɵrouterPageId
                      ? r.ɵrouterPageId
                      : s.replaceUrl || s.skipLocationChange
                      ? null !== (a = this.browserPageId) && void 0 !== a
                        ? a
                        : 0
                      : (null !== (l = this.browserPageId) && void 0 !== l
                          ? l
                          : 0) + 1))
                : (C = 0),
              this.setTransition({
                id: E,
                targetPageId: C,
                source: i,
                restoredState: r,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.rawUrlTree,
                rawUrl: e,
                extras: s,
                resolve: g,
                reject: _,
                promise: y,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              y.catch((N) => Promise.reject(N))
            );
          }
          setBrowserUrl(e, i) {
            const r = this.urlSerializer.serialize(e),
              s = Object.assign(
                Object.assign({}, i.extras.state),
                this.generateNgRouterState(i.id, i.targetPageId)
              );
            this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl
              ? this.location.replaceState(r, "", s)
              : this.location.go(r, "", s);
          }
          restoreHistory(e, i = !1) {
            var r, s;
            if ("computed" === this.canceledNavigationResolution) {
              const o = this.currentPageId - e.targetPageId;
              ("popstate" !== e.source &&
                "eager" !== this.urlUpdateStrategy &&
                this.currentUrlTree !==
                  (null === (r = this.currentNavigation) || void 0 === r
                    ? void 0
                    : r.finalUrl)) ||
              0 === o
                ? this.currentUrlTree ===
                    (null === (s = this.currentNavigation) || void 0 === s
                      ? void 0
                      : s.finalUrl) &&
                  0 === o &&
                  (this.resetState(e),
                  (this.browserUrlTree = e.currentUrlTree),
                  this.resetUrlToCurrentUrlTree())
                : this.location.historyGo(o);
            } else
              "replace" === this.canceledNavigationResolution &&
                (i && this.resetState(e), this.resetUrlToCurrentUrlTree());
          }
          resetState(e) {
            (this.routerState = e.currentRouterState),
              (this.currentUrlTree = e.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                e.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          cancelNavigationTransition(e, i) {
            const r = new vM(e.id, this.serializeUrl(e.extractedUrl), i);
            this.triggerEvent(r), e.resolve(!1);
          }
          generateNgRouterState(e, i) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: e, ɵrouterPageId: i }
              : { navigationId: e };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(
              m(po),
              m(s_),
              m(da),
              m(ra),
              m(ae),
              m(nd),
              m(bs),
              m(void 0)
            );
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function qd(n) {
        return "imperative" !== n;
      }
      let Yd = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this.router = e),
                (this.route = i),
                (this.commands = []),
                (this.onChanges = new O()),
                null == r && s.setAttribute(o.nativeElement, "tabindex", "0");
            }
            ngOnChanges(e) {
              this.onChanges.next(this);
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : [];
            }
            onClick() {
              const e = {
                skipLocationChange: ha(this.skipLocationChange),
                replaceUrl: ha(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, e), !0;
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo:
                  void 0 !== this.relativeTo ? this.relativeTo : this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: ha(this.preserveFragment),
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Mn), f(ua), gi("tabindex"), f(Yt), f(L));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "routerLink", "", 5, "a", 5, "area"]],
              hostBindings: function (e, i) {
                1 & e &&
                  R("click", function () {
                    return i.onClick();
                  });
              },
              inputs: {
                routerLink: "routerLink",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
              },
              features: [Me],
            })),
            n
          );
        })(),
        v_ = (() => {
          class n {
            constructor(e, i, r) {
              (this.router = e),
                (this.route = i),
                (this.locationStrategy = r),
                (this.commands = []),
                (this.onChanges = new O()),
                (this.subscription = e.events.subscribe((s) => {
                  s instanceof Xl && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : [];
            }
            ngOnChanges(e) {
              this.updateTargetUrlAndHref(), this.onChanges.next(this);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(e, i, r, s, o) {
              if (
                0 !== e ||
                i ||
                r ||
                s ||
                o ||
                ("string" == typeof this.target && "_self" != this.target)
              )
                return !0;
              const a = {
                skipLocationChange: ha(this.skipLocationChange),
                replaceUrl: ha(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, a), !1;
            }
            updateTargetUrlAndHref() {
              this.href = this.locationStrategy.prepareExternalUrl(
                this.router.serializeUrl(this.urlTree)
              );
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo:
                  void 0 !== this.relativeTo ? this.relativeTo : this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: ha(this.preserveFragment),
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Mn), f(ua), f(ia));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["a", "routerLink", ""],
                ["area", "routerLink", ""],
              ],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  R("click", function (s) {
                    return i.onClick(
                      s.button,
                      s.ctrlKey,
                      s.shiftKey,
                      s.altKey,
                      s.metaKey
                    );
                  }),
                  2 & e && (Bt("href", i.href, Dp), X("target", i.target));
              },
              inputs: {
                routerLink: "routerLink",
                target: "target",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
              },
              features: [Me],
            })),
            n
          );
        })();
      function ha(n) {
        return "" === n || !!n;
      }
      let fS = (() => {
          class n {
            constructor(e, i, r, s, o, a) {
              (this.router = e),
                (this.element = i),
                (this.renderer = r),
                (this.cdr = s),
                (this.link = o),
                (this.linkWithHref = a),
                (this.classes = []),
                (this.isActive = !1),
                (this.routerLinkActiveOptions = { exact: !1 }),
                (this.routerEventsSubscription = e.events.subscribe((l) => {
                  l instanceof Xl && this.update();
                }));
            }
            ngAfterContentInit() {
              J(this.links.changes, this.linksWithHrefs.changes, J(null))
                .pipe(za())
                .subscribe((e) => {
                  this.update(), this.subscribeToEachLinkOnChanges();
                });
            }
            subscribeToEachLinkOnChanges() {
              var e;
              null === (e = this.linkInputChangesSubscription) ||
                void 0 === e ||
                e.unsubscribe();
              const i = [
                ...this.links.toArray(),
                ...this.linksWithHrefs.toArray(),
                this.link,
                this.linkWithHref,
              ]
                .filter((r) => !!r)
                .map((r) => r.onChanges);
              this.linkInputChangesSubscription = Pt(i)
                .pipe(za())
                .subscribe((r) => {
                  this.isActive !== this.isLinkActive(this.router)(r) &&
                    this.update();
                });
            }
            set routerLinkActive(e) {
              const i = Array.isArray(e) ? e : e.split(" ");
              this.classes = i.filter((r) => !!r);
            }
            ngOnChanges(e) {
              this.update();
            }
            ngOnDestroy() {
              var e;
              this.routerEventsSubscription.unsubscribe(),
                null === (e = this.linkInputChangesSubscription) ||
                  void 0 === e ||
                  e.unsubscribe();
            }
            update() {
              !this.links ||
                !this.linksWithHrefs ||
                !this.router.navigated ||
                Promise.resolve().then(() => {
                  const e = this.hasActiveLinks();
                  this.isActive !== e &&
                    ((this.isActive = e),
                    this.cdr.markForCheck(),
                    this.classes.forEach((i) => {
                      e
                        ? this.renderer.addClass(this.element.nativeElement, i)
                        : this.renderer.removeClass(
                            this.element.nativeElement,
                            i
                          );
                    }));
                });
            }
            isLinkActive(e) {
              const i = (function (n) {
                return !!n.paths;
              })(this.routerLinkActiveOptions)
                ? this.routerLinkActiveOptions
                : this.routerLinkActiveOptions.exact || !1;
              return (r) => e.isActive(r.urlTree, i);
            }
            hasActiveLinks() {
              const e = this.isLinkActive(this.router);
              return (
                (this.link && e(this.link)) ||
                (this.linkWithHref && e(this.linkWithHref)) ||
                this.links.some(e) ||
                this.linksWithHrefs.some(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                f(Mn),
                f(L),
                f(Yt),
                f(Be),
                f(Yd, 8),
                f(v_, 8)
              );
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "routerLinkActive", ""]],
              contentQueries: function (e, i, r) {
                if ((1 & e && (me(r, Yd, 5), me(r, v_, 5)), 2 & e)) {
                  let s;
                  U((s = z())) && (i.links = s),
                    U((s = z())) && (i.linksWithHrefs = s);
                }
              },
              inputs: {
                routerLinkActiveOptions: "routerLinkActiveOptions",
                routerLinkActive: "routerLinkActive",
              },
              exportAs: ["routerLinkActive"],
              features: [Me],
            })),
            n
          );
        })(),
        w_ = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this.parentContexts = e),
                (this.location = i),
                (this.resolver = r),
                (this.changeDetector = o),
                (this.activated = null),
                (this._activatedRoute = null),
                (this.activateEvents = new F()),
                (this.deactivateEvents = new F()),
                (this.name = s || Re),
                e.onChildOutletCreated(this.name, this);
            }
            ngOnDestroy() {
              this.parentContexts.onChildOutletDestroyed(this.name);
            }
            ngOnInit() {
              if (!this.activated) {
                const e = this.parentContexts.getContext(this.name);
                e &&
                  e.route &&
                  (e.attachRef
                    ? this.attach(e.attachRef, e.route)
                    : this.activateWith(e.route, e.resolver || null));
              }
            }
            get isActivated() {
              return !!this.activated;
            }
            get component() {
              if (!this.activated) throw new Error("Outlet is not activated");
              return this.activated.instance;
            }
            get activatedRoute() {
              if (!this.activated) throw new Error("Outlet is not activated");
              return this._activatedRoute;
            }
            get activatedRouteData() {
              return this._activatedRoute
                ? this._activatedRoute.snapshot.data
                : {};
            }
            detach() {
              if (!this.activated) throw new Error("Outlet is not activated");
              this.location.detach();
              const e = this.activated;
              return (this.activated = null), (this._activatedRoute = null), e;
            }
            attach(e, i) {
              (this.activated = e),
                (this._activatedRoute = i),
                this.location.insert(e.hostView);
            }
            deactivate() {
              if (this.activated) {
                const e = this.component;
                this.activated.destroy(),
                  (this.activated = null),
                  (this._activatedRoute = null),
                  this.deactivateEvents.emit(e);
              }
            }
            activateWith(e, i) {
              if (this.isActivated)
                throw new Error("Cannot activate an already activated outlet");
              this._activatedRoute = e;
              const o = (i = i || this.resolver).resolveComponentFactory(
                  e._futureSnapshot.routeConfig.component
                ),
                a = this.parentContexts.getOrCreateContext(this.name).children,
                l = new $4(e, a, this.location.injector);
              (this.activated = this.location.createComponent(
                o,
                this.location.length,
                l
              )),
                this.changeDetector.markForCheck(),
                this.activateEvents.emit(this.activated.instance);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(da), f(Ze), f(on), gi("name"), f(Be));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["router-outlet"]],
              outputs: {
                activateEvents: "activate",
                deactivateEvents: "deactivate",
              },
              exportAs: ["outlet"],
            })),
            n
          );
        })();
      class $4 {
        constructor(t, e, i) {
          (this.route = t), (this.childContexts = e), (this.parent = i);
        }
        get(t, e) {
          return t === ua
            ? this.route
            : t === da
            ? this.childContexts
            : this.parent.get(t, e);
        }
      }
      class pS {}
      class gS {
        preload(t, e) {
          return J(null);
        }
      }
      let mS = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this.router = e),
                (this.injector = s),
                (this.preloadingStrategy = o),
                (this.loader = new dS(
                  i,
                  r,
                  (c) => e.triggerEvent(new wM(c)),
                  (c) => e.triggerEvent(new CM(c))
                ));
            }
            setUpPreloading() {
              this.subscription = this.router.events
                .pipe(
                  Pe((e) => e instanceof Xl),
                  aa(() => this.preload())
                )
                .subscribe(() => {});
            }
            preload() {
              const e = this.injector.get(Yi);
              return this.processRoutes(e, this.router.config);
            }
            ngOnDestroy() {
              this.subscription && this.subscription.unsubscribe();
            }
            processRoutes(e, i) {
              const r = [];
              for (const s of i)
                if (s.loadChildren && !s.canLoad && s._loadedConfig) {
                  const o = s._loadedConfig;
                  r.push(this.processRoutes(o.module, o.routes));
                } else
                  s.loadChildren && !s.canLoad
                    ? r.push(this.preloadConfig(e, s))
                    : s.children && r.push(this.processRoutes(e, s.children));
              return Pt(r).pipe(
                za(),
                Q((s) => {})
              );
            }
            preloadConfig(e, i) {
              return this.preloadingStrategy.preload(i, () =>
                (i._loadedConfig
                  ? J(i._loadedConfig)
                  : this.loader.load(e.injector, i)
                ).pipe(
                  Ft(
                    (s) => (
                      (i._loadedConfig = s),
                      this.processRoutes(s.module, s.routes)
                    )
                  )
                )
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Mn), m(nd), m(bs), m(ae), m(pS));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        C_ = (() => {
          class n {
            constructor(e, i, r = {}) {
              (this.router = e),
                (this.viewportScroller = i),
                (this.options = r),
                (this.lastId = 0),
                (this.lastSource = "imperative"),
                (this.restoredId = 0),
                (this.store = {}),
                (r.scrollPositionRestoration =
                  r.scrollPositionRestoration || "disabled"),
                (r.anchorScrolling = r.anchorScrolling || "disabled");
            }
            init() {
              "disabled" !== this.options.scrollPositionRestoration &&
                this.viewportScroller.setHistoryScrollRestoration("manual"),
                (this.routerEventsSubscription = this.createScrollEvents()),
                (this.scrollEventsSubscription = this.consumeScrollEvents());
            }
            createScrollEvents() {
              return this.router.events.subscribe((e) => {
                e instanceof i_
                  ? ((this.store[this.lastId] =
                      this.viewportScroller.getScrollPosition()),
                    (this.lastSource = e.navigationTrigger),
                    (this.restoredId = e.restoredState
                      ? e.restoredState.navigationId
                      : 0))
                  : e instanceof Xl &&
                    ((this.lastId = e.id),
                    this.scheduleScrollEvent(
                      e,
                      this.router.parseUrl(e.urlAfterRedirects).fragment
                    ));
              });
            }
            consumeScrollEvents() {
              return this.router.events.subscribe((e) => {
                e instanceof DM &&
                  (e.position
                    ? "top" === this.options.scrollPositionRestoration
                      ? this.viewportScroller.scrollToPosition([0, 0])
                      : "enabled" === this.options.scrollPositionRestoration &&
                        this.viewportScroller.scrollToPosition(e.position)
                    : e.anchor && "enabled" === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(e.anchor)
                    : "disabled" !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
              });
            }
            scheduleScrollEvent(e, i) {
              this.router.triggerEvent(
                new DM(
                  e,
                  "popstate" === this.lastSource
                    ? this.store[this.restoredId]
                    : null,
                  i
                )
              );
            }
            ngOnDestroy() {
              this.routerEventsSubscription &&
                this.routerEventsSubscription.unsubscribe(),
                this.scrollEventsSubscription &&
                  this.scrollEventsSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Mn), m(eM), m(void 0));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      const As = new P("ROUTER_CONFIGURATION"),
        _S = new P("ROUTER_FORROOT_GUARD"),
        U4 = [
          ra,
          { provide: s_, useClass: xM },
          {
            provide: Mn,
            useFactory: function (n, t, e, i, r, s, o, a = {}, l, c) {
              const u = new Mn(null, n, t, e, i, r, s, SM(o));
              return (
                l && (u.urlHandlingStrategy = l),
                c && (u.routeReuseStrategy = c),
                (function (n, t) {
                  n.errorHandler && (t.errorHandler = n.errorHandler),
                    n.malformedUriErrorHandler &&
                      (t.malformedUriErrorHandler = n.malformedUriErrorHandler),
                    n.onSameUrlNavigation &&
                      (t.onSameUrlNavigation = n.onSameUrlNavigation),
                    n.paramsInheritanceStrategy &&
                      (t.paramsInheritanceStrategy =
                        n.paramsInheritanceStrategy),
                    n.relativeLinkResolution &&
                      (t.relativeLinkResolution = n.relativeLinkResolution),
                    n.urlUpdateStrategy &&
                      (t.urlUpdateStrategy = n.urlUpdateStrategy);
                })(a, u),
                a.enableTracing &&
                  u.events.subscribe((d) => {
                    var h, p;
                    null === (h = console.group) ||
                      void 0 === h ||
                      h.call(console, `Router Event: ${d.constructor.name}`),
                      console.log(d.toString()),
                      console.log(d),
                      null === (p = console.groupEnd) ||
                        void 0 === p ||
                        p.call(console);
                  }),
                u
              );
            },
            deps: [
              s_,
              da,
              ra,
              ae,
              nd,
              bs,
              b_,
              As,
              [class {}, new nn()],
              [class {}, new nn()],
            ],
          },
          da,
          {
            provide: ua,
            useFactory: function (n) {
              return n.routerState.root;
            },
            deps: [Mn],
          },
          { provide: nd, useClass: ZH },
          mS,
          gS,
          class {
            preload(t, e) {
              return e().pipe(Es(() => J(null)));
            }
          },
          { provide: As, useValue: { enableTracing: !1 } },
        ];
      function z4() {
        return new hm("Router", Mn);
      }
      let yS = (() => {
        class n {
          constructor(e, i) {}
          static forRoot(e, i) {
            return {
              ngModule: n,
              providers: [
                U4,
                bS(e),
                {
                  provide: _S,
                  useFactory: q4,
                  deps: [[Mn, new nn(), new Hi()]],
                },
                { provide: As, useValue: i || {} },
                {
                  provide: ia,
                  useFactory: W4,
                  deps: [Cs, [new yo(km), new nn()], As],
                },
                { provide: C_, useFactory: G4, deps: [Mn, eM, As] },
                {
                  provide: pS,
                  useExisting:
                    i && i.preloadingStrategy ? i.preloadingStrategy : gS,
                },
                { provide: hm, multi: !0, useFactory: z4 },
                [
                  D_,
                  { provide: Zo, multi: !0, useFactory: Q4, deps: [D_] },
                  { provide: vS, useFactory: X4, deps: [D_] },
                  { provide: UD, multi: !0, useExisting: vS },
                ],
              ],
            };
          }
          static forChild(e) {
            return { ngModule: n, providers: [bS(e)] };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(_S, 8), m(Mn, 8));
          }),
          (n.ɵmod = K({ type: n })),
          (n.ɵinj = W({})),
          n
        );
      })();
      function G4(n, t, e) {
        return e.scrollOffset && t.setOffset(e.scrollOffset), new C_(n, t, e);
      }
      function W4(n, t, e = {}) {
        return e.useHash ? new b$(n, t) : new IE(n, t);
      }
      function q4(n) {
        return "guarded";
      }
      function bS(n) {
        return [
          { provide: xx, multi: !0, useValue: n },
          { provide: b_, multi: !0, useValue: n },
        ];
      }
      let D_ = (() => {
        class n {
          constructor(e) {
            (this.injector = e),
              (this.initNavigation = !1),
              (this.destroyed = !1),
              (this.resultOfPreactivationDone = new O());
          }
          appInitializer() {
            return this.injector.get(m$, Promise.resolve(null)).then(() => {
              if (this.destroyed) return Promise.resolve(!0);
              let i = null;
              const r = new Promise((a) => (i = a)),
                s = this.injector.get(Mn),
                o = this.injector.get(As);
              return (
                "disabled" === o.initialNavigation
                  ? (s.setUpLocationChangeListener(), i(!0))
                  : "enabled" === o.initialNavigation ||
                    "enabledBlocking" === o.initialNavigation
                  ? ((s.hooks.afterPreactivation = () =>
                      this.initNavigation
                        ? J(null)
                        : ((this.initNavigation = !0),
                          i(!0),
                          this.resultOfPreactivationDone)),
                    s.initialNavigation())
                  : i(!0),
                r
              );
            });
          }
          bootstrapListener(e) {
            const i = this.injector.get(As),
              r = this.injector.get(mS),
              s = this.injector.get(C_),
              o = this.injector.get(Mn),
              a = this.injector.get(Vn);
            e === a.components[0] &&
              (("enabledNonBlocking" === i.initialNavigation ||
                void 0 === i.initialNavigation) &&
                o.initialNavigation(),
              r.setUpPreloading(),
              s.init(),
              o.resetRootComponentType(a.componentTypes[0]),
              this.resultOfPreactivationDone.next(null),
              this.resultOfPreactivationDone.complete());
          }
          ngOnDestroy() {
            this.destroyed = !0;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(ae));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      function Q4(n) {
        return n.appInitializer.bind(n);
      }
      function X4(n) {
        return n.bootstrapListener.bind(n);
      }
      const vS = new P("Router Initializer");
      function We(n) {
        return null != n && "false" != `${n}`;
      }
      function Hn(n, t = 0) {
        return wS(n) ? Number(n) : t;
      }
      function wS(n) {
        return !isNaN(parseFloat(n)) && !isNaN(Number(n));
      }
      function Kd(n) {
        return Array.isArray(n) ? n : [n];
      }
      function Mt(n) {
        return null == n ? "" : "string" == typeof n ? n : `${n}px`;
      }
      function vr(n) {
        return n instanceof L ? n.nativeElement : n;
      }
      function ct(n, t, e, i) {
        return (
          Pi(e) && ((i = e), (e = void 0)),
          i
            ? ct(n, t, e).pipe(Q((r) => (Tr(r) ? i(...r) : i(r))))
            : new Ce((r) => {
                CS(
                  n,
                  t,
                  function (o) {
                    r.next(
                      arguments.length > 1
                        ? Array.prototype.slice.call(arguments)
                        : o
                    );
                  },
                  r,
                  e
                );
              })
        );
      }
      function CS(n, t, e, i, r) {
        let s;
        if (
          (function (n) {
            return (
              n &&
              "function" == typeof n.addEventListener &&
              "function" == typeof n.removeEventListener
            );
          })(n)
        ) {
          const o = n;
          n.addEventListener(t, e, r),
            (s = () => o.removeEventListener(t, e, r));
        } else if (
          (function (n) {
            return n && "function" == typeof n.on && "function" == typeof n.off;
          })(n)
        ) {
          const o = n;
          n.on(t, e), (s = () => o.off(t, e));
        } else if (
          (function (n) {
            return (
              n &&
              "function" == typeof n.addListener &&
              "function" == typeof n.removeListener
            );
          })(n)
        ) {
          const o = n;
          n.addListener(t, e), (s = () => o.removeListener(t, e));
        } else {
          if (!n || !n.length) throw new TypeError("Invalid event target");
          for (let o = 0, a = n.length; o < a; o++) CS(n[o], t, e, i, r);
        }
        i.add(s);
      }
      class iU extends Ve {
        constructor(t, e) {
          super();
        }
        schedule(t, e = 0) {
          return this;
        }
      }
      class Jd extends iU {
        constructor(t, e) {
          super(t, e),
            (this.scheduler = t),
            (this.work = e),
            (this.pending = !1);
        }
        schedule(t, e = 0) {
          if (this.closed) return this;
          this.state = t;
          const i = this.id,
            r = this.scheduler;
          return (
            null != i && (this.id = this.recycleAsyncId(r, i, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id = this.id || this.requestAsyncId(r, this.id, e)),
            this
          );
        }
        requestAsyncId(t, e, i = 0) {
          return setInterval(t.flush.bind(t, this), i);
        }
        recycleAsyncId(t, e, i = 0) {
          if (null !== i && this.delay === i && !1 === this.pending) return e;
          clearInterval(e);
        }
        execute(t, e) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const i = this._execute(t, e);
          if (i) return i;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(t, e) {
          let r,
            i = !1;
          try {
            this.work(t);
          } catch (s) {
            (i = !0), (r = (!!s && s) || new Error(s));
          }
          if (i) return this.unsubscribe(), r;
        }
        _unsubscribe() {
          const t = this.id,
            e = this.scheduler,
            i = e.actions,
            r = i.indexOf(this);
          (this.work = null),
            (this.state = null),
            (this.pending = !1),
            (this.scheduler = null),
            -1 !== r && i.splice(r, 1),
            null != t && (this.id = this.recycleAsyncId(e, t, null)),
            (this.delay = null);
        }
      }
      let DS = (() => {
        class n {
          constructor(e, i = n.now) {
            (this.SchedulerAction = e), (this.now = i);
          }
          schedule(e, i = 0, r) {
            return new this.SchedulerAction(this, e).schedule(r, i);
          }
        }
        return (n.now = () => Date.now()), n;
      })();
      class Ii extends DS {
        constructor(t, e = DS.now) {
          super(t, () =>
            Ii.delegate && Ii.delegate !== this ? Ii.delegate.now() : e()
          ),
            (this.actions = []),
            (this.active = !1),
            (this.scheduled = void 0);
        }
        schedule(t, e = 0, i) {
          return Ii.delegate && Ii.delegate !== this
            ? Ii.delegate.schedule(t, e, i)
            : super.schedule(t, e, i);
        }
        flush(t) {
          const { actions: e } = this;
          if (this.active) return void e.push(t);
          let i;
          this.active = !0;
          do {
            if ((i = t.execute(t.state, t.delay))) break;
          } while ((t = e.shift()));
          if (((this.active = !1), i)) {
            for (; (t = e.shift()); ) t.unsubscribe();
            throw i;
          }
        }
      }
      new (class extends Ii {
        flush(t) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: e } = this;
          let i,
            r = -1,
            s = e.length;
          t = t || e.shift();
          do {
            if ((i = t.execute(t.state, t.delay))) break;
          } while (++r < s && (t = e.shift()));
          if (((this.active = !1), i)) {
            for (; ++r < s && (t = e.shift()); ) t.unsubscribe();
            throw i;
          }
        }
      })(
        class extends Jd {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          requestAsyncId(t, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(t, e, i)
              : (t.actions.push(this),
                t.scheduled ||
                  (t.scheduled = requestAnimationFrame(() => t.flush(null))));
          }
          recycleAsyncId(t, e, i = 0) {
            if ((null !== i && i > 0) || (null === i && this.delay > 0))
              return super.recycleAsyncId(t, e, i);
            0 === t.actions.length &&
              (cancelAnimationFrame(e), (t.scheduled = void 0));
          }
        }
      );
      let aU = 1;
      const lU = Promise.resolve(),
        Qd = {};
      function ES(n) {
        return n in Qd && (delete Qd[n], !0);
      }
      const MS = {
        setImmediate(n) {
          const t = aU++;
          return (Qd[t] = !0), lU.then(() => ES(t) && n()), t;
        },
        clearImmediate(n) {
          ES(n);
        },
      };
      new (class extends Ii {
        flush(t) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: e } = this;
          let i,
            r = -1,
            s = e.length;
          t = t || e.shift();
          do {
            if ((i = t.execute(t.state, t.delay))) break;
          } while (++r < s && (t = e.shift()));
          if (((this.active = !1), i)) {
            for (; ++r < s && (t = e.shift()); ) t.unsubscribe();
            throw i;
          }
        }
      })(
        class extends Jd {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          requestAsyncId(t, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(t, e, i)
              : (t.actions.push(this),
                t.scheduled ||
                  (t.scheduled = MS.setImmediate(t.flush.bind(t, null))));
          }
          recycleAsyncId(t, e, i = 0) {
            if ((null !== i && i > 0) || (null === i && this.delay > 0))
              return super.recycleAsyncId(t, e, i);
            0 === t.actions.length &&
              (MS.clearImmediate(e), (t.scheduled = void 0));
          }
        }
      );
      function fa(n, t) {
        return (e) => e.lift(new hU(n, t));
      }
      class hU {
        constructor(t, e) {
          (this.compare = t), (this.keySelector = e);
        }
        call(t, e) {
          return e.subscribe(new fU(t, this.compare, this.keySelector));
        }
      }
      class fU extends He {
        constructor(t, e, i) {
          super(t),
            (this.keySelector = i),
            (this.hasKey = !1),
            "function" == typeof e && (this.compare = e);
        }
        compare(t, e) {
          return t === e;
        }
        _next(t) {
          let e;
          try {
            const { keySelector: r } = this;
            e = r ? r(t) : t;
          } catch (r) {
            return this.destination.error(r);
          }
          let i = !1;
          if (this.hasKey)
            try {
              const { compare: r } = this;
              i = r(this.key, e);
            } catch (r) {
              return this.destination.error(r);
            }
          else this.hasKey = !0;
          i || ((this.key = e), this.destination.next(t));
        }
      }
      const pa = new Ii(Jd);
      class gU {
        constructor(t) {
          this.durationSelector = t;
        }
        call(t, e) {
          return e.subscribe(new mU(t, this.durationSelector));
        }
      }
      class mU extends Qs {
        constructor(t, e) {
          super(t), (this.durationSelector = e), (this.hasValue = !1);
        }
        _next(t) {
          if (((this.value = t), (this.hasValue = !0), !this.throttled)) {
            let e;
            try {
              const { durationSelector: r } = this;
              e = r(t);
            } catch (r) {
              return this.destination.error(r);
            }
            const i = Xs(e, new Js(this));
            !i || i.closed
              ? this.clearThrottle()
              : this.add((this.throttled = i));
          }
        }
        clearThrottle() {
          const { value: t, hasValue: e, throttled: i } = this;
          i && (this.remove(i), (this.throttled = void 0), i.unsubscribe()),
            e &&
              ((this.value = void 0),
              (this.hasValue = !1),
              this.destination.next(t));
        }
        notifyNext() {
          this.clearThrottle();
        }
        notifyComplete() {
          this.clearThrottle();
        }
      }
      function M_(n) {
        return !Tr(n) && n - parseFloat(n) + 1 >= 0;
      }
      function S_(n = 0, t, e) {
        let i = -1;
        return (
          M_(t) ? (i = Number(t) < 1 ? 1 : Number(t)) : Ks(t) && (e = t),
          Ks(e) || (e = pa),
          new Ce((r) => {
            const s = M_(n) ? n : +n - e.now();
            return e.schedule(_U, s, { index: 0, period: i, subscriber: r });
          })
        );
      }
      function _U(n) {
        const { index: t, period: e, subscriber: i } = n;
        if ((i.next(t), !i.closed)) {
          if (-1 === e) return i.complete();
          (n.index = t + 1), this.schedule(n, e);
        }
      }
      function Xd(n, t = pa) {
        return (function (n) {
          return function (e) {
            return e.lift(new gU(n));
          };
        })(() => S_(n, t));
      }
      function re(n) {
        return (t) => t.lift(new yU(n));
      }
      class yU {
        constructor(t) {
          this.notifier = t;
        }
        call(t, e) {
          const i = new bU(t),
            r = Xs(this.notifier, new Js(i));
          return r && !i.seenValue ? (i.add(r), e.subscribe(i)) : i;
        }
      }
      class bU extends Qs {
        constructor(t) {
          super(t), (this.seenValue = !1);
        }
        notifyNext() {
          (this.seenValue = !0), this.complete();
        }
        notifyComplete() {}
      }
      function SS(n, t) {
        return new Ce(
          t
            ? (e) => t.schedule(SU, 0, { error: n, subscriber: e })
            : (e) => e.error(n)
        );
      }
      function SU({ error: n, subscriber: t }) {
        t.error(n);
      }
      new (class extends Ii {})(
        class extends Jd {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          schedule(t, e = 0) {
            return e > 0
              ? super.schedule(t, e)
              : ((this.delay = e),
                (this.state = t),
                this.scheduler.flush(this),
                this);
          }
          execute(t, e) {
            return e > 0 || this.closed
              ? super.execute(t, e)
              : this._execute(t, e);
          }
          requestAsyncId(t, e, i = 0) {
            return (null !== i && i > 0) || (null === i && this.delay > 0)
              ? super.requestAsyncId(t, e, i)
              : t.flush(this);
          }
        }
      );
      class Sn {
        constructor(t, e, i) {
          (this.kind = t),
            (this.value = e),
            (this.error = i),
            (this.hasValue = "N" === t);
        }
        observe(t) {
          switch (this.kind) {
            case "N":
              return t.next && t.next(this.value);
            case "E":
              return t.error && t.error(this.error);
            case "C":
              return t.complete && t.complete();
          }
        }
        do(t, e, i) {
          switch (this.kind) {
            case "N":
              return t && t(this.value);
            case "E":
              return e && e(this.error);
            case "C":
              return i && i();
          }
        }
        accept(t, e, i) {
          return t && "function" == typeof t.next
            ? this.observe(t)
            : this.do(t, e, i);
        }
        toObservable() {
          switch (this.kind) {
            case "N":
              return J(this.value);
            case "E":
              return SS(this.error);
            case "C":
              return Rd();
          }
          throw new Error("unexpected notification kind value");
        }
        static createNext(t) {
          return void 0 !== t ? new Sn("N", t) : Sn.undefinedValueNotification;
        }
        static createError(t) {
          return new Sn("E", void 0, t);
        }
        static createComplete() {
          return Sn.completeNotification;
        }
      }
      let T_;
      (Sn.completeNotification = new Sn("C")),
        (Sn.undefinedValueNotification = new Sn("N", void 0));
      try {
        T_ = "undefined" != typeof Intl && Intl.v8BreakIterator;
      } catch (n) {
        T_ = !1;
      }
      let ga,
        je = (() => {
          class n {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? Ed(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !T_) &&
                  "undefined" != typeof CSS &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(fr));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(fr));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        lc = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({})),
            n
          );
        })();
      const TS = [
        "color",
        "button",
        "checkbox",
        "date",
        "datetime-local",
        "email",
        "file",
        "hidden",
        "image",
        "month",
        "number",
        "password",
        "radio",
        "range",
        "reset",
        "search",
        "submit",
        "tel",
        "text",
        "time",
        "url",
        "week",
      ];
      function AS() {
        if (ga) return ga;
        if ("object" != typeof document || !document)
          return (ga = new Set(TS)), ga;
        let n = document.createElement("input");
        return (
          (ga = new Set(
            TS.filter((t) => (n.setAttribute("type", t), n.type === t))
          )),
          ga
        );
      }
      let cc, ks, A_;
      function uc(n) {
        return (function () {
          if (null == cc && "undefined" != typeof window)
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (cc = !0) })
              );
            } finally {
              cc = cc || !1;
            }
          return cc;
        })()
          ? n
          : !!n.capture;
      }
      function kS() {
        if (null == ks) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (ks = !1), ks;
          if ("scrollBehavior" in document.documentElement.style) ks = !0;
          else {
            const n = Element.prototype.scrollTo;
            ks = !!n && !/\{\s*\[native code\]\s*\}/.test(n.toString());
          }
        }
        return ks;
      }
      function th() {
        let n =
          "undefined" != typeof document && document
            ? document.activeElement
            : null;
        for (; n && n.shadowRoot; ) {
          const t = n.shadowRoot.activeElement;
          if (t === n) break;
          n = t;
        }
        return n;
      }
      function ma(n) {
        return n.composedPath ? n.composedPath()[0] : n.target;
      }
      const NS = new P("cdk-dir-doc", {
        providedIn: "root",
        factory: function () {
          return qv(j);
        },
      });
      let si = (() => {
          class n {
            constructor(e) {
              if (((this.value = "ltr"), (this.change = new F()), e)) {
                const r = e.documentElement ? e.documentElement.dir : null,
                  s = (e.body ? e.body.dir : null) || r;
                this.value = "ltr" === s || "rtl" === s ? s : "ltr";
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(NS, 8));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(NS, 8));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        hc = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({})),
            n
          );
        })();
      function nh(n) {
        return n && "function" == typeof n.connect;
      }
      class IS {
        applyChanges(t, e, i, r, s) {
          t.forEachOperation((o, a, l) => {
            let c, u;
            if (null == o.previousIndex) {
              const d = i(o, a, l);
              (c = e.createEmbeddedView(d.templateRef, d.context, d.index)),
                (u = 1);
            } else
              null == l
                ? (e.remove(a), (u = 3))
                : ((c = e.get(a)), e.move(c, l), (u = 2));
            s &&
              s({
                context: null == c ? void 0 : c.context,
                operation: u,
                record: o,
              });
          });
        }
        detach() {}
      }
      class VU {
        constructor(t = !1, e, i = !0) {
          (this._multiple = t),
            (this._emitChanges = i),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new O()),
            e &&
              e.length &&
              (t
                ? e.forEach((r) => this._markSelected(r))
                : this._markSelected(e[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        select(...t) {
          this._verifyValueAssignment(t),
            t.forEach((e) => this._markSelected(e)),
            this._emitChangeEvent();
        }
        deselect(...t) {
          this._verifyValueAssignment(t),
            t.forEach((e) => this._unmarkSelected(e)),
            this._emitChangeEvent();
        }
        toggle(t) {
          this.isSelected(t) ? this.deselect(t) : this.select(t);
        }
        clear() {
          this._unmarkAll(), this._emitChangeEvent();
        }
        isSelected(t) {
          return this._selection.has(t);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(t) {
          this._multiple && this.selected && this._selected.sort(t);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(t) {
          this.isSelected(t) ||
            (this._multiple || this._unmarkAll(),
            this._selection.add(t),
            this._emitChanges && this._selectedToEmit.push(t));
        }
        _unmarkSelected(t) {
          this.isSelected(t) &&
            (this._selection.delete(t),
            this._emitChanges && this._deselectedToEmit.push(t));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((t) => this._unmarkSelected(t));
        }
        _verifyValueAssignment(t) {}
      }
      const Ns = new P("_ViewRepeater");
      let _a = (() => {
          class n {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this._platform = i),
                (this._scrolled = new O()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = r);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const i = this.scrollContainers.get(e);
              i && (i.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new Ce((i) => {
                    this._globalSubscription || this._addGlobalListener();
                    const r =
                      e > 0
                        ? this._scrolled.pipe(Xd(e)).subscribe(i)
                        : this._scrolled.subscribe(i);
                    return (
                      this._scrolledCount++,
                      () => {
                        r.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : J();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, i) => this.deregister(i)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, i) {
              const r = this.getAncestorScrollContainers(e);
              return this.scrolled(i).pipe(Pe((s) => !s || r.indexOf(s) > -1));
            }
            getAncestorScrollContainers(e) {
              const i = [];
              return (
                this.scrollContainers.forEach((r, s) => {
                  this._scrollableContainsElement(s, e) && i.push(s);
                }),
                i
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(e, i) {
              let r = vr(i),
                s = e.getElementRef().nativeElement;
              do {
                if (r == s) return !0;
              } while ((r = r.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                ct(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(H), m(je), m(j, 8));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(H), m(je), m(j, 8));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        Rs = (() => {
          class n {
            constructor(e, i, r) {
              (this._platform = e),
                (this._change = new O()),
                (this._changeListener = (s) => {
                  this._change.next(s);
                }),
                (this._document = r),
                i.runOutsideAngular(() => {
                  if (e.isBrowser) {
                    const s = this._getWindow();
                    s.addEventListener("resize", this._changeListener),
                      s.addEventListener(
                        "orientationchange",
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const e = this._getWindow();
                e.removeEventListener("resize", this._changeListener),
                  e.removeEventListener(
                    "orientationchange",
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: i, height: r } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + r,
                right: e.left + i,
                height: r,
                width: i,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._document,
                i = this._getWindow(),
                r = e.documentElement,
                s = r.getBoundingClientRect();
              return {
                top:
                  -s.top || e.body.scrollTop || i.scrollY || r.scrollTop || 0,
                left:
                  -s.left ||
                  e.body.scrollLeft ||
                  i.scrollX ||
                  r.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(Xd(e)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(je), m(H), m(j, 8));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(je), m(H), m(j, 8));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        ih = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({})),
            n
          );
        })(),
        N_ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[hc, lc, ih], hc, ih] })),
            n
          );
        })();
      class R_ {
        attach(t) {
          return (this._attachedHost = t), t.attach(this);
        }
        detach() {
          let t = this._attachedHost;
          null != t && ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class ya extends R_ {
        constructor(t, e, i, r) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = i),
            (this.componentFactoryResolver = r);
        }
      }
      class fc extends R_ {
        constructor(t, e, i) {
          super(),
            (this.templateRef = t),
            (this.viewContainerRef = e),
            (this.context = i);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class YU extends R_ {
        constructor(t) {
          super(), (this.element = t instanceof L ? t.nativeElement : t);
        }
      }
      class rh {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return t instanceof ya
            ? ((this._attachedPortal = t), this.attachComponentPortal(t))
            : t instanceof fc
            ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
            : this.attachDomPortal && t instanceof YU
            ? ((this._attachedPortal = t), this.attachDomPortal(t))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class KU extends rh {
        constructor(t, e, i, r, s) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = i),
            (this._defaultInjector = r),
            (this.attachDomPortal = (o) => {
              const a = o.element,
                l = this._document.createComment("dom-portal");
              a.parentNode.insertBefore(l, a),
                this.outletElement.appendChild(a),
                (this._attachedPortal = o),
                super.setDisposeFn(() => {
                  l.parentNode && l.parentNode.replaceChild(a, l);
                });
            }),
            (this._document = s);
        }
        attachComponentPortal(t) {
          const i = (
            t.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(t.component);
          let r;
          return (
            t.viewContainerRef
              ? ((r = t.viewContainerRef.createComponent(
                  i,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector
                )),
                this.setDisposeFn(() => r.destroy()))
              : ((r = i.create(t.injector || this._defaultInjector)),
                this._appRef.attachView(r.hostView),
                this.setDisposeFn(() => {
                  this._appRef.detachView(r.hostView), r.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(r)),
            (this._attachedPortal = t),
            r
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            i = e.createEmbeddedView(t.templateRef, t.context);
          return (
            i.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
            i.detectChanges(),
            this.setDisposeFn(() => {
              let r = e.indexOf(i);
              -1 !== r && e.remove(r);
            }),
            (this._attachedPortal = t),
            i
          );
        }
        dispose() {
          super.dispose(),
            null != this.outletElement.parentNode &&
              this.outletElement.parentNode.removeChild(this.outletElement);
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let ba = (() => {
          class n extends rh {
            constructor(e, i, r) {
              super(),
                (this._componentFactoryResolver = e),
                (this._viewContainerRef = i),
                (this._isInitialized = !1),
                (this.attached = new F()),
                (this.attachDomPortal = (s) => {
                  const o = s.element,
                    a = this._document.createComment("dom-portal");
                  s.setAttachedHost(this),
                    o.parentNode.insertBefore(a, o),
                    this._getRootNode().appendChild(o),
                    (this._attachedPortal = s),
                    super.setDisposeFn(() => {
                      a.parentNode && a.parentNode.replaceChild(o, a);
                    });
                }),
                (this._document = r);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(e) {
              (this.hasAttached() && !e && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                e && super.attach(e),
                (this._attachedPortal = e));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedPortal = null),
                (this._attachedRef = null);
            }
            attachComponentPortal(e) {
              e.setAttachedHost(this);
              const i =
                  null != e.viewContainerRef
                    ? e.viewContainerRef
                    : this._viewContainerRef,
                s = (
                  e.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(e.component),
                o = i.createComponent(s, i.length, e.injector || i.injector);
              return (
                i !== this._viewContainerRef &&
                  this._getRootNode().appendChild(o.hostView.rootNodes[0]),
                super.setDisposeFn(() => o.destroy()),
                (this._attachedPortal = e),
                (this._attachedRef = o),
                this.attached.emit(o),
                o
              );
            }
            attachTemplatePortal(e) {
              e.setAttachedHost(this);
              const i = this._viewContainerRef.createEmbeddedView(
                e.templateRef,
                e.context
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = e),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            _getRootNode() {
              const e = this._viewContainerRef.element.nativeElement;
              return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(on), f(Ze), f(j));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "cdkPortalOutlet", ""]],
              inputs: { portal: ["cdkPortalOutlet", "portal"] },
              outputs: { attached: "attached" },
              exportAs: ["cdkPortalOutlet"],
              features: [B],
            })),
            n
          );
        })(),
        I_ = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({})),
            n
          );
        })();
      class QU {
        constructor(t, e) {
          (this.predicate = t), (this.inclusive = e);
        }
        call(t, e) {
          return e.subscribe(new XU(t, this.predicate, this.inclusive));
        }
      }
      class XU extends He {
        constructor(t, e, i) {
          super(t),
            (this.predicate = e),
            (this.inclusive = i),
            (this.index = 0);
        }
        _next(t) {
          const e = this.destination;
          let i;
          try {
            i = this.predicate(t, this.index++);
          } catch (r) {
            return void e.error(r);
          }
          this.nextOrComplete(t, i);
        }
        nextOrComplete(t, e) {
          const i = this.destination;
          Boolean(e) ? i.next(t) : (this.inclusive && i.next(t), i.complete());
        }
      }
      function Is(n, ...t) {
        return t.length
          ? t.some((e) => n[e])
          : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
      }
      const HS = kS();
      class uz {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ""),
              (this._previousHTMLStyles.top = t.style.top || ""),
              (t.style.left = Mt(-this._previousScrollPosition.left)),
              (t.style.top = Mt(-this._previousScrollPosition.top)),
              t.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              i = t.style,
              r = this._document.body.style,
              s = i.scrollBehavior || "",
              o = r.scrollBehavior || "";
            (this._isEnabled = !1),
              (i.left = this._previousHTMLStyles.left),
              (i.top = this._previousHTMLStyles.top),
              t.classList.remove("cdk-global-scrollblock"),
              HS && (i.scrollBehavior = r.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              HS && ((i.scrollBehavior = s), (r.scrollBehavior = o));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            i = this._viewportRuler.getViewportSize();
          return e.scrollHeight > i.height || e.scrollWidth > i.width;
        }
      }
      class dz {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = i),
            (this._config = r),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class $S {
        enable() {}
        disable() {}
        attach() {}
      }
      function F_(n, t) {
        return t.some(
          (e) =>
            n.bottom < e.top ||
            n.top > e.bottom ||
            n.right < e.left ||
            n.left > e.right
        );
      }
      function jS(n, t) {
        return t.some(
          (e) =>
            n.top < e.top ||
            n.bottom > e.bottom ||
            n.left < e.left ||
            n.right > e.right
        );
      }
      class hz {
        constructor(t, e, i, r) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = i),
            (this._config = r),
            (this._scrollSubscription = null);
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: i, height: r } =
                      this._viewportRuler.getViewportSize();
                  F_(e, [
                    {
                      width: i,
                      height: r,
                      bottom: r,
                      right: i,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let fz = (() => {
        class n {
          constructor(e, i, r, s) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = i),
              (this._ngZone = r),
              (this.noop = () => new $S()),
              (this.close = (o) =>
                new dz(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  o
                )),
              (this.block = () => new uz(this._viewportRuler, this._document)),
              (this.reposition = (o) =>
                new hz(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  o
                )),
              (this._document = s);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(_a), m(Rs), m(H), m(j));
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n(m(_a), m(Rs), m(H), m(j));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      class ah {
        constructor(t) {
          if (
            ((this.scrollStrategy = new $S()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const i of e) void 0 !== t[i] && (this[i] = t[i]);
          }
        }
      }
      class pz {
        constructor(t, e, i, r, s) {
          (this.offsetX = i),
            (this.offsetY = r),
            (this.panelClass = s),
            (this.originX = t.originX),
            (this.originY = t.originY),
            (this.overlayX = e.overlayX),
            (this.overlayY = e.overlayY);
        }
      }
      class gz {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      let US = (() => {
          class n {
            constructor(e) {
              (this._attachedOverlays = []), (this._document = e);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(e) {
              this.remove(e), this._attachedOverlays.push(e);
            }
            remove(e) {
              const i = this._attachedOverlays.indexOf(e);
              i > -1 && this._attachedOverlays.splice(i, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(j));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        mz = (() => {
          class n extends US {
            constructor(e) {
              super(e),
                (this._keydownListener = (i) => {
                  const r = this._attachedOverlays;
                  for (let s = r.length - 1; s > -1; s--)
                    if (r[s]._keydownEvents.observers.length > 0) {
                      r[s]._keydownEvents.next(i);
                      break;
                    }
                });
            }
            add(e) {
              super.add(e),
                this._isAttached ||
                  (this._document.body.addEventListener(
                    "keydown",
                    this._keydownListener
                  ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(j));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        _z = (() => {
          class n extends US {
            constructor(e, i) {
              super(e),
                (this._platform = i),
                (this._cursorStyleIsSet = !1),
                (this._clickListener = (r) => {
                  const s = ma(r),
                    o = this._attachedOverlays.slice();
                  for (let a = o.length - 1; a > -1; a--) {
                    const l = o[a];
                    if (
                      !(l._outsidePointerEvents.observers.length < 1) &&
                      l.hasAttached()
                    ) {
                      if (l.overlayElement.contains(s)) break;
                      l._outsidePointerEvents.next(r);
                    }
                  }
                });
            }
            add(e) {
              if ((super.add(e), !this._isAttached)) {
                const i = this._document.body;
                i.addEventListener("click", this._clickListener, !0),
                  i.addEventListener("auxclick", this._clickListener, !0),
                  i.addEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = i.style.cursor),
                    (i.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const e = this._document.body;
                e.removeEventListener("click", this._clickListener, !0),
                  e.removeEventListener("auxclick", this._clickListener, !0),
                  e.removeEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((e.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(je));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(j), m(je));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })();
      const zr = "undefined" != typeof window ? window : {},
        zS =
          (void 0 !== zr.__karma__ && !!zr.__karma__) ||
          (void 0 !== zr.jasmine && !!zr.jasmine) ||
          (void 0 !== zr.jest && !!zr.jest) ||
          (void 0 !== zr.Mocha && !!zr.Mocha);
      let pc = (() => {
        class n {
          constructor(e, i) {
            (this._platform = i), (this._document = e);
          }
          ngOnDestroy() {
            const e = this._containerElement;
            e && e.parentNode && e.parentNode.removeChild(e);
          }
          getContainerElement() {
            return (
              this._containerElement || this._createContainer(),
              this._containerElement
            );
          }
          _createContainer() {
            const e = "cdk-overlay-container";
            if (this._platform.isBrowser || zS) {
              const r = this._document.querySelectorAll(
                `.${e}[platform="server"], .${e}[platform="test"]`
              );
              for (let s = 0; s < r.length; s++)
                r[s].parentNode.removeChild(r[s]);
            }
            const i = this._document.createElement("div");
            i.classList.add(e),
              zS
                ? i.setAttribute("platform", "test")
                : this._platform.isBrowser ||
                  i.setAttribute("platform", "server"),
              this._document.body.appendChild(i),
              (this._containerElement = i);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(j), m(je));
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n(m(j), m(je));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      class yz {
        constructor(t, e, i, r, s, o, a, l, c) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = i),
            (this._config = r),
            (this._ngZone = s),
            (this._keyboardDispatcher = o),
            (this._document = a),
            (this._location = l),
            (this._outsideClickDispatcher = c),
            (this._backdropElement = null),
            (this._backdropClick = new O()),
            (this._attachments = new O()),
            (this._detachments = new O()),
            (this._locationChanges = Ve.EMPTY),
            (this._backdropClickHandler = (u) => this._backdropClick.next(u)),
            (this._keydownEvents = new O()),
            (this._outsidePointerEvents = new O()),
            r.scrollStrategy &&
              ((this._scrollStrategy = r.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = r.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          let e = this._portalOutlet.attach(t);
          return (
            !this._host.parentElement &&
              this._previousHostParent &&
              this._previousHostParent.appendChild(this._host),
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(Oe(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this.detachBackdrop(),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host &&
              this._host.parentNode &&
              (this._host.parentNode.removeChild(this._host),
              (this._host = null)),
            (this._previousHostParent = this._pane = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = Object.assign(Object.assign({}, this._config), t)),
            this._updateElementSize();
        }
        setDirection(t) {
          (this._config = Object.assign(Object.assign({}, this._config), {
            direction: t,
          })),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ("string" == typeof t ? t : t.value) : "ltr";
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = Mt(this._config.width)),
            (t.height = Mt(this._config.height)),
            (t.minWidth = Mt(this._config.minWidth)),
            (t.minHeight = Mt(this._config.minHeight)),
            (t.maxWidth = Mt(this._config.maxWidth)),
            (t.maxHeight = Mt(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? "" : "none";
        }
        _attachBackdrop() {
          const t = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            "undefined" != typeof requestAnimationFrame
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(t);
                  });
                })
              : this._backdropElement.classList.add(t);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          let t = this._backdropElement;
          if (!t) return;
          let e,
            i = () => {
              t &&
                (t.removeEventListener("click", this._backdropClickHandler),
                t.removeEventListener("transitionend", i),
                t.parentNode && t.parentNode.removeChild(t)),
                this._backdropElement == t && (this._backdropElement = null),
                this._config.backdropClass &&
                  this._toggleClasses(t, this._config.backdropClass, !1),
                clearTimeout(e);
            };
          t.classList.remove("cdk-overlay-backdrop-showing"),
            this._ngZone.runOutsideAngular(() => {
              t.addEventListener("transitionend", i);
            }),
            (t.style.pointerEvents = "none"),
            (e = this._ngZone.runOutsideAngular(() => setTimeout(i, 500)));
        }
        _toggleClasses(t, e, i) {
          const r = t.classList;
          Kd(e).forEach((s) => {
            s && (i ? r.add(s) : r.remove(s));
          });
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable
              .pipe(re(Tn(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._previousHostParent.removeChild(this._host)),
                  t.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
      }
      const GS = "cdk-overlay-connected-position-bounding-box",
        bz = /([A-Za-z%]+)$/;
      class WS {
        constructor(t, e, i, r, s) {
          (this._viewportRuler = e),
            (this._document = i),
            (this._platform = r),
            (this._overlayContainer = s),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new O()),
            (this._resizeSubscription = Ve.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(t);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          this._validatePositions(),
            t.hostElement.classList.add(GS),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            i = this._viewportRect,
            r = [];
          let s;
          for (let o of this._preferredPositions) {
            let a = this._getOriginPoint(t, o),
              l = this._getOverlayPoint(a, e, o),
              c = this._getOverlayFit(l, e, i, o);
            if (c.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(o, a);
            this._canFitWithFlexibleDimensions(c, l, i)
              ? r.push({
                  position: o,
                  origin: a,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(a, o),
                })
              : (!s || s.overlayFit.visibleArea < c.visibleArea) &&
                (s = {
                  overlayFit: c,
                  overlayPoint: l,
                  originPoint: a,
                  position: o,
                  overlayRect: e,
                });
          }
          if (r.length) {
            let o = null,
              a = -1;
            for (const l of r) {
              const c =
                l.boundingBoxRect.width *
                l.boundingBoxRect.height *
                (l.position.weight || 1);
              c > a && ((a = c), (o = l));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(o.position, o.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(s.position, s.originPoint)
            );
          this._applyPosition(s.position, s.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              xs(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(GS),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (
            !this._isDisposed &&
            (!this._platform || this._platform.isBrowser)
          ) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect());
            const t = this._lastPosition || this._preferredPositions[0],
              e = this._getOriginPoint(this._originRect, t);
            this._applyPosition(t, e);
          }
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e) {
          let i, r;
          if ("center" == e.originX) i = t.left + t.width / 2;
          else {
            const s = this._isRtl() ? t.right : t.left,
              o = this._isRtl() ? t.left : t.right;
            i = "start" == e.originX ? s : o;
          }
          return (
            (r =
              "center" == e.originY
                ? t.top + t.height / 2
                : "top" == e.originY
                ? t.top
                : t.bottom),
            { x: i, y: r }
          );
        }
        _getOverlayPoint(t, e, i) {
          let r, s;
          return (
            (r =
              "center" == i.overlayX
                ? -e.width / 2
                : "start" === i.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (s =
              "center" == i.overlayY
                ? -e.height / 2
                : "top" == i.overlayY
                ? 0
                : -e.height),
            { x: t.x + r, y: t.y + s }
          );
        }
        _getOverlayFit(t, e, i, r) {
          const s = YS(e);
          let { x: o, y: a } = t,
            l = this._getOffset(r, "x"),
            c = this._getOffset(r, "y");
          l && (o += l), c && (a += c);
          let h = 0 - a,
            p = a + s.height - i.height,
            g = this._subtractOverflows(s.width, 0 - o, o + s.width - i.width),
            _ = this._subtractOverflows(s.height, h, p),
            y = g * _;
          return {
            visibleArea: y,
            isCompletelyWithinViewport: s.width * s.height === y,
            fitsInViewportVertically: _ === s.height,
            fitsInViewportHorizontally: g == s.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, i) {
          if (this._hasFlexibleDimensions) {
            const r = i.bottom - e.y,
              s = i.right - e.x,
              o = qS(this._overlayRef.getConfig().minHeight),
              a = qS(this._overlayRef.getConfig().minWidth),
              c = t.fitsInViewportHorizontally || (null != a && a <= s);
            return (t.fitsInViewportVertically || (null != o && o <= r)) && c;
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, i) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: t.x + this._previousPushAmount.x,
              y: t.y + this._previousPushAmount.y,
            };
          const r = YS(e),
            s = this._viewportRect,
            o = Math.max(t.x + r.width - s.width, 0),
            a = Math.max(t.y + r.height - s.height, 0),
            l = Math.max(s.top - i.top - t.y, 0),
            c = Math.max(s.left - i.left - t.x, 0);
          let u = 0,
            d = 0;
          return (
            (u =
              r.width <= s.width
                ? c || -o
                : t.x < this._viewportMargin
                ? s.left - i.left - t.x
                : 0),
            (d =
              r.height <= s.height
                ? l || -a
                : t.y < this._viewportMargin
                ? s.top - i.top - t.y
                : 0),
            (this._previousPushAmount = { x: u, y: d }),
            { x: t.x + u, y: t.y + d }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const i = this._getScrollVisibility(),
              r = new gz(t, i);
            this._positionChanges.next(r);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let i,
            r = t.overlayY;
          i =
            "center" === t.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === t.overlayX
                ? "right"
                : "left"
              : "start" === t.overlayX
              ? "left"
              : "right";
          for (let s = 0; s < e.length; s++)
            e[s].style.transformOrigin = `${i} ${r}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const i = this._viewportRect,
            r = this._isRtl();
          let s, o, a, u, d, h;
          if ("top" === e.overlayY)
            (o = t.y), (s = i.height - o + this._viewportMargin);
          else if ("bottom" === e.overlayY)
            (a = i.height - t.y + 2 * this._viewportMargin),
              (s = i.height - a + this._viewportMargin);
          else {
            const p = Math.min(i.bottom - t.y + i.top, t.y),
              g = this._lastBoundingBoxSize.height;
            (s = 2 * p),
              (o = t.y - p),
              s > g &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (o = t.y - g / 2);
          }
          if (("end" === e.overlayX && !r) || ("start" === e.overlayX && r))
            (h = i.width - t.x + this._viewportMargin),
              (u = t.x - this._viewportMargin);
          else if (
            ("start" === e.overlayX && !r) ||
            ("end" === e.overlayX && r)
          )
            (d = t.x), (u = i.right - t.x);
          else {
            const p = Math.min(i.right - t.x + i.left, t.x),
              g = this._lastBoundingBoxSize.width;
            (u = 2 * p),
              (d = t.x - p),
              u > g &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (d = t.x - g / 2);
          }
          return { top: o, left: d, bottom: a, right: h, width: u, height: s };
        }
        _setBoundingBoxStyles(t, e) {
          const i = this._calculateBoundingBoxRect(t, e);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
            (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
          const r = {};
          if (this._hasExactPosition())
            (r.top = r.left = "0"),
              (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
              (r.width = r.height = "100%");
          else {
            const s = this._overlayRef.getConfig().maxHeight,
              o = this._overlayRef.getConfig().maxWidth;
            (r.height = Mt(i.height)),
              (r.top = Mt(i.top)),
              (r.bottom = Mt(i.bottom)),
              (r.width = Mt(i.width)),
              (r.left = Mt(i.left)),
              (r.right = Mt(i.right)),
              (r.alignItems =
                "center" === e.overlayX
                  ? "center"
                  : "end" === e.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (r.justifyContent =
                "center" === e.overlayY
                  ? "center"
                  : "bottom" === e.overlayY
                  ? "flex-end"
                  : "flex-start"),
              s && (r.maxHeight = Mt(s)),
              o && (r.maxWidth = Mt(o));
          }
          (this._lastBoundingBoxSize = i), xs(this._boundingBox.style, r);
        }
        _resetBoundingBoxStyles() {
          xs(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          xs(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(t, e) {
          const i = {},
            r = this._hasExactPosition(),
            s = this._hasFlexibleDimensions,
            o = this._overlayRef.getConfig();
          if (r) {
            const u = this._viewportRuler.getViewportScrollPosition();
            xs(i, this._getExactOverlayY(e, t, u)),
              xs(i, this._getExactOverlayX(e, t, u));
          } else i.position = "static";
          let a = "",
            l = this._getOffset(e, "x"),
            c = this._getOffset(e, "y");
          l && (a += `translateX(${l}px) `),
            c && (a += `translateY(${c}px)`),
            (i.transform = a.trim()),
            o.maxHeight &&
              (r ? (i.maxHeight = Mt(o.maxHeight)) : s && (i.maxHeight = "")),
            o.maxWidth &&
              (r ? (i.maxWidth = Mt(o.maxWidth)) : s && (i.maxWidth = "")),
            xs(this._pane.style, i);
        }
        _getExactOverlayY(t, e, i) {
          let r = { top: "", bottom: "" },
            s = this._getOverlayPoint(e, this._overlayRect, t);
          this._isPushed &&
            (s = this._pushOverlayOnScreen(s, this._overlayRect, i));
          let o = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect().top;
          return (
            (s.y -= o),
            "bottom" === t.overlayY
              ? (r.bottom =
                  this._document.documentElement.clientHeight -
                  (s.y + this._overlayRect.height) +
                  "px")
              : (r.top = Mt(s.y)),
            r
          );
        }
        _getExactOverlayX(t, e, i) {
          let o,
            r = { left: "", right: "" },
            s = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (s = this._pushOverlayOnScreen(s, this._overlayRect, i)),
            (o = this._isRtl()
              ? "end" === t.overlayX
                ? "left"
                : "right"
              : "end" === t.overlayX
              ? "right"
              : "left"),
            "right" === o
              ? (r.right =
                  this._document.documentElement.clientWidth -
                  (s.x + this._overlayRect.width) +
                  "px")
              : (r.left = Mt(s.x)),
            r
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            i = this._scrollables.map((r) =>
              r.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: jS(t, i),
            isOriginOutsideView: F_(t, i),
            isOverlayClipped: jS(e, i),
            isOverlayOutsideView: F_(e, i),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((i, r) => i - Math.max(r, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            i = this._viewportRuler.getViewportScrollPosition();
          return {
            top: i.top + this._viewportMargin,
            left: i.left + this._viewportMargin,
            right: i.left + t - this._viewportMargin,
            bottom: i.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return "x" === e
            ? null == t.offsetX
              ? this._offsetX
              : t.offsetX
            : null == t.offsetY
            ? this._offsetY
            : t.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(t) {
          this._pane &&
            Kd(t).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof L) return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            i = t.height || 0;
          return {
            top: t.y,
            bottom: t.y + i,
            left: t.x,
            right: t.x + e,
            height: i,
            width: e,
          };
        }
      }
      function xs(n, t) {
        for (let e in t) t.hasOwnProperty(e) && (n[e] = t[e]);
        return n;
      }
      function qS(n) {
        if ("number" != typeof n && null != n) {
          const [t, e] = n.split(bz);
          return e && "px" !== e ? null : parseFloat(t);
        }
        return n || null;
      }
      function YS(n) {
        return {
          top: Math.floor(n.top),
          right: Math.floor(n.right),
          bottom: Math.floor(n.bottom),
          left: Math.floor(n.left),
          width: Math.floor(n.width),
          height: Math.floor(n.height),
        };
      }
      class vz {
        constructor(t, e, i, r, s, o, a) {
          (this._preferredPositions = []),
            (this._positionStrategy = new WS(i, r, s, o, a)
              .withFlexibleDimensions(!1)
              .withPush(!1)
              .withViewportMargin(0)),
            this.withFallbackPosition(t, e),
            (this.onPositionChange = this._positionStrategy.positionChanges);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          (this._overlayRef = t),
            this._positionStrategy.attach(t),
            this._direction &&
              (t.setDirection(this._direction), (this._direction = null));
        }
        dispose() {
          this._positionStrategy.dispose();
        }
        detach() {
          this._positionStrategy.detach();
        }
        apply() {
          this._positionStrategy.apply();
        }
        recalculateLastPosition() {
          this._positionStrategy.reapplyLastPosition();
        }
        withScrollableContainers(t) {
          this._positionStrategy.withScrollableContainers(t);
        }
        withFallbackPosition(t, e, i, r) {
          const s = new pz(t, e, i, r);
          return (
            this._preferredPositions.push(s),
            this._positionStrategy.withPositions(this._preferredPositions),
            this
          );
        }
        withDirection(t) {
          return (
            this._overlayRef
              ? this._overlayRef.setDirection(t)
              : (this._direction = t),
            this
          );
        }
        withOffsetX(t) {
          return this._positionStrategy.withDefaultOffsetX(t), this;
        }
        withOffsetY(t) {
          return this._positionStrategy.withDefaultOffsetY(t), this;
        }
        withLockedPosition(t) {
          return this._positionStrategy.withLockedPosition(t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t.slice()),
            this._positionStrategy.withPositions(this._preferredPositions),
            this
          );
        }
        setOrigin(t) {
          return this._positionStrategy.setOrigin(t), this;
        }
      }
      const KS = "cdk-global-overlay-wrapper";
      class wz {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._leftOffset = ""),
            (this._rightOffset = ""),
            (this._alignItems = ""),
            (this._justifyContent = ""),
            (this._width = ""),
            (this._height = "");
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add(KS),
            (this._isDisposed = !1);
        }
        top(t = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = t),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(t = "") {
          return (
            (this._rightOffset = ""),
            (this._leftOffset = t),
            (this._justifyContent = "flex-start"),
            this
          );
        }
        bottom(t = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = t),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(t = "") {
          return (
            (this._leftOffset = ""),
            (this._rightOffset = t),
            (this._justifyContent = "flex-end"),
            this
          );
        }
        width(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: t })
              : (this._width = t),
            this
          );
        }
        height(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: t })
              : (this._height = t),
            this
          );
        }
        centerHorizontally(t = "") {
          return this.left(t), (this._justifyContent = "center"), this;
        }
        centerVertically(t = "") {
          return this.top(t), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            i = this._overlayRef.getConfig(),
            { width: r, height: s, maxWidth: o, maxHeight: a } = i,
            l = !(
              ("100%" !== r && "100vw" !== r) ||
              (o && "100%" !== o && "100vw" !== o)
            ),
            c = !(
              ("100%" !== s && "100vh" !== s) ||
              (a && "100%" !== a && "100vh" !== a)
            );
          (t.position = this._cssPosition),
            (t.marginLeft = l ? "0" : this._leftOffset),
            (t.marginTop = c ? "0" : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = this._rightOffset),
            l
              ? (e.justifyContent = "flex-start")
              : "center" === this._justifyContent
              ? (e.justifyContent = "center")
              : "rtl" === this._overlayRef.getConfig().direction
              ? "flex-start" === this._justifyContent
                ? (e.justifyContent = "flex-end")
                : "flex-end" === this._justifyContent &&
                  (e.justifyContent = "flex-start")
              : (e.justifyContent = this._justifyContent),
            (e.alignItems = c ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            i = e.style;
          e.classList.remove(KS),
            (i.justifyContent =
              i.alignItems =
              t.marginTop =
              t.marginBottom =
              t.marginLeft =
              t.marginRight =
              t.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let Cz = (() => {
          class n {
            constructor(e, i, r, s) {
              (this._viewportRuler = e),
                (this._document = i),
                (this._platform = r),
                (this._overlayContainer = s);
            }
            global() {
              return new wz();
            }
            connectedTo(e, i, r) {
              return new vz(
                i,
                r,
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
            flexibleConnectedTo(e) {
              return new WS(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Rs), m(j), m(je), m(pc));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(Rs), m(j), m(je), m(pc));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        Dz = 0,
        oi = (() => {
          class n {
            constructor(e, i, r, s, o, a, l, c, u, d, h) {
              (this.scrollStrategies = e),
                (this._overlayContainer = i),
                (this._componentFactoryResolver = r),
                (this._positionBuilder = s),
                (this._keyboardDispatcher = o),
                (this._injector = a),
                (this._ngZone = l),
                (this._document = c),
                (this._directionality = u),
                (this._location = d),
                (this._outsideClickDispatcher = h);
            }
            create(e) {
              const i = this._createHostElement(),
                r = this._createPaneElement(i),
                s = this._createPortalOutlet(r),
                o = new ah(e);
              return (
                (o.direction = o.direction || this._directionality.value),
                new yz(
                  s,
                  i,
                  r,
                  o,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const i = this._document.createElement("div");
              return (
                (i.id = "cdk-overlay-" + Dz++),
                i.classList.add("cdk-overlay-pane"),
                e.appendChild(i),
                i
              );
            }
            _createHostElement() {
              const e = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef || (this._appRef = this._injector.get(Vn)),
                new KU(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(fz),
                m(pc),
                m(on),
                m(Cz),
                m(mz),
                m(ae),
                m(H),
                m(j),
                m(si),
                m(ra),
                m(_z)
              );
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      const Ez = [
          {
            originX: "start",
            originY: "bottom",
            overlayX: "start",
            overlayY: "top",
          },
          {
            originX: "start",
            originY: "top",
            overlayX: "start",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "top",
            overlayX: "end",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "bottom",
            overlayX: "end",
            overlayY: "top",
          },
        ],
        JS = new P("cdk-connected-overlay-scroll-strategy");
      let Mz = (() => {
          class n {
            constructor(e) {
              this.elementRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(L));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["", "cdk-overlay-origin", ""],
                ["", "overlay-origin", ""],
                ["", "cdkOverlayOrigin", ""],
              ],
              exportAs: ["cdkOverlayOrigin"],
            })),
            n
          );
        })(),
        QS = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this._overlay = e),
                (this._dir = o),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = Ve.EMPTY),
                (this._attachSubscription = Ve.EMPTY),
                (this._detachSubscription = Ve.EMPTY),
                (this._positionSubscription = Ve.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new F()),
                (this.positionChange = new F()),
                (this.attach = new F()),
                (this.detach = new F()),
                (this.overlayKeydown = new F()),
                (this.overlayOutsideClick = new F()),
                (this._templatePortal = new fc(i, r)),
                (this._scrollStrategyFactory = s),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(e) {
              (this._offsetX = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(e) {
              (this._offsetY = e),
                this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = We(e);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(e) {
              this._lockPosition = We(e);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(e) {
              this._flexibleDimensions = We(e);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(e) {
              this._growAfterOpen = We(e);
            }
            get push() {
              return this._push;
            }
            set push(e) {
              this._push = We(e);
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : "ltr";
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(e) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                e.origin && this.open && this._position.apply()),
                e.open &&
                  (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (!this.positions || !this.positions.length) &&
                (this.positions = Ez);
              const e = (this._overlayRef = this._overlay.create(
                this._buildConfig()
              ));
              (this._attachSubscription = e
                .attachments()
                .subscribe(() => this.attach.emit())),
                (this._detachSubscription = e
                  .detachments()
                  .subscribe(() => this.detach.emit())),
                e.keydownEvents().subscribe((i) => {
                  this.overlayKeydown.next(i),
                    27 === i.keyCode &&
                      !this.disableClose &&
                      !Is(i) &&
                      (i.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe((i) => {
                  this.overlayOutsideClick.next(i);
                });
            }
            _buildConfig() {
              const e = (this._position =
                  this.positionStrategy || this._createPositionStrategy()),
                i = new ah({
                  direction: this._dir,
                  positionStrategy: e,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (i.width = this.width),
                (this.height || 0 === this.height) && (i.height = this.height),
                (this.minWidth || 0 === this.minWidth) &&
                  (i.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) &&
                  (i.minHeight = this.minHeight),
                this.backdropClass && (i.backdropClass = this.backdropClass),
                this.panelClass && (i.panelClass = this.panelClass),
                i
              );
            }
            _updatePositionStrategy(e) {
              const i = this.positions.map((r) => ({
                originX: r.originX,
                originY: r.originY,
                overlayX: r.overlayX,
                overlayY: r.overlayY,
                offsetX: r.offsetX || this.offsetX,
                offsetY: r.offsetY || this.offsetY,
                panelClass: r.panelClass || void 0,
              }));
              return e
                .setOrigin(this.origin.elementRef)
                .withPositions(i)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const e = this._overlay
                .position()
                .flexibleConnectedTo(this.origin.elementRef);
              return this._updatePositionStrategy(e), e;
            }
            _attachOverlay() {
              this._overlayRef
                ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
                : this._createOverlay(),
                this._overlayRef.hasAttached() ||
                  this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef
                      .backdropClick()
                      .subscribe((e) => {
                        this.backdropClick.emit(e);
                      }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (function (n, t = !1) {
                        return (e) => e.lift(new QU(n, t));
                      })(() => this.positionChange.observers.length > 0)
                    )
                    .subscribe((e) => {
                      this.positionChange.emit(e),
                        0 === this.positionChange.observers.length &&
                          this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(oi), f(Se), f(Ze), f(JS), f(si, 8));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["", "cdk-connected-overlay", ""],
                ["", "connected-overlay", ""],
                ["", "cdkConnectedOverlay", ""],
              ],
              inputs: {
                viewportMargin: [
                  "cdkConnectedOverlayViewportMargin",
                  "viewportMargin",
                ],
                open: ["cdkConnectedOverlayOpen", "open"],
                disableClose: [
                  "cdkConnectedOverlayDisableClose",
                  "disableClose",
                ],
                scrollStrategy: [
                  "cdkConnectedOverlayScrollStrategy",
                  "scrollStrategy",
                ],
                offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
                offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
                hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
                lockPosition: [
                  "cdkConnectedOverlayLockPosition",
                  "lockPosition",
                ],
                flexibleDimensions: [
                  "cdkConnectedOverlayFlexibleDimensions",
                  "flexibleDimensions",
                ],
                growAfterOpen: [
                  "cdkConnectedOverlayGrowAfterOpen",
                  "growAfterOpen",
                ],
                push: ["cdkConnectedOverlayPush", "push"],
                positions: ["cdkConnectedOverlayPositions", "positions"],
                origin: ["cdkConnectedOverlayOrigin", "origin"],
                positionStrategy: [
                  "cdkConnectedOverlayPositionStrategy",
                  "positionStrategy",
                ],
                width: ["cdkConnectedOverlayWidth", "width"],
                height: ["cdkConnectedOverlayHeight", "height"],
                minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
                minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
                backdropClass: [
                  "cdkConnectedOverlayBackdropClass",
                  "backdropClass",
                ],
                panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
                transformOriginSelector: [
                  "cdkConnectedOverlayTransformOriginOn",
                  "transformOriginSelector",
                ],
              },
              outputs: {
                backdropClick: "backdropClick",
                positionChange: "positionChange",
                attach: "attach",
                detach: "detach",
                overlayKeydown: "overlayKeydown",
                overlayOutsideClick: "overlayOutsideClick",
              },
              exportAs: ["cdkConnectedOverlay"],
              features: [Me],
            })),
            n
          );
        })();
      const Tz = {
        provide: JS,
        deps: [oi],
        useFactory: function (n) {
          return () => n.scrollStrategies.reposition();
        },
      };
      let lh = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = K({ type: n })),
          (n.ɵinj = W({ providers: [oi, Tz], imports: [[hc, I_, N_], N_] })),
          n
        );
      })();
      function L_(n, t = pa) {
        return (e) => e.lift(new Az(n, t));
      }
      class Az {
        constructor(t, e) {
          (this.dueTime = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new kz(t, this.dueTime, this.scheduler));
        }
      }
      class kz extends He {
        constructor(t, e, i) {
          super(t),
            (this.dueTime = e),
            (this.scheduler = i),
            (this.debouncedSubscription = null),
            (this.lastValue = null),
            (this.hasValue = !1);
        }
        _next(t) {
          this.clearDebounce(),
            (this.lastValue = t),
            (this.hasValue = !0),
            this.add(
              (this.debouncedSubscription = this.scheduler.schedule(
                Nz,
                this.dueTime,
                this
              ))
            );
        }
        _complete() {
          this.debouncedNext(), this.destination.complete();
        }
        debouncedNext() {
          if ((this.clearDebounce(), this.hasValue)) {
            const { lastValue: t } = this;
            (this.lastValue = null),
              (this.hasValue = !1),
              this.destination.next(t);
          }
        }
        clearDebounce() {
          const t = this.debouncedSubscription;
          null !== t &&
            (this.remove(t),
            t.unsubscribe(),
            (this.debouncedSubscription = null));
        }
      }
      function Nz(n) {
        n.debouncedNext();
      }
      function V_(n) {
        return (t) => t.lift(new Rz(n));
      }
      class Rz {
        constructor(t) {
          this.total = t;
        }
        call(t, e) {
          return e.subscribe(new Iz(t, this.total));
        }
      }
      class Iz extends He {
        constructor(t, e) {
          super(t), (this.total = e), (this.count = 0);
        }
        _next(t) {
          ++this.count > this.total && this.destination.next(t);
        }
      }
      let B_ = (() => {
          class n {
            create(e) {
              return "undefined" == typeof MutationObserver
                ? null
                : new MutationObserver(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n();
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        XS = (() => {
          class n {
            constructor(e) {
              (this._mutationObserverFactory = e),
                (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((e, i) =>
                this._cleanupObserver(i)
              );
            }
            observe(e) {
              const i = vr(e);
              return new Ce((r) => {
                const o = this._observeElement(i).subscribe(r);
                return () => {
                  o.unsubscribe(), this._unobserveElement(i);
                };
              });
            }
            _observeElement(e) {
              if (this._observedElements.has(e))
                this._observedElements.get(e).count++;
              else {
                const i = new O(),
                  r = this._mutationObserverFactory.create((s) => i.next(s));
                r &&
                  r.observe(e, {
                    characterData: !0,
                    childList: !0,
                    subtree: !0,
                  }),
                  this._observedElements.set(e, {
                    observer: r,
                    stream: i,
                    count: 1,
                  });
              }
              return this._observedElements.get(e).stream;
            }
            _unobserveElement(e) {
              this._observedElements.has(e) &&
                (this._observedElements.get(e).count--,
                this._observedElements.get(e).count ||
                  this._cleanupObserver(e));
            }
            _cleanupObserver(e) {
              if (this._observedElements.has(e)) {
                const { observer: i, stream: r } =
                  this._observedElements.get(e);
                i && i.disconnect(),
                  r.complete(),
                  this._observedElements.delete(e);
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(B_));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(B_));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        xz = (() => {
          class n {
            constructor(e, i, r) {
              (this._contentObserver = e),
                (this._elementRef = i),
                (this._ngZone = r),
                (this.event = new F()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = We(e)),
                this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(e) {
              (this._debounce = Hn(e)), this._subscribe();
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const e = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (
                  this.debounce ? e.pipe(L_(this.debounce)) : e
                ).subscribe(this.event);
              });
            }
            _unsubscribe() {
              var e;
              null === (e = this._currentSubscription) ||
                void 0 === e ||
                e.unsubscribe();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(XS), f(L), f(H));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "cdkObserveContent", ""]],
              inputs: {
                disabled: ["cdkObserveContentDisabled", "disabled"],
                debounce: "debounce",
              },
              outputs: { event: "cdkObserveContent" },
              exportAs: ["cdkObserveContent"],
            })),
            n
          );
        })(),
        ZS = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ providers: [B_] })),
            n
          );
        })();
      function ch(n, t) {
        return (n.getAttribute(t) || "").match(/\S+/g) || [];
      }
      const tT = "cdk-describedby-message-container",
        nT = "cdk-describedby-message",
        uh = "cdk-describedby-host";
      let Fz = 0;
      const Xi = new Map();
      let Qt = null,
        iT = (() => {
          class n {
            constructor(e) {
              this._document = e;
            }
            describe(e, i, r) {
              if (!this._canBeDescribed(e, i)) return;
              const s = H_(i, r);
              "string" != typeof i
                ? (rT(i), Xi.set(s, { messageElement: i, referenceCount: 0 }))
                : Xi.has(s) || this._createMessageElement(i, r),
                this._isElementDescribedByMessage(e, s) ||
                  this._addMessageReference(e, s);
            }
            removeDescription(e, i, r) {
              if (!i || !this._isElementNode(e)) return;
              const s = H_(i, r);
              if (
                (this._isElementDescribedByMessage(e, s) &&
                  this._removeMessageReference(e, s),
                "string" == typeof i)
              ) {
                const o = Xi.get(s);
                o && 0 === o.referenceCount && this._deleteMessageElement(s);
              }
              Qt &&
                0 === Qt.childNodes.length &&
                this._deleteMessagesContainer();
            }
            ngOnDestroy() {
              const e = this._document.querySelectorAll(`[${uh}]`);
              for (let i = 0; i < e.length; i++)
                this._removeCdkDescribedByReferenceIds(e[i]),
                  e[i].removeAttribute(uh);
              Qt && this._deleteMessagesContainer(), Xi.clear();
            }
            _createMessageElement(e, i) {
              const r = this._document.createElement("div");
              rT(r),
                (r.textContent = e),
                i && r.setAttribute("role", i),
                this._createMessagesContainer(),
                Qt.appendChild(r),
                Xi.set(H_(e, i), { messageElement: r, referenceCount: 0 });
            }
            _deleteMessageElement(e) {
              const i = Xi.get(e),
                r = i && i.messageElement;
              Qt && r && Qt.removeChild(r), Xi.delete(e);
            }
            _createMessagesContainer() {
              if (!Qt) {
                const e = this._document.getElementById(tT);
                e && e.parentNode && e.parentNode.removeChild(e),
                  (Qt = this._document.createElement("div")),
                  (Qt.id = tT),
                  (Qt.style.visibility = "hidden"),
                  Qt.classList.add("cdk-visually-hidden"),
                  this._document.body.appendChild(Qt);
              }
            }
            _deleteMessagesContainer() {
              Qt &&
                Qt.parentNode &&
                (Qt.parentNode.removeChild(Qt), (Qt = null));
            }
            _removeCdkDescribedByReferenceIds(e) {
              const i = ch(e, "aria-describedby").filter(
                (r) => 0 != r.indexOf(nT)
              );
              e.setAttribute("aria-describedby", i.join(" "));
            }
            _addMessageReference(e, i) {
              const r = Xi.get(i);
              (function (n, t, e) {
                const i = ch(n, t);
                i.some((r) => r.trim() == e.trim()) ||
                  (i.push(e.trim()), n.setAttribute(t, i.join(" ")));
              })(e, "aria-describedby", r.messageElement.id),
                e.setAttribute(uh, ""),
                r.referenceCount++;
            }
            _removeMessageReference(e, i) {
              const r = Xi.get(i);
              r.referenceCount--,
                (function (n, t, e) {
                  const r = ch(n, t).filter((s) => s != e.trim());
                  r.length
                    ? n.setAttribute(t, r.join(" "))
                    : n.removeAttribute(t);
                })(e, "aria-describedby", r.messageElement.id),
                e.removeAttribute(uh);
            }
            _isElementDescribedByMessage(e, i) {
              const r = ch(e, "aria-describedby"),
                s = Xi.get(i),
                o = s && s.messageElement.id;
              return !!o && -1 != r.indexOf(o);
            }
            _canBeDescribed(e, i) {
              if (!this._isElementNode(e)) return !1;
              if (i && "object" == typeof i) return !0;
              const r = null == i ? "" : `${i}`.trim(),
                s = e.getAttribute("aria-label");
              return !(!r || (s && s.trim() === r));
            }
            _isElementNode(e) {
              return e.nodeType === this._document.ELEMENT_NODE;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(j));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })();
      function H_(n, t) {
        return "string" == typeof n ? `${t || ""}/${n}` : n;
      }
      function rT(n) {
        n.id || (n.id = `${nT}-${Fz++}`);
      }
      class Vz extends class {
        constructor(t) {
          (this._items = t),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new O()),
            (this._typeaheadSubscription = Ve.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._skipPredicateFn = (e) => e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new O()),
            (this.change = new O()),
            t instanceof Qo &&
              t.changes.subscribe((e) => {
                if (this._activeItem) {
                  const r = e.toArray().indexOf(this._activeItem);
                  r > -1 &&
                    r !== this._activeItemIndex &&
                    (this._activeItemIndex = r);
                }
              });
        }
        skipPredicate(t) {
          return (this._skipPredicateFn = t), this;
        }
        withWrap(t = !0) {
          return (this._wrap = t), this;
        }
        withVerticalOrientation(t = !0) {
          return (this._vertical = t), this;
        }
        withHorizontalOrientation(t) {
          return (this._horizontal = t), this;
        }
        withAllowedModifierKeys(t) {
          return (this._allowedModifierKeys = t), this;
        }
        withTypeAhead(t = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                It((e) => this._pressedLetters.push(e)),
                L_(t),
                Pe(() => this._pressedLetters.length > 0),
                Q(() => this._pressedLetters.join(""))
              )
              .subscribe((e) => {
                const i = this._getItemsArray();
                for (let r = 1; r < i.length + 1; r++) {
                  const s = (this._activeItemIndex + r) % i.length,
                    o = i[s];
                  if (
                    !this._skipPredicateFn(o) &&
                    0 === o.getLabel().toUpperCase().trim().indexOf(e)
                  ) {
                    this.setActiveItem(s);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        withHomeAndEnd(t = !0) {
          return (this._homeAndEnd = t), this;
        }
        setActiveItem(t) {
          const e = this._activeItem;
          this.updateActiveItem(t),
            this._activeItem !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(t) {
          const e = t.keyCode,
            r = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (s) => !t[s] || this._allowedModifierKeys.indexOf(s) > -1
            );
          switch (e) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && r) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && r) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case 36:
              if (this._homeAndEnd && r) {
                this.setFirstItemActive();
                break;
              }
              return;
            case 35:
              if (this._homeAndEnd && r) {
                this.setLastItemActive();
                break;
              }
              return;
            default:
              return void (
                (r || Is(t, "shiftKey")) &&
                (t.key && 1 === t.key.length
                  ? this._letterKeyStream.next(t.key.toLocaleUpperCase())
                  : ((e >= 65 && e <= 90) || (e >= 48 && e <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), t.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(t) {
          const e = this._getItemsArray(),
            i = "number" == typeof t ? t : e.indexOf(t),
            r = e[i];
          (this._activeItem = null == r ? null : r),
            (this._activeItemIndex = i);
        }
        _setActiveItemByDelta(t) {
          this._wrap
            ? this._setActiveInWrapMode(t)
            : this._setActiveInDefaultMode(t);
        }
        _setActiveInWrapMode(t) {
          const e = this._getItemsArray();
          for (let i = 1; i <= e.length; i++) {
            const r = (this._activeItemIndex + t * i + e.length) % e.length;
            if (!this._skipPredicateFn(e[r])) return void this.setActiveItem(r);
          }
        }
        _setActiveInDefaultMode(t) {
          this._setActiveItemByIndex(this._activeItemIndex + t, t);
        }
        _setActiveItemByIndex(t, e) {
          const i = this._getItemsArray();
          if (i[t]) {
            for (; this._skipPredicateFn(i[t]); ) if (!i[(t += e)]) return;
            this.setActiveItem(t);
          }
        }
        _getItemsArray() {
          return this._items instanceof Qo
            ? this._items.toArray()
            : this._items;
        }
      } {
        setActiveItem(t) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(t),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      let sT = (() => {
        class n {
          constructor(e) {
            this._platform = e;
          }
          isDisabled(e) {
            return e.hasAttribute("disabled");
          }
          isVisible(e) {
            return (
              (function (n) {
                return !!(
                  n.offsetWidth ||
                  n.offsetHeight ||
                  ("function" == typeof n.getClientRects &&
                    n.getClientRects().length)
                );
              })(e) && "visible" === getComputedStyle(e).visibility
            );
          }
          isTabbable(e) {
            if (!this._platform.isBrowser) return !1;
            const i = (function (n) {
              try {
                return n.frameElement;
              } catch (t) {
                return null;
              }
            })(
              (function (n) {
                return (
                  (n.ownerDocument && n.ownerDocument.defaultView) || window
                );
              })(e)
            );
            if (i && (-1 === aT(i) || !this.isVisible(i))) return !1;
            let r = e.nodeName.toLowerCase(),
              s = aT(e);
            return e.hasAttribute("contenteditable")
              ? -1 !== s
              : !(
                  "iframe" === r ||
                  "object" === r ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function (n) {
                      let t = n.nodeName.toLowerCase(),
                        e = "input" === t && n.type;
                      return (
                        "text" === e ||
                        "password" === e ||
                        "select" === t ||
                        "textarea" === t
                      );
                    })(e))
                ) &&
                  ("audio" === r
                    ? !!e.hasAttribute("controls") && -1 !== s
                    : "video" === r
                    ? -1 !== s &&
                      (null !== s ||
                        this._platform.FIREFOX ||
                        e.hasAttribute("controls"))
                    : e.tabIndex >= 0);
          }
          isFocusable(e, i) {
            return (
              (function (n) {
                return (
                  !(function (n) {
                    return (
                      (function (n) {
                        return "input" == n.nodeName.toLowerCase();
                      })(n) && "hidden" == n.type
                    );
                  })(n) &&
                  ((function (n) {
                    let t = n.nodeName.toLowerCase();
                    return (
                      "input" === t ||
                      "select" === t ||
                      "button" === t ||
                      "textarea" === t
                    );
                  })(n) ||
                    (function (n) {
                      return (
                        (function (n) {
                          return "a" == n.nodeName.toLowerCase();
                        })(n) && n.hasAttribute("href")
                      );
                    })(n) ||
                    n.hasAttribute("contenteditable") ||
                    oT(n))
                );
              })(e) &&
              !this.isDisabled(e) &&
              ((null == i ? void 0 : i.ignoreVisibility) || this.isVisible(e))
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(je));
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n(m(je));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      function oT(n) {
        if (!n.hasAttribute("tabindex") || void 0 === n.tabIndex) return !1;
        let t = n.getAttribute("tabindex");
        return "-32768" != t && !(!t || isNaN(parseInt(t, 10)));
      }
      function aT(n) {
        if (!oT(n)) return null;
        const t = parseInt(n.getAttribute("tabindex") || "", 10);
        return isNaN(t) ? -1 : t;
      }
      class Kz {
        constructor(t, e, i, r, s = !1) {
          (this._element = t),
            (this._checker = e),
            (this._ngZone = i),
            (this._document = r),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            s || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(t) {
          (this._enabled = t),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(t, this._startAnchor),
              this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        destroy() {
          const t = this._startAnchor,
            e = this._endAnchor;
          t &&
            (t.removeEventListener("focus", this.startAnchorListener),
            t.parentNode && t.parentNode.removeChild(t)),
            e &&
              (e.removeEventListener("focus", this.endAnchorListener),
              e.parentNode && e.parentNode.removeChild(e)),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusInitialElement(t)));
          });
        }
        focusFirstTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusFirstTabbableElement(t)));
          });
        }
        focusLastTabbableElementWhenReady(t) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusLastTabbableElement(t)));
          });
        }
        _getRegionBoundary(t) {
          let e = this._element.querySelectorAll(
            `[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`
          );
          for (let i = 0; i < e.length; i++)
            e[i].hasAttribute(`cdk-focus-${t}`)
              ? console.warn(
                  `Found use of deprecated attribute 'cdk-focus-${t}', use 'cdkFocusRegion${t}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  e[i]
                )
              : e[i].hasAttribute(`cdk-focus-region-${t}`) &&
                console.warn(
                  `Found use of deprecated attribute 'cdk-focus-region-${t}', use 'cdkFocusRegion${t}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  e[i]
                );
          return "start" == t
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(t) {
          const e = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]"
          );
          if (e) {
            if (
              (e.hasAttribute("cdk-focus-initial") &&
                console.warn(
                  "Found use of deprecated attribute 'cdk-focus-initial', use 'cdkFocusInitial' instead. The deprecated attribute will be removed in 8.0.0",
                  e
                ),
              !this._checker.isFocusable(e))
            ) {
              const i = this._getFirstTabbableElement(e);
              return null == i || i.focus(t), !!i;
            }
            return e.focus(t), !0;
          }
          return this.focusFirstTabbableElement(t);
        }
        focusFirstTabbableElement(t) {
          const e = this._getRegionBoundary("start");
          return e && e.focus(t), !!e;
        }
        focusLastTabbableElement(t) {
          const e = this._getRegionBoundary("end");
          return e && e.focus(t), !!e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          let e = t.children || t.childNodes;
          for (let i = 0; i < e.length; i++) {
            let r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _getLastTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
            return t;
          let e = t.children || t.childNodes;
          for (let i = e.length - 1; i >= 0; i--) {
            let r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _createAnchor() {
          const t = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, t),
            t.classList.add("cdk-visually-hidden"),
            t.classList.add("cdk-focus-trap-anchor"),
            t.setAttribute("aria-hidden", "true"),
            t
          );
        }
        _toggleAnchorTabIndex(t, e) {
          t ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
        }
        toggleAnchors(t) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(t, this._startAnchor),
            this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        _executeOnStable(t) {
          this._ngZone.isStable
            ? t()
            : this._ngZone.onStable.pipe(Oe(1)).subscribe(t);
        }
      }
      let lT = (() => {
        class n {
          constructor(e, i, r) {
            (this._checker = e), (this._ngZone = i), (this._document = r);
          }
          create(e, i = !1) {
            return new Kz(e, this._checker, this._ngZone, this._document, i);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(sT), m(H), m(j));
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n(m(sT), m(H), m(j));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      function cT(n) {
        return 0 === n.offsetX && 0 === n.offsetY;
      }
      function uT(n) {
        const t =
          (n.touches && n.touches[0]) ||
          (n.changedTouches && n.changedTouches[0]);
        return !(
          !t ||
          -1 !== t.identifier ||
          (null != t.radiusX && 1 !== t.radiusX) ||
          (null != t.radiusY && 1 !== t.radiusY)
        );
      }
      "undefined" != typeof Element && Element;
      const dT = new P("cdk-input-modality-detector-options"),
        e6 = { ignoreKeys: [18, 17, 224, 91, 16] },
        va = uc({ passive: !0, capture: !0 });
      let fT = (() => {
        class n {
          constructor(e, i, r, s) {
            (this._platform = e),
              (this._mostRecentTarget = null),
              (this._modality = new rt(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (o) => {
                var a, l;
                (null ===
                  (l =
                    null === (a = this._options) || void 0 === a
                      ? void 0
                      : a.ignoreKeys) || void 0 === l
                  ? void 0
                  : l.some((c) => c === o.keyCode)) ||
                  (this._modality.next("keyboard"),
                  (this._mostRecentTarget = ma(o)));
              }),
              (this._onMousedown = (o) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(cT(o) ? "keyboard" : "mouse"),
                  (this._mostRecentTarget = ma(o)));
              }),
              (this._onTouchstart = (o) => {
                uT(o)
                  ? this._modality.next("keyboard")
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next("touch"),
                    (this._mostRecentTarget = ma(o)));
              }),
              (this._options = Object.assign(Object.assign({}, e6), s)),
              (this.modalityDetected = this._modality.pipe(V_(1))),
              (this.modalityChanged = this.modalityDetected.pipe(fa())),
              e.isBrowser &&
                i.runOutsideAngular(() => {
                  r.addEventListener("keydown", this._onKeydown, va),
                    r.addEventListener("mousedown", this._onMousedown, va),
                    r.addEventListener("touchstart", this._onTouchstart, va);
                });
          }
          get mostRecentModality() {
            return this._modality.value;
          }
          ngOnDestroy() {
            !this._platform.isBrowser ||
              (document.removeEventListener("keydown", this._onKeydown, va),
              document.removeEventListener("mousedown", this._onMousedown, va),
              document.removeEventListener(
                "touchstart",
                this._onTouchstart,
                va
              ));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(je), m(H), m(j), m(dT, 8));
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n(m(je), m(H), m(j), m(dT, 8));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      const pT = new P("liveAnnouncerElement", {
          providedIn: "root",
          factory: function () {
            return null;
          },
        }),
        gT = new P("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      let dh = (() => {
        class n {
          constructor(e, i, r, s) {
            (this._ngZone = i),
              (this._defaultOptions = s),
              (this._document = r),
              (this._liveElement = e || this._createLiveElement());
          }
          announce(e, ...i) {
            const r = this._defaultOptions;
            let s, o;
            return (
              1 === i.length && "number" == typeof i[0]
                ? (o = i[0])
                : ([s, o] = i),
              this.clear(),
              clearTimeout(this._previousTimeout),
              s || (s = r && r.politeness ? r.politeness : "polite"),
              null == o && r && (o = r.duration),
              this._liveElement.setAttribute("aria-live", s),
              this._ngZone.runOutsideAngular(
                () =>
                  new Promise((a) => {
                    clearTimeout(this._previousTimeout),
                      (this._previousTimeout = setTimeout(() => {
                        (this._liveElement.textContent = e),
                          a(),
                          "number" == typeof o &&
                            (this._previousTimeout = setTimeout(
                              () => this.clear(),
                              o
                            ));
                      }, 100));
                  })
              )
            );
          }
          clear() {
            this._liveElement && (this._liveElement.textContent = "");
          }
          ngOnDestroy() {
            clearTimeout(this._previousTimeout),
              this._liveElement &&
                this._liveElement.parentNode &&
                (this._liveElement.parentNode.removeChild(this._liveElement),
                (this._liveElement = null));
          }
          _createLiveElement() {
            const e = "cdk-live-announcer-element",
              i = this._document.getElementsByClassName(e),
              r = this._document.createElement("div");
            for (let s = 0; s < i.length; s++)
              i[s].parentNode.removeChild(i[s]);
            return (
              r.classList.add(e),
              r.classList.add("cdk-visually-hidden"),
              r.setAttribute("aria-atomic", "true"),
              r.setAttribute("aria-live", "polite"),
              this._document.body.appendChild(r),
              r
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(pT, 8), m(H), m(j), m(gT, 8));
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n(m(pT, 8), m(H), m(j), m(gT, 8));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      const mT = new P("cdk-focus-monitor-default-options"),
        hh = uc({ passive: !0, capture: !0 });
      let Os = (() => {
        class n {
          constructor(e, i, r, s, o) {
            (this._ngZone = e),
              (this._platform = i),
              (this._inputModalityDetector = r),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._stopInputModalityDetector = new O()),
              (this._rootNodeFocusAndBlurListener = (a) => {
                const l = ma(a),
                  c = "focus" === a.type ? this._onFocus : this._onBlur;
                for (let u = l; u; u = u.parentElement) c.call(this, a, u);
              }),
              (this._document = s),
              (this._detectionMode =
                (null == o ? void 0 : o.detectionMode) || 0);
          }
          monitor(e, i = !1) {
            const r = vr(e);
            if (!this._platform.isBrowser || 1 !== r.nodeType) return J(null);
            const s =
                (function (n) {
                  if (
                    (function () {
                      if (null == A_) {
                        const n =
                          "undefined" != typeof document ? document.head : null;
                        A_ = !(!n || (!n.createShadowRoot && !n.attachShadow));
                      }
                      return A_;
                    })()
                  ) {
                    const t = n.getRootNode ? n.getRootNode() : null;
                    if (
                      "undefined" != typeof ShadowRoot &&
                      ShadowRoot &&
                      t instanceof ShadowRoot
                    )
                      return t;
                  }
                  return null;
                })(r) || this._getDocument(),
              o = this._elementInfo.get(r);
            if (o) return i && (o.checkChildren = !0), o.subject;
            const a = { checkChildren: i, subject: new O(), rootNode: s };
            return (
              this._elementInfo.set(r, a),
              this._registerGlobalListeners(a),
              a.subject
            );
          }
          stopMonitoring(e) {
            const i = vr(e),
              r = this._elementInfo.get(i);
            r &&
              (r.subject.complete(),
              this._setClasses(i),
              this._elementInfo.delete(i),
              this._removeGlobalListeners(r));
          }
          focusVia(e, i, r) {
            const s = vr(e);
            s === this._getDocument().activeElement
              ? this._getClosestElementsInfo(s).forEach(([a, l]) =>
                  this._originChanged(a, i, l)
                )
              : (this._setOrigin(i),
                "function" == typeof s.focus && s.focus(r));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _toggleClass(e, i, r) {
            r ? e.classList.add(i) : e.classList.remove(i);
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(e)
                  ? "touch"
                  : "program"
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : "program";
          }
          _shouldBeAttributedToTouch(e) {
            return (
              1 === this._detectionMode ||
              !!(null == e
                ? void 0
                : e.contains(this._inputModalityDetector._mostRecentTarget))
            );
          }
          _setClasses(e, i) {
            this._toggleClass(e, "cdk-focused", !!i),
              this._toggleClass(e, "cdk-touch-focused", "touch" === i),
              this._toggleClass(e, "cdk-keyboard-focused", "keyboard" === i),
              this._toggleClass(e, "cdk-mouse-focused", "mouse" === i),
              this._toggleClass(e, "cdk-program-focused", "program" === i);
          }
          _setOrigin(e, i = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                (this._originFromTouchInteraction = "touch" === e && i),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(e, i) {
            const r = this._elementInfo.get(i),
              s = ma(e);
            !r ||
              (!r.checkChildren && i !== s) ||
              this._originChanged(i, this._getFocusOrigin(s), r);
          }
          _onBlur(e, i) {
            const r = this._elementInfo.get(i);
            !r ||
              (r.checkChildren &&
                e.relatedTarget instanceof Node &&
                i.contains(e.relatedTarget)) ||
              (this._setClasses(i), this._emitOrigin(r.subject, null));
          }
          _emitOrigin(e, i) {
            this._ngZone.run(() => e.next(i));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const i = e.rootNode,
              r = this._rootNodeFocusListenerCount.get(i) || 0;
            r ||
              this._ngZone.runOutsideAngular(() => {
                i.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  hh
                ),
                  i.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    hh
                  );
              }),
              this._rootNodeFocusListenerCount.set(i, r + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    "focus",
                    this._windowFocusListener
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe(re(this._stopInputModalityDetector))
                  .subscribe((s) => {
                    this._setOrigin(s, !0);
                  }));
          }
          _removeGlobalListeners(e) {
            const i = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(i)) {
              const r = this._rootNodeFocusListenerCount.get(i);
              r > 1
                ? this._rootNodeFocusListenerCount.set(i, r - 1)
                : (i.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    hh
                  ),
                  i.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    hh
                  ),
                  this._rootNodeFocusListenerCount.delete(i));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                "focus",
                this._windowFocusListener
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(e, i, r) {
            this._setClasses(e, i),
              this._emitOrigin(r.subject, i),
              (this._lastFocusOrigin = i);
          }
          _getClosestElementsInfo(e) {
            const i = [];
            return (
              this._elementInfo.forEach((r, s) => {
                (s === e || (r.checkChildren && s.contains(e))) &&
                  i.push([s, r]);
              }),
              i
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(H), m(je), m(fT), m(j, 8), m(mT, 8));
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n(m(H), m(je), m(fT), m(j, 8), m(mT, 8));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      const _T = "cdk-high-contrast-black-on-white",
        yT = "cdk-high-contrast-white-on-black",
        $_ = "cdk-high-contrast-active";
      let bT = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e), (this._document = i);
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const e = this._document.createElement("div");
              (e.style.backgroundColor = "rgb(1,2,3)"),
                (e.style.position = "absolute"),
                this._document.body.appendChild(e);
              const i = this._document.defaultView || window,
                r = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
                s = ((r && r.backgroundColor) || "").replace(/ /g, "");
              switch ((this._document.body.removeChild(e), s)) {
                case "rgb(0,0,0)":
                  return 2;
                case "rgb(255,255,255)":
                  return 1;
              }
              return 0;
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const e = this._document.body.classList;
                e.remove($_),
                  e.remove(_T),
                  e.remove(yT),
                  (this._hasCheckedHighContrastMode = !0);
                const i = this.getHighContrastMode();
                1 === i
                  ? (e.add($_), e.add(_T))
                  : 2 === i && (e.add($_), e.add(yT));
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(je), m(j));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(je), m(j));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        n6 = (() => {
          class n {
            constructor(e) {
              e._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(bT));
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[lc, ZS]] })),
            n
          );
        })();
      const vT = new Vr("12.2.5");
      class wT {}
      const wr = "*";
      function ai(n, t) {
        return { type: 7, name: n, definitions: t, options: {} };
      }
      function Ut(n, t = null) {
        return { type: 4, styles: t, timings: n };
      }
      function CT(n, t = null) {
        return { type: 2, steps: n, options: t };
      }
      function we(n) {
        return { type: 6, styles: n, offset: null };
      }
      function gt(n, t, e) {
        return { type: 0, name: n, styles: t, options: e };
      }
      function gc(n) {
        return { type: 5, steps: n };
      }
      function St(n, t, e = null) {
        return { type: 1, expr: n, animation: t, options: e };
      }
      function DT(n = null) {
        return { type: 9, options: n };
      }
      function ET(n, t, e = null) {
        return { type: 11, selector: n, animation: t, options: e };
      }
      function MT(n) {
        Promise.resolve(null).then(n);
      }
      class wa {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          MT(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this._started = !1;
        }
        setPosition(t) {
          this._position = this.totalTime ? t * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class ST {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            i = 0,
            r = 0;
          const s = this.players.length;
          0 == s
            ? MT(() => this._onFinish())
            : this.players.forEach((o) => {
                o.onDone(() => {
                  ++e == s && this._onFinish();
                }),
                  o.onDestroy(() => {
                    ++i == s && this._onDestroy();
                  }),
                  o.onStart(() => {
                    ++r == s && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (o, a) => Math.max(o, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((t) => t()),
            (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((i) => {
            const r = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
            i.setPosition(r);
          });
        }
        getPosition() {
          const t = this.players.reduce(
            (e, i) => (null === e || i.totalTime > e.totalTime ? i : e),
            null
          );
          return null != t ? t.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      function TT() {
        return "undefined" != typeof window && void 0 !== window.document;
      }
      function U_() {
        return (
          "undefined" != typeof process &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function Gr(n) {
        switch (n.length) {
          case 0:
            return new wa();
          case 1:
            return n[0];
          default:
            return new ST(n);
        }
      }
      function AT(n, t, e, i, r = {}, s = {}) {
        const o = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (i.forEach((u) => {
            const d = u.offset,
              h = d == l,
              p = (h && c) || {};
            Object.keys(u).forEach((g) => {
              let _ = g,
                y = u[g];
              if ("offset" !== g)
                switch (((_ = t.normalizePropertyName(_, o)), y)) {
                  case "!":
                    y = r[g];
                    break;
                  case wr:
                    y = s[g];
                    break;
                  default:
                    y = t.normalizeStyleValue(g, _, y, o);
                }
              p[_] = y;
            }),
              h || a.push(p),
              (c = p),
              (l = d);
          }),
          o.length)
        ) {
          const u = "\n - ";
          throw new Error(
            `Unable to animate due to the following errors:${u}${o.join(u)}`
          );
        }
        return a;
      }
      function z_(n, t, e, i) {
        switch (t) {
          case "start":
            n.onStart(() => i(e && G_(e, "start", n)));
            break;
          case "done":
            n.onDone(() => i(e && G_(e, "done", n)));
            break;
          case "destroy":
            n.onDestroy(() => i(e && G_(e, "destroy", n)));
        }
      }
      function G_(n, t, e) {
        const i = e.totalTime,
          s = W_(
            n.element,
            n.triggerName,
            n.fromState,
            n.toState,
            t || n.phaseName,
            null == i ? n.totalTime : i,
            !!e.disabled
          ),
          o = n._data;
        return null != o && (s._data = o), s;
      }
      function W_(n, t, e, i, r = "", s = 0, o) {
        return {
          element: n,
          triggerName: t,
          fromState: e,
          toState: i,
          phaseName: r,
          totalTime: s,
          disabled: !!o,
        };
      }
      function $n(n, t, e) {
        let i;
        return (
          n instanceof Map
            ? ((i = n.get(t)), i || n.set(t, (i = e)))
            : ((i = n[t]), i || (i = n[t] = e)),
          i
        );
      }
      function kT(n) {
        const t = n.indexOf(":");
        return [n.substring(1, t), n.substr(t + 1)];
      }
      let q_ = (n, t) => !1,
        Y_ = (n, t) => !1,
        NT = (n, t, e) => [];
      const RT = U_();
      (RT || "undefined" != typeof Element) &&
        ((q_ = TT()
          ? (n, t) => {
              for (; t && t !== document.documentElement; ) {
                if (t === n) return !0;
                t = t.parentNode || t.host;
              }
              return !1;
            }
          : (n, t) => n.contains(t)),
        (Y_ = (() => {
          if (RT || Element.prototype.matches) return (n, t) => n.matches(t);
          {
            const n = Element.prototype,
              t =
                n.matchesSelector ||
                n.mozMatchesSelector ||
                n.msMatchesSelector ||
                n.oMatchesSelector ||
                n.webkitMatchesSelector;
            return t ? (e, i) => t.apply(e, [i]) : Y_;
          }
        })()),
        (NT = (n, t, e) => {
          let i = [];
          if (e) {
            const r = n.querySelectorAll(t);
            for (let s = 0; s < r.length; s++) i.push(r[s]);
          } else {
            const r = n.querySelector(t);
            r && i.push(r);
          }
          return i;
        }));
      let Ps = null,
        IT = !1;
      function K_(n) {
        Ps ||
          ((Ps = ("undefined" != typeof document ? document.body : null) || {}),
          (IT = !!Ps.style && "WebkitAppearance" in Ps.style));
        let t = !0;
        return (
          Ps.style &&
            !(function (n) {
              return "ebkit" == n.substring(1, 6);
            })(n) &&
            ((t = n in Ps.style),
            !t &&
              IT &&
              (t =
                "Webkit" + n.charAt(0).toUpperCase() + n.substr(1) in
                Ps.style)),
          t
        );
      }
      const J_ = Y_,
        Q_ = q_,
        X_ = NT;
      function xT(n) {
        const t = {};
        return (
          Object.keys(n).forEach((e) => {
            const i = e.replace(/([a-z])([A-Z])/g, "$1-$2");
            t[i] = n[e];
          }),
          t
        );
      }
      let OT = (() => {
        class n {
          validateStyleProperty(e) {
            return K_(e);
          }
          matchesElement(e, i) {
            return J_(e, i);
          }
          containsElement(e, i) {
            return Q_(e, i);
          }
          query(e, i, r) {
            return X_(e, i, r);
          }
          computeStyle(e, i, r) {
            return r || "";
          }
          animate(e, i, r, s, o, a = [], l) {
            return new wa(r, s);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class fh {}
      fh.NOOP = new OT();
      const Z_ = "ng-enter",
        ph = "ng-leave",
        gh = "ng-trigger",
        mh = ".ng-trigger",
        FT = "ng-animating",
        ey = ".ng-animating";
      function Fs(n) {
        if ("number" == typeof n) return n;
        const t = n.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : ty(parseFloat(t[1]), t[2]);
      }
      function ty(n, t) {
        switch (t) {
          case "s":
            return 1e3 * n;
          default:
            return n;
        }
      }
      function _h(n, t, e) {
        return n.hasOwnProperty("duration")
          ? n
          : (function (n, t, e) {
              let r,
                s = 0,
                o = "";
              if ("string" == typeof n) {
                const a = n.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return (
                    t.push(`The provided timing value "${n}" is invalid.`),
                    { duration: 0, delay: 0, easing: "" }
                  );
                r = ty(parseFloat(a[1]), a[2]);
                const l = a[3];
                null != l && (s = ty(parseFloat(l), a[4]));
                const c = a[5];
                c && (o = c);
              } else r = n;
              if (!e) {
                let a = !1,
                  l = t.length;
                r < 0 &&
                  (t.push(
                    "Duration values below 0 are not allowed for this animation step."
                  ),
                  (a = !0)),
                  s < 0 &&
                    (t.push(
                      "Delay values below 0 are not allowed for this animation step."
                    ),
                    (a = !0)),
                  a &&
                    t.splice(
                      l,
                      0,
                      `The provided timing value "${n}" is invalid.`
                    );
              }
              return { duration: r, delay: s, easing: o };
            })(n, t, e);
      }
      function Ca(n, t = {}) {
        return (
          Object.keys(n).forEach((e) => {
            t[e] = n[e];
          }),
          t
        );
      }
      function Wr(n, t, e = {}) {
        if (t) for (let i in n) e[i] = n[i];
        else Ca(n, e);
        return e;
      }
      function VT(n, t, e) {
        return e ? t + ":" + e + ";" : "";
      }
      function BT(n) {
        let t = "";
        for (let e = 0; e < n.style.length; e++) {
          const i = n.style.item(e);
          t += VT(0, i, n.style.getPropertyValue(i));
        }
        for (const e in n.style)
          n.style.hasOwnProperty(e) &&
            !e.startsWith("_") &&
            (t += VT(0, d6(e), n.style[e]));
        n.setAttribute("style", t);
      }
      function Zi(n, t, e) {
        n.style &&
          (Object.keys(t).forEach((i) => {
            const r = iy(i);
            e && !e.hasOwnProperty(i) && (e[i] = n.style[r]),
              (n.style[r] = t[i]);
          }),
          U_() && BT(n));
      }
      function Ls(n, t) {
        n.style &&
          (Object.keys(t).forEach((e) => {
            const i = iy(e);
            n.style[i] = "";
          }),
          U_() && BT(n));
      }
      function mc(n) {
        return Array.isArray(n) ? (1 == n.length ? n[0] : CT(n)) : n;
      }
      const ny = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function HT(n) {
        let t = [];
        if ("string" == typeof n) {
          let e;
          for (; (e = ny.exec(n)); ) t.push(e[1]);
          ny.lastIndex = 0;
        }
        return t;
      }
      function yh(n, t, e) {
        const i = n.toString(),
          r = i.replace(ny, (s, o) => {
            let a = t[o];
            return (
              t.hasOwnProperty(o) ||
                (e.push(`Please provide a value for the animation param ${o}`),
                (a = "")),
              a.toString()
            );
          });
        return r == i ? n : r;
      }
      function bh(n) {
        const t = [];
        let e = n.next();
        for (; !e.done; ) t.push(e.value), (e = n.next());
        return t;
      }
      const u6 = /-+([a-z0-9])/g;
      function iy(n) {
        return n.replace(u6, (...t) => t[1].toUpperCase());
      }
      function d6(n) {
        return n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
      }
      function $T(n, t) {
        return 0 === n || 0 === t;
      }
      function jT(n, t, e) {
        const i = Object.keys(e);
        if (i.length && t.length) {
          let s = t[0],
            o = [];
          if (
            (i.forEach((a) => {
              s.hasOwnProperty(a) || o.push(a), (s[a] = e[a]);
            }),
            o.length)
          )
            for (var r = 1; r < t.length; r++) {
              let a = t[r];
              o.forEach(function (l) {
                a[l] = ry(n, l);
              });
            }
        }
        return t;
      }
      function jn(n, t, e) {
        switch (t.type) {
          case 7:
            return n.visitTrigger(t, e);
          case 0:
            return n.visitState(t, e);
          case 1:
            return n.visitTransition(t, e);
          case 2:
            return n.visitSequence(t, e);
          case 3:
            return n.visitGroup(t, e);
          case 4:
            return n.visitAnimate(t, e);
          case 5:
            return n.visitKeyframes(t, e);
          case 6:
            return n.visitStyle(t, e);
          case 8:
            return n.visitReference(t, e);
          case 9:
            return n.visitAnimateChild(t, e);
          case 10:
            return n.visitAnimateRef(t, e);
          case 11:
            return n.visitQuery(t, e);
          case 12:
            return n.visitStagger(t, e);
          default:
            throw new Error(
              `Unable to resolve animation metadata node #${t.type}`
            );
        }
      }
      function ry(n, t) {
        return window.getComputedStyle(n)[t];
      }
      function h6(n, t) {
        const e = [];
        return (
          "string" == typeof n
            ? n.split(/\s*,\s*/).forEach((i) =>
                (function (n, t, e) {
                  if (":" == n[0]) {
                    const l = (function (n, t) {
                      switch (n) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, i) => parseFloat(i) > parseFloat(e);
                        case ":decrement":
                          return (e, i) => parseFloat(i) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              `The transition alias value "${n}" is not supported`
                            ),
                            "* => *"
                          );
                      }
                    })(n, e);
                    if ("function" == typeof l) return void t.push(l);
                    n = l;
                  }
                  const i = n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      e.push(
                        `The provided transition expression "${n}" is not supported`
                      ),
                      t
                    );
                  const r = i[1],
                    s = i[2],
                    o = i[3];
                  t.push(UT(r, o));
                  "<" == s[0] && !("*" == r && "*" == o) && t.push(UT(o, r));
                })(i, e, t)
              )
            : e.push(n),
          e
        );
      }
      const wh = new Set(["true", "1"]),
        Ch = new Set(["false", "0"]);
      function UT(n, t) {
        const e = wh.has(n) || Ch.has(n),
          i = wh.has(t) || Ch.has(t);
        return (r, s) => {
          let o = "*" == n || n == r,
            a = "*" == t || t == s;
          return (
            !o && e && "boolean" == typeof r && (o = r ? wh.has(n) : Ch.has(n)),
            !a && i && "boolean" == typeof s && (a = s ? wh.has(t) : Ch.has(t)),
            o && a
          );
        };
      }
      const g6 = new RegExp("s*:selfs*,?", "g");
      function sy(n, t, e) {
        return new m6(n).build(t, e);
      }
      class m6 {
        constructor(t) {
          this._driver = t;
        }
        build(t, e) {
          const i = new b6(e);
          return this._resetContextStyleTimingState(i), jn(this, mc(t), i);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ""),
            (t.collectedStyles = {}),
            (t.collectedStyles[""] = {}),
            (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let i = (e.queryCount = 0),
            r = (e.depCount = 0);
          const s = [],
            o = [];
          return (
            "@" == t.name.charAt(0) &&
              e.errors.push(
                "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"
              ),
            t.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(e), 0 == a.type)) {
                const l = a,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((u) => {
                    (l.name = u), s.push(this.visitState(l, e));
                  }),
                  (l.name = c);
              } else if (1 == a.type) {
                const l = this.visitTransition(a, e);
                (i += l.queryCount), (r += l.depCount), o.push(l);
              } else
                e.errors.push(
                  "only state() and transition() definitions can sit inside of a trigger()"
                );
            }),
            {
              type: 7,
              name: t.name,
              states: s,
              transitions: o,
              queryCount: i,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(t, e) {
          const i = this.visitStyle(t.styles, e),
            r = (t.options && t.options.params) || null;
          if (i.containsDynamicStyles) {
            const s = new Set(),
              o = r || {};
            if (
              (i.styles.forEach((a) => {
                if (Dh(a)) {
                  const l = a;
                  Object.keys(l).forEach((c) => {
                    HT(l[c]).forEach((u) => {
                      o.hasOwnProperty(u) || s.add(u);
                    });
                  });
                }
              }),
              s.size)
            ) {
              const a = bh(s.values());
              e.errors.push(
                `state("${
                  t.name
                }", ...) must define default values for all the following style substitutions: ${a.join(
                  ", "
                )}`
              );
            }
          }
          return {
            type: 0,
            name: t.name,
            style: i,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const i = jn(this, mc(t.animation), e);
          return {
            type: 1,
            matchers: h6(t.expr, e.errors),
            animation: i,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: Vs(t.options),
          };
        }
        visitSequence(t, e) {
          return {
            type: 2,
            steps: t.steps.map((i) => jn(this, i, e)),
            options: Vs(t.options),
          };
        }
        visitGroup(t, e) {
          const i = e.currentTime;
          let r = 0;
          const s = t.steps.map((o) => {
            e.currentTime = i;
            const a = jn(this, o, e);
            return (r = Math.max(r, e.currentTime)), a;
          });
          return (
            (e.currentTime = r), { type: 3, steps: s, options: Vs(t.options) }
          );
        }
        visitAnimate(t, e) {
          const i = (function (n, t) {
            let e = null;
            if (n.hasOwnProperty("duration")) e = n;
            else if ("number" == typeof n) return oy(_h(n, t).duration, 0, "");
            const i = n;
            if (
              i
                .split(/\s+/)
                .some((s) => "{" == s.charAt(0) && "{" == s.charAt(1))
            ) {
              const s = oy(0, 0, "");
              return (s.dynamic = !0), (s.strValue = i), s;
            }
            return (e = e || _h(i, t)), oy(e.duration, e.delay, e.easing);
          })(t.timings, e.errors);
          e.currentAnimateTimings = i;
          let r,
            s = t.styles ? t.styles : we({});
          if (5 == s.type) r = this.visitKeyframes(s, e);
          else {
            let o = t.styles,
              a = !1;
            if (!o) {
              a = !0;
              const c = {};
              i.easing && (c.easing = i.easing), (o = we(c));
            }
            e.currentTime += i.duration + i.delay;
            const l = this.visitStyle(o, e);
            (l.isEmptyStep = a), (r = l);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: i, style: r, options: null }
          );
        }
        visitStyle(t, e) {
          const i = this._makeStyleAst(t, e);
          return this._validateStyleAst(i, e), i;
        }
        _makeStyleAst(t, e) {
          const i = [];
          Array.isArray(t.styles)
            ? t.styles.forEach((o) => {
                "string" == typeof o
                  ? o == wr
                    ? i.push(o)
                    : e.errors.push(
                        `The provided style string value ${o} is not allowed.`
                      )
                  : i.push(o);
              })
            : i.push(t.styles);
          let r = !1,
            s = null;
          return (
            i.forEach((o) => {
              if (Dh(o)) {
                const a = o,
                  l = a.easing;
                if ((l && ((s = l), delete a.easing), !r))
                  for (let c in a)
                    if (a[c].toString().indexOf("{{") >= 0) {
                      r = !0;
                      break;
                    }
              }
            }),
            {
              type: 6,
              styles: i,
              easing: s,
              offset: t.offset,
              containsDynamicStyles: r,
              options: null,
            }
          );
        }
        _validateStyleAst(t, e) {
          const i = e.currentAnimateTimings;
          let r = e.currentTime,
            s = e.currentTime;
          i && s > 0 && (s -= i.duration + i.delay),
            t.styles.forEach((o) => {
              "string" != typeof o &&
                Object.keys(o).forEach((a) => {
                  if (!this._driver.validateStyleProperty(a))
                    return void e.errors.push(
                      `The provided animation property "${a}" is not a supported CSS property for animations`
                    );
                  const l = e.collectedStyles[e.currentQuerySelector],
                    c = l[a];
                  let u = !0;
                  c &&
                    (s != r &&
                      s >= c.startTime &&
                      r <= c.endTime &&
                      (e.errors.push(
                        `The CSS property "${a}" that exists between the times of "${c.startTime}ms" and "${c.endTime}ms" is also being animated in a parallel animation between the times of "${s}ms" and "${r}ms"`
                      ),
                      (u = !1)),
                    (s = c.startTime)),
                    u && (l[a] = { startTime: s, endTime: r }),
                    e.options &&
                      (function (n, t, e) {
                        const i = t.params || {},
                          r = HT(n);
                        r.length &&
                          r.forEach((s) => {
                            i.hasOwnProperty(s) ||
                              e.push(
                                `Unable to resolve the local animation param ${s} in the given list of values`
                              );
                          });
                      })(o[a], e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const i = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                "keyframes() must be placed inside of a call to animate()"
              ),
              i
            );
          let s = 0;
          const o = [];
          let a = !1,
            l = !1,
            c = 0;
          const u = t.steps.map((E) => {
            const C = this._makeStyleAst(E, e);
            let N =
                null != C.offset
                  ? C.offset
                  : (function (n) {
                      if ("string" == typeof n) return null;
                      let t = null;
                      if (Array.isArray(n))
                        n.forEach((e) => {
                          if (Dh(e) && e.hasOwnProperty("offset")) {
                            const i = e;
                            (t = parseFloat(i.offset)), delete i.offset;
                          }
                        });
                      else if (Dh(n) && n.hasOwnProperty("offset")) {
                        const e = n;
                        (t = parseFloat(e.offset)), delete e.offset;
                      }
                      return t;
                    })(C.styles),
              x = 0;
            return (
              null != N && (s++, (x = C.offset = N)),
              (l = l || x < 0 || x > 1),
              (a = a || x < c),
              (c = x),
              o.push(x),
              C
            );
          });
          l &&
            e.errors.push(
              "Please ensure that all keyframe offsets are between 0 and 1"
            ),
            a &&
              e.errors.push(
                "Please ensure that all keyframe offsets are in order"
              );
          const d = t.steps.length;
          let h = 0;
          s > 0 && s < d
            ? e.errors.push(
                "Not all style() steps within the declared keyframes() contain offsets"
              )
            : 0 == s && (h = 1 / (d - 1));
          const p = d - 1,
            g = e.currentTime,
            _ = e.currentAnimateTimings,
            y = _.duration;
          return (
            u.forEach((E, C) => {
              const N = h > 0 ? (C == p ? 1 : h * C) : o[C],
                x = N * y;
              (e.currentTime = g + _.delay + x),
                (_.duration = x),
                this._validateStyleAst(E, e),
                (E.offset = N),
                i.styles.push(E);
            }),
            i
          );
        }
        visitReference(t, e) {
          return {
            type: 8,
            animation: jn(this, mc(t.animation), e),
            options: Vs(t.options),
          };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: Vs(t.options) };
        }
        visitAnimateRef(t, e) {
          return {
            type: 10,
            animation: this.visitReference(t.animation, e),
            options: Vs(t.options),
          };
        }
        visitQuery(t, e) {
          const i = e.currentQuerySelector,
            r = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [s, o] = (function (n) {
            const t = !!n.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              t && (n = n.replace(g6, "")),
              [
                (n = n
                  .replace(/@\*/g, mh)
                  .replace(/@\w+/g, (e) => mh + "-" + e.substr(1))
                  .replace(/:animating/g, ey)),
                t,
              ]
            );
          })(t.selector);
          (e.currentQuerySelector = i.length ? i + " " + s : s),
            $n(e.collectedStyles, e.currentQuerySelector, {});
          const a = jn(this, mc(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = i),
            {
              type: 11,
              selector: s,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: o,
              animation: a,
              originalSelector: t.selector,
              options: Vs(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery ||
            e.errors.push("stagger() can only be used inside of query()");
          const i =
            "full" === t.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : _h(t.timings, e.errors, !0);
          return {
            type: 12,
            animation: jn(this, mc(t.animation), e),
            timings: i,
            options: null,
          };
        }
      }
      class b6 {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function Dh(n) {
        return !Array.isArray(n) && "object" == typeof n;
      }
      function Vs(n) {
        return (
          n
            ? (n = Ca(n)).params &&
              (n.params = (function (n) {
                return n ? Ca(n) : null;
              })(n.params))
            : (n = {}),
          n
        );
      }
      function oy(n, t, e) {
        return { duration: n, delay: t, easing: e };
      }
      function ay(n, t, e, i, r, s, o = null, a = !1) {
        return {
          type: 1,
          element: n,
          keyframes: t,
          preStyleProps: e,
          postStyleProps: i,
          duration: r,
          delay: s,
          totalTime: r + s,
          easing: o,
          subTimeline: a,
        };
      }
      class Eh {
        constructor() {
          this._map = new Map();
        }
        consume(t) {
          let e = this._map.get(t);
          return e ? this._map.delete(t) : (e = []), e;
        }
        append(t, e) {
          let i = this._map.get(t);
          i || this._map.set(t, (i = [])), i.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const E6 = new RegExp(":enter", "g"),
        S6 = new RegExp(":leave", "g");
      function ly(n, t, e, i, r, s = {}, o = {}, a, l, c = []) {
        return new T6().buildKeyframes(n, t, e, i, r, s, o, a, l, c);
      }
      class T6 {
        buildKeyframes(t, e, i, r, s, o, a, l, c, u = []) {
          c = c || new Eh();
          const d = new cy(t, e, c, r, s, u, []);
          (d.options = l),
            d.currentTimeline.setStyles([o], null, d.errors, l),
            jn(this, i, d);
          const h = d.timelines.filter((p) => p.containsAnimation());
          if (h.length && Object.keys(a).length) {
            const p = h[h.length - 1];
            p.allowOnlyTimelineStyles() || p.setStyles([a], null, d.errors, l);
          }
          return h.length
            ? h.map((p) => p.buildKeyframes())
            : [ay(e, [], [], [], 0, 0, "", !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const i = e.subInstructions.consume(e.element);
          if (i) {
            const r = e.createSubContext(t.options),
              s = e.currentTimeline.currentTime,
              o = this._visitSubInstructions(i, r, r.options);
            s != o && e.transformIntoNewTimeline(o);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const i = e.createSubContext(t.options);
          i.transformIntoNewTimeline(),
            this.visitReference(t.animation, i),
            e.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _visitSubInstructions(t, e, i) {
          let s = e.currentTimeline.currentTime;
          const o = null != i.duration ? Fs(i.duration) : null,
            a = null != i.delay ? Fs(i.delay) : null;
          return (
            0 !== o &&
              t.forEach((l) => {
                const c = e.appendInstructionToTimeline(l, o, a);
                s = Math.max(s, c.duration + c.delay);
              }),
            s
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0),
            jn(this, t.animation, e),
            (e.previousNode = t);
        }
        visitSequence(t, e) {
          const i = e.subContextCount;
          let r = e;
          const s = t.options;
          if (
            s &&
            (s.params || s.delay) &&
            ((r = e.createSubContext(s)),
            r.transformIntoNewTimeline(),
            null != s.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = Mh));
            const o = Fs(s.delay);
            r.delayNextStep(o);
          }
          t.steps.length &&
            (t.steps.forEach((o) => jn(this, o, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > i && r.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const i = [];
          let r = e.currentTimeline.currentTime;
          const s = t.options && t.options.delay ? Fs(t.options.delay) : 0;
          t.steps.forEach((o) => {
            const a = e.createSubContext(t.options);
            s && a.delayNextStep(s),
              jn(this, o, a),
              (r = Math.max(r, a.currentTimeline.currentTime)),
              i.push(a.currentTimeline);
          }),
            i.forEach((o) => e.currentTimeline.mergeTimelineCollectedStyles(o)),
            e.transformIntoNewTimeline(r),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const i = t.strValue;
            return _h(e.params ? yh(i, e.params, e.errors) : i, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const i = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            r = e.currentTimeline;
          i.delay && (e.incrementTime(i.delay), r.snapshotCurrentStyles());
          const s = t.style;
          5 == s.type
            ? this.visitKeyframes(s, e)
            : (e.incrementTime(i.duration),
              this.visitStyle(s, e),
              r.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const i = e.currentTimeline,
            r = e.currentAnimateTimings;
          !r && i.getCurrentStyleProperties().length && i.forwardFrame();
          const s = (r && r.easing) || t.easing;
          t.isEmptyStep
            ? i.applyEmptyStep(s)
            : i.setStyles(t.styles, s, e.errors, e.options),
            (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const i = e.currentAnimateTimings,
            r = e.currentTimeline.duration,
            s = i.duration,
            a = e.createSubContext().currentTimeline;
          (a.easing = i.easing),
            t.styles.forEach((l) => {
              a.forwardTime((l.offset || 0) * s),
                a.setStyles(l.styles, l.easing, e.errors, e.options),
                a.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(a),
            e.transformIntoNewTimeline(r + s),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const i = e.currentTimeline.currentTime,
            r = t.options || {},
            s = r.delay ? Fs(r.delay) : 0;
          s &&
            (6 === e.previousNode.type ||
              (0 == i &&
                e.currentTimeline.getCurrentStyleProperties().length)) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = Mh));
          let o = i;
          const a = e.invokeQuery(
            t.selector,
            t.originalSelector,
            t.limit,
            t.includeSelf,
            !!r.optional,
            e.errors
          );
          e.currentQueryTotal = a.length;
          let l = null;
          a.forEach((c, u) => {
            e.currentQueryIndex = u;
            const d = e.createSubContext(t.options, c);
            s && d.delayNextStep(s),
              c === e.element && (l = d.currentTimeline),
              jn(this, t.animation, d),
              d.currentTimeline.applyStylesToKeyframe(),
              (o = Math.max(o, d.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(o),
            l &&
              (e.currentTimeline.mergeTimelineCollectedStyles(l),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const i = e.parentContext,
            r = e.currentTimeline,
            s = t.timings,
            o = Math.abs(s.duration),
            a = o * (e.currentQueryTotal - 1);
          let l = o * e.currentQueryIndex;
          switch (s.duration < 0 ? "reverse" : s.easing) {
            case "reverse":
              l = a - l;
              break;
            case "full":
              l = i.currentStaggerTime;
          }
          const u = e.currentTimeline;
          l && u.delayNextStep(l);
          const d = u.currentTime;
          jn(this, t.animation, e),
            (e.previousNode = t),
            (i.currentStaggerTime =
              r.currentTime - d + (r.startTime - i.currentTimeline.startTime));
        }
      }
      const Mh = {};
      class cy {
        constructor(t, e, i, r, s, o, a, l) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = i),
            (this._enterClassName = r),
            (this._leaveClassName = s),
            (this.errors = o),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Mh),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new Sh(this._driver, e, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const i = t;
          let r = this.options;
          null != i.duration && (r.duration = Fs(i.duration)),
            null != i.delay && (r.delay = Fs(i.delay));
          const s = i.params;
          if (s) {
            let o = r.params;
            o || (o = this.options.params = {}),
              Object.keys(s).forEach((a) => {
                (!e || !o.hasOwnProperty(a)) &&
                  (o[a] = yh(s[a], o, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const i = (t.params = {});
              Object.keys(e).forEach((r) => {
                i[r] = e[r];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, i) {
          const r = e || this.element,
            s = new cy(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, i || 0)
            );
          return (
            (s.previousNode = this.previousNode),
            (s.currentAnimateTimings = this.currentAnimateTimings),
            (s.options = this._copyOptions()),
            s.updateOptions(t),
            (s.currentQueryIndex = this.currentQueryIndex),
            (s.currentQueryTotal = this.currentQueryTotal),
            (s.parentContext = this),
            this.subContextCount++,
            s
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = Mh),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, i) {
          const r = {
              duration: null != e ? e : t.duration,
              delay:
                this.currentTimeline.currentTime +
                (null != i ? i : 0) +
                t.delay,
              easing: "",
            },
            s = new A6(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              r,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(s), r;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, i, r, s, o) {
          let a = [];
          if ((r && a.push(this.element), t.length > 0)) {
            t = (t = t.replace(E6, "." + this._enterClassName)).replace(
              S6,
              "." + this._leaveClassName
            );
            let c = this._driver.query(this.element, t, 1 != i);
            0 !== i &&
              (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)),
              a.push(...c);
          }
          return (
            !s &&
              0 == a.length &&
              o.push(
                `\`query("${e}")\` returned zero elements. (Use \`query("${e}", { optional: true })\` if you wish to allow this.)`
              ),
            a
          );
        }
      }
      class Sh {
        constructor(t, e, i, r) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e =
            1 == this._keyframes.size &&
            Object.keys(this._pendingStyles).length;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t),
              e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new Sh(
              this._driver,
              t,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(),
            (this.duration = t),
            this._loadKeyframe();
        }
        _updateStyle(t, e) {
          (this._localTimelineStyles[t] = e),
            (this._globalTimelineStyles[t] = e),
            (this._styleSummary[t] = { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && (this._previousKeyframe.easing = t),
            Object.keys(this._globalTimelineStyles).forEach((e) => {
              (this._backFill[e] = this._globalTimelineStyles[e] || wr),
                (this._currentKeyframe[e] = wr);
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(t, e, i, r) {
          e && (this._previousKeyframe.easing = e);
          const s = (r && r.params) || {},
            o = (function (n, t) {
              const e = {};
              let i;
              return (
                n.forEach((r) => {
                  "*" === r
                    ? ((i = i || Object.keys(t)),
                      i.forEach((s) => {
                        e[s] = wr;
                      }))
                    : Wr(r, !1, e);
                }),
                e
              );
            })(t, this._globalTimelineStyles);
          Object.keys(o).forEach((a) => {
            const l = yh(o[a], s, i);
            (this._pendingStyles[a] = l),
              this._localTimelineStyles.hasOwnProperty(a) ||
                (this._backFill[a] = this._globalTimelineStyles.hasOwnProperty(
                  a
                )
                  ? this._globalTimelineStyles[a]
                  : wr),
              this._updateStyle(a, l);
          });
        }
        applyStylesToKeyframe() {
          const t = this._pendingStyles,
            e = Object.keys(t);
          0 != e.length &&
            ((this._pendingStyles = {}),
            e.forEach((i) => {
              this._currentKeyframe[i] = t[i];
            }),
            Object.keys(this._localTimelineStyles).forEach((i) => {
              this._currentKeyframe.hasOwnProperty(i) ||
                (this._currentKeyframe[i] = this._localTimelineStyles[i]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((t) => {
            const e = this._localTimelineStyles[t];
            (this._pendingStyles[t] = e), this._updateStyle(t, e);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          Object.keys(t._styleSummary).forEach((e) => {
            const i = this._styleSummary[e],
              r = t._styleSummary[e];
            (!i || r.time > i.time) && this._updateStyle(e, r.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((a, l) => {
            const c = Wr(a, !0);
            Object.keys(c).forEach((u) => {
              const d = c[u];
              "!" == d ? t.add(u) : d == wr && e.add(u);
            }),
              i || (c.offset = l / this.duration),
              r.push(c);
          });
          const s = t.size ? bh(t.values()) : [],
            o = e.size ? bh(e.values()) : [];
          if (i) {
            const a = r[0],
              l = Ca(a);
            (a.offset = 0), (l.offset = 1), (r = [a, l]);
          }
          return ay(
            this.element,
            r,
            s,
            o,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class A6 extends Sh {
        constructor(t, e, i, r, s, o, a = !1) {
          super(t, e, o.delay),
            (this.keyframes = i),
            (this.preStyleProps = r),
            (this.postStyleProps = s),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: o.duration,
              delay: o.delay,
              easing: o.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: i, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const s = [],
              o = i + e,
              a = e / o,
              l = Wr(t[0], !1);
            (l.offset = 0), s.push(l);
            const c = Wr(t[0], !1);
            (c.offset = WT(a)), s.push(c);
            const u = t.length - 1;
            for (let d = 1; d <= u; d++) {
              let h = Wr(t[d], !1);
              (h.offset = WT((e + h.offset * i) / o)), s.push(h);
            }
            (i = o), (e = 0), (r = ""), (t = s);
          }
          return ay(
            this.element,
            t,
            this.preStyleProps,
            this.postStyleProps,
            i,
            e,
            r,
            !0
          );
        }
      }
      function WT(n, t = 3) {
        const e = Math.pow(10, t - 1);
        return Math.round(n * e) / e;
      }
      class uy {}
      class N6 extends uy {
        normalizePropertyName(t, e) {
          return iy(t);
        }
        normalizeStyleValue(t, e, i, r) {
          let s = "";
          const o = i.toString().trim();
          if (R6[e] && 0 !== i && "0" !== i)
            if ("number" == typeof i) s = "px";
            else {
              const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                r.push(`Please provide a CSS unit value for ${t}:${i}`);
            }
          return o + s;
        }
      }
      const R6 = (() =>
        (function (n) {
          const t = {};
          return n.forEach((e) => (t[e] = !0)), t;
        })(
          "width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(
            ","
          )
        ))();
      function qT(n, t, e, i, r, s, o, a, l, c, u, d, h) {
        return {
          type: 0,
          element: n,
          triggerName: t,
          isRemovalTransition: r,
          fromState: e,
          fromStyles: s,
          toState: i,
          toStyles: o,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: u,
          totalTime: d,
          errors: h,
        };
      }
      const dy = {};
      class YT {
        constructor(t, e, i) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = i);
        }
        match(t, e, i, r) {
          return (function (n, t, e, i, r) {
            return n.some((s) => s(t, e, i, r));
          })(this.ast.matchers, t, e, i, r);
        }
        buildStyles(t, e, i) {
          const r = this._stateStyles["*"],
            s = this._stateStyles[t],
            o = r ? r.buildStyles(e, i) : {};
          return s ? s.buildStyles(e, i) : o;
        }
        build(t, e, i, r, s, o, a, l, c, u) {
          const d = [],
            h = (this.ast.options && this.ast.options.params) || dy,
            g = this.buildStyles(i, (a && a.params) || dy, d),
            _ = (l && l.params) || dy,
            y = this.buildStyles(r, _, d),
            E = new Set(),
            C = new Map(),
            N = new Map(),
            x = "void" === r,
            se = { params: Object.assign(Object.assign({}, h), _) },
            Fe = u ? [] : ly(t, e, this.ast.animation, s, o, g, y, se, c, d);
          let Ue = 0;
          if (
            (Fe.forEach((cn) => {
              Ue = Math.max(cn.duration + cn.delay, Ue);
            }),
            d.length)
          )
            return qT(e, this._triggerName, i, r, x, g, y, [], [], C, N, Ue, d);
          Fe.forEach((cn) => {
            const un = cn.element,
              Er = $n(C, un, {});
            cn.preStyleProps.forEach((Oi) => (Er[Oi] = !0));
            const Mr = $n(N, un, {});
            cn.postStyleProps.forEach((Oi) => (Mr[Oi] = !0)),
              un !== e && E.add(un);
          });
          const ot = bh(E.values());
          return qT(e, this._triggerName, i, r, x, g, y, Fe, ot, C, N, Ue);
        }
      }
      class O6 {
        constructor(t, e, i) {
          (this.styles = t), (this.defaultParams = e), (this.normalizer = i);
        }
        buildStyles(t, e) {
          const i = {},
            r = Ca(this.defaultParams);
          return (
            Object.keys(t).forEach((s) => {
              const o = t[s];
              null != o && (r[s] = o);
            }),
            this.styles.styles.forEach((s) => {
              if ("string" != typeof s) {
                const o = s;
                Object.keys(o).forEach((a) => {
                  let l = o[a];
                  l.length > 1 && (l = yh(l, r, e));
                  const c = this.normalizer.normalizePropertyName(a, e);
                  (l = this.normalizer.normalizeStyleValue(a, c, l, e)),
                    (i[c] = l);
                });
              }
            }),
            i
          );
        }
      }
      class F6 {
        constructor(t, e, i) {
          (this.name = t),
            (this.ast = e),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = {}),
            e.states.forEach((r) => {
              this.states[r.name] = new O6(
                r.style,
                (r.options && r.options.params) || {},
                i
              );
            }),
            KT(this.states, "true", "1"),
            KT(this.states, "false", "0"),
            e.transitions.forEach((r) => {
              this.transitionFactories.push(new YT(t, r, this.states));
            }),
            (this.fallbackTransition = (function (n, t, e) {
              return new YT(
                n,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(o, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                t
              );
            })(t, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, i, r) {
          return (
            this.transitionFactories.find((o) => o.match(t, e, i, r)) || null
          );
        }
        matchStyles(t, e, i) {
          return this.fallbackTransition.buildStyles(t, e, i);
        }
      }
      function KT(n, t, e) {
        n.hasOwnProperty(t)
          ? n.hasOwnProperty(e) || (n[e] = n[t])
          : n.hasOwnProperty(e) && (n[t] = n[e]);
      }
      const V6 = new Eh();
      class B6 {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(t, e) {
          const i = [],
            r = sy(this._driver, e, i);
          if (i.length)
            throw new Error(
              `Unable to build the animation due to the following errors: ${i.join(
                "\n"
              )}`
            );
          this._animations[t] = r;
        }
        _buildPlayer(t, e, i) {
          const r = t.element,
            s = AT(0, this._normalizer, 0, t.keyframes, e, i);
          return this._driver.animate(
            r,
            s,
            t.duration,
            t.delay,
            t.easing,
            [],
            !0
          );
        }
        create(t, e, i = {}) {
          const r = [],
            s = this._animations[t];
          let o;
          const a = new Map();
          if (
            (s
              ? ((o = ly(this._driver, e, s, Z_, ph, {}, {}, i, V6, r)),
                o.forEach((u) => {
                  const d = $n(a, u.element, {});
                  u.postStyleProps.forEach((h) => (d[h] = null));
                }))
              : (r.push(
                  "The requested animation doesn't exist or has already been destroyed"
                ),
                (o = [])),
            r.length)
          )
            throw new Error(
              `Unable to create the animation due to the following errors: ${r.join(
                "\n"
              )}`
            );
          a.forEach((u, d) => {
            Object.keys(u).forEach((h) => {
              u[h] = this._driver.computeStyle(d, h, wr);
            });
          });
          const c = Gr(
            o.map((u) => {
              const d = a.get(u.element);
              return this._buildPlayer(u, {}, d);
            })
          );
          return (
            (this._playersById[t] = c),
            c.onDestroy(() => this.destroy(t)),
            this.players.push(c),
            c
          );
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), delete this._playersById[t];
          const i = this.players.indexOf(e);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(t) {
          const e = this._playersById[t];
          if (!e)
            throw new Error(
              `Unable to find the timeline player referenced by ${t}`
            );
          return e;
        }
        listen(t, e, i, r) {
          const s = W_(e, "", "", "");
          return z_(this._getPlayer(t), i, s, r), () => {};
        }
        command(t, e, i, r) {
          if ("register" == i) return void this.register(t, r[0]);
          if ("create" == i) return void this.create(t, e, r[0] || {});
          const s = this._getPlayer(t);
          switch (i) {
            case "play":
              s.play();
              break;
            case "pause":
              s.pause();
              break;
            case "reset":
              s.reset();
              break;
            case "restart":
              s.restart();
              break;
            case "finish":
              s.finish();
              break;
            case "init":
              s.init();
              break;
            case "setPosition":
              s.setPosition(parseFloat(r[0]));
              break;
            case "destroy":
              this.destroy(t);
          }
        }
      }
      const JT = "ng-animate-queued",
        QT = "ng-animate-disabled",
        XT = ".ng-animate-disabled",
        U6 = [],
        ZT = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        z6 = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        li = "__ng_removed";
      class hy {
        constructor(t, e = "") {
          this.namespaceId = e;
          const i = t && t.hasOwnProperty("value");
          if (
            ((this.value = (function (n) {
              return null != n ? n : null;
            })(i ? t.value : t)),
            i)
          ) {
            const s = Ca(t);
            delete s.value, (this.options = s);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const i = this.options.params;
            Object.keys(e).forEach((r) => {
              null == i[r] && (i[r] = e[r]);
            });
          }
        }
      }
      const _c = "void",
        fy = new hy(_c);
      class G6 {
        constructor(t, e, i) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = i),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + t),
            ci(e, this._hostClassName);
        }
        listen(t, e, i, r) {
          if (!this._triggers.hasOwnProperty(e))
            throw new Error(
              `Unable to listen on the animation trigger event "${i}" because the animation trigger "${e}" doesn't exist!`
            );
          if (null == i || 0 == i.length)
            throw new Error(
              `Unable to listen on the animation trigger "${e}" because the provided event is undefined!`
            );
          if (
            !(function (n) {
              return "start" == n || "done" == n;
            })(i)
          )
            throw new Error(
              `The provided animation trigger event "${i}" for the animation trigger "${e}" is not supported!`
            );
          const s = $n(this._elementListeners, t, []),
            o = { name: e, phase: i, callback: r };
          s.push(o);
          const a = $n(this._engine.statesByElement, t, {});
          return (
            a.hasOwnProperty(e) ||
              (ci(t, gh), ci(t, gh + "-" + e), (a[e] = fy)),
            () => {
              this._engine.afterFlush(() => {
                const l = s.indexOf(o);
                l >= 0 && s.splice(l, 1), this._triggers[e] || delete a[e];
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers[t] && ((this._triggers[t] = e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers[t];
          if (!e)
            throw new Error(
              `The provided animation trigger "${t}" has not been registered!`
            );
          return e;
        }
        trigger(t, e, i, r = !0) {
          const s = this._getTrigger(e),
            o = new py(this.id, e, t);
          let a = this._engine.statesByElement.get(t);
          a ||
            (ci(t, gh),
            ci(t, gh + "-" + e),
            this._engine.statesByElement.set(t, (a = {})));
          let l = a[e];
          const c = new hy(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              l &&
              c.absorbOptions(l.options),
            (a[e] = c),
            l || (l = fy),
            c.value !== _c && l.value === c.value)
          ) {
            if (
              !(function (n, t) {
                const e = Object.keys(n),
                  i = Object.keys(t);
                if (e.length != i.length) return !1;
                for (let r = 0; r < e.length; r++) {
                  const s = e[r];
                  if (!t.hasOwnProperty(s) || n[s] !== t[s]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const _ = [],
                y = s.matchStyles(l.value, l.params, _),
                E = s.matchStyles(c.value, c.params, _);
              _.length
                ? this._engine.reportError(_)
                : this._engine.afterFlush(() => {
                    Ls(t, y), Zi(t, E);
                  });
            }
            return;
          }
          const h = $n(this._engine.playersByElement, t, []);
          h.forEach((_) => {
            _.namespaceId == this.id &&
              _.triggerName == e &&
              _.queued &&
              _.destroy();
          });
          let p = s.matchTransition(l.value, c.value, t, c.params),
            g = !1;
          if (!p) {
            if (!r) return;
            (p = s.fallbackTransition), (g = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: p,
              fromState: l,
              toState: c,
              player: o,
              isFallbackTransition: g,
            }),
            g ||
              (ci(t, JT),
              o.onStart(() => {
                Da(t, JT);
              })),
            o.onDone(() => {
              let _ = this.players.indexOf(o);
              _ >= 0 && this.players.splice(_, 1);
              const y = this._engine.playersByElement.get(t);
              if (y) {
                let E = y.indexOf(o);
                E >= 0 && y.splice(E, 1);
              }
            }),
            this.players.push(o),
            h.push(o),
            o
          );
        }
        deregister(t) {
          delete this._triggers[t],
            this._engine.statesByElement.forEach((e, i) => {
              delete e[t];
            }),
            this._elementListeners.forEach((e, i) => {
              this._elementListeners.set(
                i,
                e.filter((r) => r.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t),
            this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e &&
            (e.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const i = this._engine.driver.query(t, mh, !0);
          i.forEach((r) => {
            if (r[li]) return;
            const s = this._engine.fetchNamespacesByElement(r);
            s.size
              ? s.forEach((o) => o.triggerLeaveAnimation(r, e, !1, !0))
              : this.clearElementCache(r);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((r) => this.clearElementCache(r))
            );
        }
        triggerLeaveAnimation(t, e, i, r) {
          const s = this._engine.statesByElement.get(t);
          if (s) {
            const o = [];
            if (
              (Object.keys(s).forEach((a) => {
                if (this._triggers[a]) {
                  const l = this.trigger(t, a, _c, r);
                  l && o.push(l);
                }
              }),
              o.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e),
                i && Gr(o).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t),
            i = this._engine.statesByElement.get(t);
          if (e && i) {
            const r = new Set();
            e.forEach((s) => {
              const o = s.name;
              if (r.has(o)) return;
              r.add(o);
              const l = this._triggers[o].fallbackTransition,
                c = i[o] || fy,
                u = new hy(_c),
                d = new py(this.id, o, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: o,
                  transition: l,
                  fromState: c,
                  toState: u,
                  player: d,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const i = this._engine;
          if (
            (t.childElementCount && this._signalRemovalForInnerTriggers(t, e),
            this.triggerLeaveAnimation(t, e, !0))
          )
            return;
          let r = !1;
          if (i.totalAnimations) {
            const s = i.players.length ? i.playersByQueriedElement.get(t) : [];
            if (s && s.length) r = !0;
            else {
              let o = t;
              for (; (o = o.parentNode); )
                if (i.statesByElement.get(o)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), r))
            i.markElementAsRemoved(this.id, t, !1, e);
          else {
            const s = t[li];
            (!s || s === ZT) &&
              (i.afterFlush(() => this.clearElementCache(t)),
              i.destroyInnerAnimations(t),
              i._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          ci(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((i) => {
              const r = i.player;
              if (r.destroyed) return;
              const s = i.element,
                o = this._elementListeners.get(s);
              o &&
                o.forEach((a) => {
                  if (a.name == i.triggerName) {
                    const l = W_(
                      s,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (l._data = t), z_(i.player, a.phase, l, a.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : e.push(i);
            }),
            (this._queue = []),
            e.sort((i, r) => {
              const s = i.transition.ast.depCount,
                o = r.transition.ast.depCount;
              return 0 == s || 0 == o
                ? s - o
                : this._engine.driver.containsElement(i.element, r.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return (
            this._elementListeners.has(t) && (e = !0),
            (e = !!this._queue.find((i) => i.element === t) || e),
            e
          );
        }
      }
      class W6 {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (r, s) => {});
        }
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((i) => {
                i.queued && t.push(i);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const i = new G6(t, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(i, e)
              : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = i)
          );
        }
        _balanceNamespaceList(t, e) {
          const i = this._namespaceList.length - 1;
          if (i >= 0) {
            let r = !1;
            for (let s = i; s >= 0; s--)
              if (
                this.driver.containsElement(
                  this._namespaceList[s].hostElement,
                  e
                )
              ) {
                this._namespaceList.splice(s + 1, 0, t), (r = !0);
                break;
              }
            r || this._namespaceList.splice(0, 0, t);
          } else this._namespaceList.push(t);
          return this.namespacesByHostElement.set(e, t), t;
        }
        register(t, e) {
          let i = this._namespaceLookup[t];
          return i || (i = this.createNamespace(t, e)), i;
        }
        registerTrigger(t, e, i) {
          let r = this._namespaceLookup[t];
          r && r.register(e, i) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const i = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(i.hostElement),
              delete this._namespaceLookup[t];
            const r = this._namespaceList.indexOf(i);
            r >= 0 && this._namespaceList.splice(r, 1);
          }),
            this.afterFlushAnimationsDone(() => i.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            i = this.statesByElement.get(t);
          if (i) {
            const r = Object.keys(i);
            for (let s = 0; s < r.length; s++) {
              const o = i[r[s]].namespaceId;
              if (o) {
                const a = this._fetchNamespace(o);
                a && e.add(a);
              }
            }
          }
          return e;
        }
        trigger(t, e, i, r) {
          if (Th(e)) {
            const s = this._fetchNamespace(t);
            if (s) return s.trigger(e, i, r), !0;
          }
          return !1;
        }
        insertNode(t, e, i, r) {
          if (!Th(e)) return;
          const s = e[li];
          if (s && s.setForRemoval) {
            (s.setForRemoval = !1), (s.setForMove = !0);
            const o = this.collectedLeaveElements.indexOf(e);
            o >= 0 && this.collectedLeaveElements.splice(o, 1);
          }
          if (t) {
            const o = this._fetchNamespace(t);
            o && o.insertNode(e, i);
          }
          r && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) ||
              (this.disabledNodes.add(t), ci(t, QT))
            : this.disabledNodes.has(t) &&
              (this.disabledNodes.delete(t), Da(t, QT));
        }
        removeNode(t, e, i, r) {
          if (Th(e)) {
            const s = t ? this._fetchNamespace(t) : null;
            if (
              (s ? s.removeNode(e, r) : this.markElementAsRemoved(t, e, !1, r),
              i)
            ) {
              const o = this.namespacesByHostElement.get(e);
              o && o.id !== t && o.removeNode(e, r);
            }
          } else this._onRemovalComplete(e, r);
        }
        markElementAsRemoved(t, e, i, r) {
          this.collectedLeaveElements.push(e),
            (e[li] = {
              namespaceId: t,
              setForRemoval: r,
              hasAnimation: i,
              removedBeforeQueried: !1,
            });
        }
        listen(t, e, i, r, s) {
          return Th(e) ? this._fetchNamespace(t).listen(e, i, r, s) : () => {};
        }
        _buildInstruction(t, e, i, r, s) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            i,
            r,
            t.fromState.options,
            t.toState.options,
            e,
            s
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, mh, !0);
          e.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, ey, !0)),
              e.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return Gr(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t[li];
          if (e && e.setForRemoval) {
            if (((t[li] = ZT), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const i = this._fetchNamespace(e.namespaceId);
              i && i.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          this.driver.matchesElement(t, XT) &&
            this.markElementAsDisabled(t, !1),
            this.driver.query(t, XT, !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, r) =>
                this._balanceNamespaceList(i, r)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              ci(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              e = this._flushAnimations(i, t);
            } finally {
              for (let r = 0; r < i.length; r++) i[r]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? Gr(e).onDone(() => {
                    i.forEach((r) => r());
                  })
                : i.forEach((r) => r());
          }
        }
        reportError(t) {
          throw new Error(
            `Unable to process animations due to the following failed trigger transitions\n ${t.join(
              "\n"
            )}`
          );
        }
        _flushAnimations(t, e) {
          const i = new Eh(),
            r = [],
            s = new Map(),
            o = [],
            a = new Map(),
            l = new Map(),
            c = new Map(),
            u = new Set();
          this.disabledNodes.forEach((G) => {
            u.add(G);
            const ie = this.driver.query(G, ".ng-animate-queued", !0);
            for (let pe = 0; pe < ie.length; pe++) u.add(ie[pe]);
          });
          const d = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            p = nA(h, this.collectedEnterElements),
            g = new Map();
          let _ = 0;
          p.forEach((G, ie) => {
            const pe = Z_ + _++;
            g.set(ie, pe), G.forEach((Le) => ci(Le, pe));
          });
          const y = [],
            E = new Set(),
            C = new Set();
          for (let G = 0; G < this.collectedLeaveElements.length; G++) {
            const ie = this.collectedLeaveElements[G],
              pe = ie[li];
            pe &&
              pe.setForRemoval &&
              (y.push(ie),
              E.add(ie),
              pe.hasAnimation
                ? this.driver
                    .query(ie, ".ng-star-inserted", !0)
                    .forEach((Le) => E.add(Le))
                : C.add(ie));
          }
          const N = new Map(),
            x = nA(h, Array.from(E));
          x.forEach((G, ie) => {
            const pe = ph + _++;
            N.set(ie, pe), G.forEach((Le) => ci(Le, pe));
          }),
            t.push(() => {
              p.forEach((G, ie) => {
                const pe = g.get(ie);
                G.forEach((Le) => Da(Le, pe));
              }),
                x.forEach((G, ie) => {
                  const pe = N.get(ie);
                  G.forEach((Le) => Da(Le, pe));
                }),
                y.forEach((G) => {
                  this.processLeaveNode(G);
                });
            });
          const se = [],
            Fe = [];
          for (let G = this._namespaceList.length - 1; G >= 0; G--)
            this._namespaceList[G].drainQueuedTransitions(e).forEach((pe) => {
              const Le = pe.player,
                Gt = pe.element;
              if ((se.push(Le), this.collectedEnterElements.length)) {
                const nr = Gt[li];
                if (nr && nr.setForMove) return void Le.destroy();
              }
              const tr = !d || !this.driver.containsElement(d, Gt),
                Un = N.get(Gt),
                ts = g.get(Gt),
                _t = this._buildInstruction(pe, i, ts, Un, tr);
              if (_t.errors && _t.errors.length) Fe.push(_t);
              else {
                if (tr)
                  return (
                    Le.onStart(() => Ls(Gt, _t.fromStyles)),
                    Le.onDestroy(() => Zi(Gt, _t.toStyles)),
                    void r.push(Le)
                  );
                if (pe.isFallbackTransition)
                  return (
                    Le.onStart(() => Ls(Gt, _t.fromStyles)),
                    Le.onDestroy(() => Zi(Gt, _t.toStyles)),
                    void r.push(Le)
                  );
                _t.timelines.forEach((nr) => (nr.stretchStartingKeyframe = !0)),
                  i.append(Gt, _t.timelines),
                  o.push({ instruction: _t, player: Le, element: Gt }),
                  _t.queriedElements.forEach((nr) => $n(a, nr, []).push(Le)),
                  _t.preStyleProps.forEach((nr, Bc) => {
                    const Tf = Object.keys(nr);
                    if (Tf.length) {
                      let qs = l.get(Bc);
                      qs || l.set(Bc, (qs = new Set())),
                        Tf.forEach(($b) => qs.add($b));
                    }
                  }),
                  _t.postStyleProps.forEach((nr, Bc) => {
                    const Tf = Object.keys(nr);
                    let qs = c.get(Bc);
                    qs || c.set(Bc, (qs = new Set())),
                      Tf.forEach(($b) => qs.add($b));
                  });
              }
            });
          if (Fe.length) {
            const G = [];
            Fe.forEach((ie) => {
              G.push(`@${ie.triggerName} has failed due to:\n`),
                ie.errors.forEach((pe) => G.push(`- ${pe}\n`));
            }),
              se.forEach((ie) => ie.destroy()),
              this.reportError(G);
          }
          const Ue = new Map(),
            ot = new Map();
          o.forEach((G) => {
            const ie = G.element;
            i.has(ie) &&
              (ot.set(ie, ie),
              this._beforeAnimationBuild(
                G.player.namespaceId,
                G.instruction,
                Ue
              ));
          }),
            r.forEach((G) => {
              const ie = G.element;
              this._getPreviousPlayers(
                ie,
                !1,
                G.namespaceId,
                G.triggerName,
                null
              ).forEach((Le) => {
                $n(Ue, ie, []).push(Le), Le.destroy();
              });
            });
          const cn = y.filter((G) => rA(G, l, c)),
            un = new Map();
          tA(un, this.driver, C, c, wr).forEach((G) => {
            rA(G, l, c) && cn.push(G);
          });
          const Mr = new Map();
          p.forEach((G, ie) => {
            tA(Mr, this.driver, new Set(G), l, "!");
          }),
            cn.forEach((G) => {
              const ie = un.get(G),
                pe = Mr.get(G);
              un.set(G, Object.assign(Object.assign({}, ie), pe));
            });
          const Oi = [],
            Ba = [],
            Ha = {};
          o.forEach((G) => {
            const { element: ie, player: pe, instruction: Le } = G;
            if (i.has(ie)) {
              if (u.has(ie))
                return (
                  pe.onDestroy(() => Zi(ie, Le.toStyles)),
                  (pe.disabled = !0),
                  pe.overrideTotalTime(Le.totalTime),
                  void r.push(pe)
                );
              let Gt = Ha;
              if (ot.size > 1) {
                let Un = ie;
                const ts = [];
                for (; (Un = Un.parentNode); ) {
                  const _t = ot.get(Un);
                  if (_t) {
                    Gt = _t;
                    break;
                  }
                  ts.push(Un);
                }
                ts.forEach((_t) => ot.set(_t, Gt));
              }
              const tr = this._buildAnimation(
                pe.namespaceId,
                Le,
                Ue,
                s,
                Mr,
                un
              );
              if ((pe.setRealPlayer(tr), Gt === Ha)) Oi.push(pe);
              else {
                const Un = this.playersByElement.get(Gt);
                Un && Un.length && (pe.parentPlayer = Gr(Un)), r.push(pe);
              }
            } else
              Ls(ie, Le.fromStyles),
                pe.onDestroy(() => Zi(ie, Le.toStyles)),
                Ba.push(pe),
                u.has(ie) && r.push(pe);
          }),
            Ba.forEach((G) => {
              const ie = s.get(G.element);
              if (ie && ie.length) {
                const pe = Gr(ie);
                G.setRealPlayer(pe);
              }
            }),
            r.forEach((G) => {
              G.parentPlayer ? G.syncPlayerEvents(G.parentPlayer) : G.destroy();
            });
          for (let G = 0; G < y.length; G++) {
            const ie = y[G],
              pe = ie[li];
            if ((Da(ie, ph), pe && pe.hasAnimation)) continue;
            let Le = [];
            if (a.size) {
              let tr = a.get(ie);
              tr && tr.length && Le.push(...tr);
              let Un = this.driver.query(ie, ey, !0);
              for (let ts = 0; ts < Un.length; ts++) {
                let _t = a.get(Un[ts]);
                _t && _t.length && Le.push(..._t);
              }
            }
            const Gt = Le.filter((tr) => !tr.destroyed);
            Gt.length ? J6(this, ie, Gt) : this.processLeaveNode(ie);
          }
          return (
            (y.length = 0),
            Oi.forEach((G) => {
              this.players.push(G),
                G.onDone(() => {
                  G.destroy();
                  const ie = this.players.indexOf(G);
                  this.players.splice(ie, 1);
                }),
                G.play();
            }),
            Oi
          );
        }
        elementContainsData(t, e) {
          let i = !1;
          const r = e[li];
          return (
            r && r.setForRemoval && (i = !0),
            this.playersByElement.has(e) && (i = !0),
            this.playersByQueriedElement.has(e) && (i = !0),
            this.statesByElement.has(e) && (i = !0),
            this._fetchNamespace(t).elementContainsData(e) || i
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, i, r, s) {
          let o = [];
          if (e) {
            const a = this.playersByQueriedElement.get(t);
            a && (o = a);
          } else {
            const a = this.playersByElement.get(t);
            if (a) {
              const l = !s || s == _c;
              a.forEach((c) => {
                c.queued || (!l && c.triggerName != r) || o.push(c);
              });
            }
          }
          return (
            (i || r) &&
              (o = o.filter(
                (a) => !((i && i != a.namespaceId) || (r && r != a.triggerName))
              )),
            o
          );
        }
        _beforeAnimationBuild(t, e, i) {
          const s = e.element,
            o = e.isRemovalTransition ? void 0 : t,
            a = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const l of e.timelines) {
            const c = l.element,
              u = c !== s,
              d = $n(i, c, []);
            this._getPreviousPlayers(c, u, o, a, e.toState).forEach((p) => {
              const g = p.getRealPlayer();
              g.beforeDestroy && g.beforeDestroy(), p.destroy(), d.push(p);
            });
          }
          Ls(s, e.fromStyles);
        }
        _buildAnimation(t, e, i, r, s, o) {
          const a = e.triggerName,
            l = e.element,
            c = [],
            u = new Set(),
            d = new Set(),
            h = e.timelines.map((g) => {
              const _ = g.element;
              u.add(_);
              const y = _[li];
              if (y && y.removedBeforeQueried)
                return new wa(g.duration, g.delay);
              const E = _ !== l,
                C = (function (n) {
                  const t = [];
                  return iA(n, t), t;
                })((i.get(_) || U6).map((Ue) => Ue.getRealPlayer())).filter(
                  (Ue) => !!Ue.element && Ue.element === _
                ),
                N = s.get(_),
                x = o.get(_),
                se = AT(0, this._normalizer, 0, g.keyframes, N, x),
                Fe = this._buildPlayer(g, se, C);
              if ((g.subTimeline && r && d.add(_), E)) {
                const Ue = new py(t, a, _);
                Ue.setRealPlayer(Fe), c.push(Ue);
              }
              return Fe;
            });
          c.forEach((g) => {
            $n(this.playersByQueriedElement, g.element, []).push(g),
              g.onDone(() =>
                (function (n, t, e) {
                  let i;
                  if (n instanceof Map) {
                    if (((i = n.get(t)), i)) {
                      if (i.length) {
                        const r = i.indexOf(e);
                        i.splice(r, 1);
                      }
                      0 == i.length && n.delete(t);
                    }
                  } else if (((i = n[t]), i)) {
                    if (i.length) {
                      const r = i.indexOf(e);
                      i.splice(r, 1);
                    }
                    0 == i.length && delete n[t];
                  }
                  return i;
                })(this.playersByQueriedElement, g.element, g)
              );
          }),
            u.forEach((g) => ci(g, FT));
          const p = Gr(h);
          return (
            p.onDestroy(() => {
              u.forEach((g) => Da(g, FT)), Zi(l, e.toStyles);
            }),
            d.forEach((g) => {
              $n(r, g, []).push(p);
            }),
            p
          );
        }
        _buildPlayer(t, e, i) {
          return e.length > 0
            ? this.driver.animate(
                t.element,
                e,
                t.duration,
                t.delay,
                t.easing,
                i
              )
            : new wa(t.duration, t.delay);
        }
      }
      class py {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = i),
            (this._player = new wa()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            Object.keys(this._queuedCallbacks).forEach((e) => {
              this._queuedCallbacks[e].forEach((i) => z_(t, e, void 0, i));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback("start")),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          $n(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent("done", t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent("start", t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent("destroy", t),
            this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function Th(n) {
        return n && 1 === n.nodeType;
      }
      function eA(n, t) {
        const e = n.style.display;
        return (n.style.display = null != t ? t : "none"), e;
      }
      function tA(n, t, e, i, r) {
        const s = [];
        e.forEach((l) => s.push(eA(l)));
        const o = [];
        i.forEach((l, c) => {
          const u = {};
          l.forEach((d) => {
            const h = (u[d] = t.computeStyle(c, d, r));
            (!h || 0 == h.length) && ((c[li] = z6), o.push(c));
          }),
            n.set(c, u);
        });
        let a = 0;
        return e.forEach((l) => eA(l, s[a++])), o;
      }
      function nA(n, t) {
        const e = new Map();
        if ((n.forEach((a) => e.set(a, [])), 0 == t.length)) return e;
        const r = new Set(t),
          s = new Map();
        function o(a) {
          if (!a) return 1;
          let l = s.get(a);
          if (l) return l;
          const c = a.parentNode;
          return (l = e.has(c) ? c : r.has(c) ? 1 : o(c)), s.set(a, l), l;
        }
        return (
          t.forEach((a) => {
            const l = o(a);
            1 !== l && e.get(l).push(a);
          }),
          e
        );
      }
      const Ah = "$$classes";
      function ci(n, t) {
        if (n.classList) n.classList.add(t);
        else {
          let e = n[Ah];
          e || (e = n[Ah] = {}), (e[t] = !0);
        }
      }
      function Da(n, t) {
        if (n.classList) n.classList.remove(t);
        else {
          let e = n[Ah];
          e && delete e[t];
        }
      }
      function J6(n, t, e) {
        Gr(e).onDone(() => n.processLeaveNode(t));
      }
      function iA(n, t) {
        for (let e = 0; e < n.length; e++) {
          const i = n[e];
          i instanceof ST ? iA(i.players, t) : t.push(i);
        }
      }
      function rA(n, t, e) {
        const i = e.get(n);
        if (!i) return !1;
        let r = t.get(n);
        return r ? i.forEach((s) => r.add(s)) : t.set(n, i), e.delete(n), !0;
      }
      class kh {
        constructor(t, e, i) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (r, s) => {}),
            (this._transitionEngine = new W6(t, e, i)),
            (this._timelineEngine = new B6(t, e, i)),
            (this._transitionEngine.onRemovalComplete = (r, s) =>
              this.onRemovalComplete(r, s));
        }
        registerTrigger(t, e, i, r, s) {
          const o = t + "-" + r;
          let a = this._triggerCache[o];
          if (!a) {
            const l = [],
              c = sy(this._driver, s, l);
            if (l.length)
              throw new Error(
                `The animation trigger "${r}" has failed to build due to the following errors:\n - ${l.join(
                  "\n - "
                )}`
              );
            (a = (function (n, t, e) {
              return new F6(n, t, e);
            })(r, c, this._normalizer)),
              (this._triggerCache[o] = a);
          }
          this._transitionEngine.registerTrigger(e, r, a);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, i, r) {
          this._transitionEngine.insertNode(t, e, i, r);
        }
        onRemove(t, e, i, r) {
          this._transitionEngine.removeNode(t, e, r || !1, i);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, i, r) {
          if ("@" == i.charAt(0)) {
            const [s, o] = kT(i);
            this._timelineEngine.command(s, e, o, r);
          } else this._transitionEngine.trigger(t, e, i, r);
        }
        listen(t, e, i, r, s) {
          if ("@" == i.charAt(0)) {
            const [o, a] = kT(i);
            return this._timelineEngine.listen(o, e, a, s);
          }
          return this._transitionEngine.listen(t, e, i, r, s);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function sA(n, t) {
        let e = null,
          i = null;
        return (
          Array.isArray(t) && t.length
            ? ((e = gy(t[0])), t.length > 1 && (i = gy(t[t.length - 1])))
            : t && (e = gy(t)),
          e || i ? new Ea(n, e, i) : null
        );
      }
      class Ea {
        constructor(t, e, i) {
          (this._element = t),
            (this._startStyles = e),
            (this._endStyles = i),
            (this._state = 0);
          let r = Ea.initialStylesByElement.get(t);
          r || Ea.initialStylesByElement.set(t, (r = {})),
            (this._initialStyles = r);
        }
        start() {
          this._state < 1 &&
            (this._startStyles &&
              Zi(this._element, this._startStyles, this._initialStyles),
            (this._state = 1));
        }
        finish() {
          this.start(),
            this._state < 2 &&
              (Zi(this._element, this._initialStyles),
              this._endStyles &&
                (Zi(this._element, this._endStyles), (this._endStyles = null)),
              (this._state = 1));
        }
        destroy() {
          this.finish(),
            this._state < 3 &&
              (Ea.initialStylesByElement.delete(this._element),
              this._startStyles &&
                (Ls(this._element, this._startStyles),
                (this._endStyles = null)),
              this._endStyles &&
                (Ls(this._element, this._endStyles), (this._endStyles = null)),
              Zi(this._element, this._initialStyles),
              (this._state = 3));
        }
      }
      function gy(n) {
        let t = null;
        const e = Object.keys(n);
        for (let i = 0; i < e.length; i++) {
          const r = e[i];
          Z6(r) && ((t = t || {}), (t[r] = n[r]));
        }
        return t;
      }
      function Z6(n) {
        return "display" === n || "position" === n;
      }
      Ea.initialStylesByElement = new WeakMap();
      const oA = "animation",
        aA = "animationend";
      class nG {
        constructor(t, e, i, r, s, o, a) {
          (this._element = t),
            (this._name = e),
            (this._duration = i),
            (this._delay = r),
            (this._easing = s),
            (this._fillMode = o),
            (this._onDoneFn = a),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (l) => this._handleCallback(l));
        }
        apply() {
          (function (n, t) {
            const e = _y(n, "").trim();
            let i = 0;
            e.length &&
              ((function (n, t) {
                let e = 0;
                for (let i = 0; i < n.length; i++) "," === n.charAt(i) && e++;
                return e;
              })(e) + 1,
              (t = `${e}, ${t}`)),
              Nh(n, "", t);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            uA(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          lA(this._element, this._name, "paused");
        }
        resume() {
          lA(this._element, this._name, "running");
        }
        setPosition(t) {
          const e = cA(this._element, this._name);
          (this._position = t * this._duration),
            Nh(this._element, "Delay", `-${this._position}ms`, e);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(t) {
          const e = t._ngTestManualTimestamp || Date.now(),
            i = 1e3 * parseFloat(t.elapsedTime.toFixed(3));
          t.animationName == this._name &&
            Math.max(e - this._startTime, 0) >= this._delay &&
            i >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFn(),
            uA(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function (n, t) {
              const i = _y(n, "").split(","),
                r = my(i, t);
              r >= 0 && (i.splice(r, 1), Nh(n, "", i.join(",")));
            })(this._element, this._name));
        }
      }
      function lA(n, t, e) {
        Nh(n, "PlayState", e, cA(n, t));
      }
      function cA(n, t) {
        const e = _y(n, "");
        return e.indexOf(",") > 0 ? my(e.split(","), t) : my([e], t);
      }
      function my(n, t) {
        for (let e = 0; e < n.length; e++) if (n[e].indexOf(t) >= 0) return e;
        return -1;
      }
      function uA(n, t, e) {
        e ? n.removeEventListener(aA, t) : n.addEventListener(aA, t);
      }
      function Nh(n, t, e, i) {
        const r = oA + t;
        if (null != i) {
          const s = n.style[r];
          if (s.length) {
            const o = s.split(",");
            (o[i] = e), (e = o.join(","));
          }
        }
        n.style[r] = e;
      }
      function _y(n, t) {
        return n.style[oA + t] || "";
      }
      class dA {
        constructor(t, e, i, r, s, o, a, l) {
          (this.element = t),
            (this.keyframes = e),
            (this.animationName = i),
            (this._duration = r),
            (this._delay = s),
            (this._finalStyles = a),
            (this._specialStyles = l),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = o || "linear"),
            (this.totalTime = r + s),
            this._buildStyler();
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        destroy() {
          this.init(),
            !(this._state >= 4) &&
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((t) => t()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            !(this._state >= 3) &&
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(t) {
          this._styler.setPosition(t);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          this._state >= 1 ||
            ((this._state = 1),
            this._styler.apply(),
            this._delay && this._styler.pause());
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(),
              (this._state = 2),
              this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          (this._state = 0),
            this._styler.destroy(),
            this._buildStyler(),
            this._styler.apply();
        }
        _buildStyler() {
          this._styler = new nG(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            "forwards",
            () => this.finish()
          );
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
        beforeDestroy() {
          this.init();
          const t = {};
          if (this.hasStarted()) {
            const e = this._state >= 3;
            Object.keys(this._finalStyles).forEach((i) => {
              "offset" != i &&
                (t[i] = e ? this._finalStyles[i] : ry(this.element, i));
            });
          }
          this.currentSnapshot = t;
        }
      }
      class lG extends wa {
        constructor(t, e) {
          super(),
            (this.element = t),
            (this._startingStyles = {}),
            (this.__initialized = !1),
            (this._styles = xT(e));
        }
        init() {
          this.__initialized ||
            !this._startingStyles ||
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((t) => {
              this._startingStyles[t] = this.element.style[t];
            }),
            super.init());
        }
        play() {
          !this._startingStyles ||
            (this.init(),
            Object.keys(this._styles).forEach((t) =>
              this.element.style.setProperty(t, this._styles[t])
            ),
            super.play());
        }
        destroy() {
          !this._startingStyles ||
            (Object.keys(this._startingStyles).forEach((t) => {
              const e = this._startingStyles[t];
              e
                ? this.element.style.setProperty(t, e)
                : this.element.style.removeProperty(t);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class fA {
        constructor() {
          this._count = 0;
        }
        validateStyleProperty(t) {
          return K_(t);
        }
        matchesElement(t, e) {
          return J_(t, e);
        }
        containsElement(t, e) {
          return Q_(t, e);
        }
        query(t, e, i) {
          return X_(t, e, i);
        }
        computeStyle(t, e, i) {
          return window.getComputedStyle(t)[e];
        }
        buildKeyframeElement(t, e, i) {
          i = i.map((a) => xT(a));
          let r = `@keyframes ${e} {\n`,
            s = "";
          i.forEach((a) => {
            s = " ";
            const l = parseFloat(a.offset);
            (r += `${s}${100 * l}% {\n`),
              (s += " "),
              Object.keys(a).forEach((c) => {
                const u = a[c];
                switch (c) {
                  case "offset":
                    return;
                  case "easing":
                    return void (
                      u && (r += `${s}animation-timing-function: ${u};\n`)
                    );
                  default:
                    return void (r += `${s}${c}: ${u};\n`);
                }
              }),
              (r += `${s}}\n`);
          }),
            (r += "}\n");
          const o = document.createElement("style");
          return (o.textContent = r), o;
        }
        animate(t, e, i, r, s, o = [], a) {
          const l = o.filter((y) => y instanceof dA),
            c = {};
          $T(i, r) &&
            l.forEach((y) => {
              let E = y.currentSnapshot;
              Object.keys(E).forEach((C) => (c[C] = E[C]));
            });
          const u = (function (n) {
            let t = {};
            return (
              n &&
                (Array.isArray(n) ? n : [n]).forEach((i) => {
                  Object.keys(i).forEach((r) => {
                    "offset" == r || "easing" == r || (t[r] = i[r]);
                  });
                }),
              t
            );
          })((e = jT(t, e, c)));
          if (0 == i) return new lG(t, u);
          const d = "gen_css_kf_" + this._count++,
            h = this.buildKeyframeElement(t, d, e);
          (function (n) {
            var t;
            const e =
              null === (t = n.getRootNode) || void 0 === t ? void 0 : t.call(n);
            return "undefined" != typeof ShadowRoot && e instanceof ShadowRoot
              ? e
              : document.head;
          })(t).appendChild(h);
          const g = sA(t, e),
            _ = new dA(t, e, d, i, r, s, u, g);
          return (
            _.onDestroy(() =>
              (function (n) {
                n.parentNode.removeChild(n);
              })(h)
            ),
            _
          );
        }
      }
      class gA {
        constructor(t, e, i, r) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = i),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            t,
            this.options
          )),
            (this._finalKeyframe = t.length ? t[t.length - 1] : {}),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(t, e, i) {
          return t.animate(e, i);
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = t * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = {};
          this.hasStarted() &&
            Object.keys(this._finalKeyframe).forEach((e) => {
              "offset" != e &&
                (t[e] = this._finished
                  ? this._finalKeyframe[e]
                  : ry(this.element, e));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class fG {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(
            mA().toString()
          )),
            (this._cssKeyframesDriver = new fA());
        }
        validateStyleProperty(t) {
          return K_(t);
        }
        matchesElement(t, e) {
          return J_(t, e);
        }
        containsElement(t, e) {
          return Q_(t, e);
        }
        query(t, e, i) {
          return X_(t, e, i);
        }
        computeStyle(t, e, i) {
          return window.getComputedStyle(t)[e];
        }
        overrideWebAnimationsSupport(t) {
          this._isNativeImpl = t;
        }
        animate(t, e, i, r, s, o = [], a) {
          if (!a && !this._isNativeImpl)
            return this._cssKeyframesDriver.animate(t, e, i, r, s, o);
          const u = {
            duration: i,
            delay: r,
            fill: 0 == r ? "both" : "forwards",
          };
          s && (u.easing = s);
          const d = {},
            h = o.filter((g) => g instanceof gA);
          $T(i, r) &&
            h.forEach((g) => {
              let _ = g.currentSnapshot;
              Object.keys(_).forEach((y) => (d[y] = _[y]));
            });
          const p = sA(t, (e = jT(t, (e = e.map((g) => Wr(g, !1))), d)));
          return new gA(t, e, u, p);
        }
      }
      function mA() {
        return (TT() && Element.prototype.animate) || {};
      }
      let gG = (() => {
        class n extends wT {
          constructor(e, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(i.body, {
                id: "0",
                encapsulation: vt.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const r = Array.isArray(e) ? CT(e) : e;
            return (
              _A(this._renderer, null, i, "register", [r]),
              new mG(i, this._renderer)
            );
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(hr), m(j));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class mG extends class {} {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new _G(this._id, t, e || {}, this._renderer);
        }
      }
      class _G {
        constructor(t, e, i, r) {
          (this.id = t),
            (this.element = e),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return _A(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen("done", t);
        }
        onStart(t) {
          this._listen("start", t);
        }
        onDestroy(t) {
          this._listen("destroy", t);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(t) {
          this._command("setPosition", t);
        }
        getPosition() {
          var t, e;
          return null !==
            (e =
              null === (t = this._renderer.engine.players[+this.id]) ||
              void 0 === t
                ? void 0
                : t.getPosition()) && void 0 !== e
            ? e
            : 0;
        }
      }
      function _A(n, t, e, i, r) {
        return n.setProperty(t, `@@${e}:${i}`, r);
      }
      const yA = "@.disabled";
      let yG = (() => {
        class n {
          constructor(e, i, r) {
            (this.delegate = e),
              (this.engine = i),
              (this._zone = r),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (i.onRemovalComplete = (s, o) => {
                o && o.parentNode(s) && o.removeChild(s.parentNode, s);
              });
          }
          createRenderer(e, i) {
            const s = this.delegate.createRenderer(e, i);
            if (!(e && i && i.data && i.data.animation)) {
              let u = this._rendererCache.get(s);
              return (
                u ||
                  ((u = new bA("", s, this.engine)),
                  this._rendererCache.set(s, u)),
                u
              );
            }
            const o = i.id,
              a = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, e);
            const l = (u) => {
              Array.isArray(u)
                ? u.forEach(l)
                : this.engine.registerTrigger(o, a, e, u.name, u);
            };
            return i.data.animation.forEach(l), new bG(this, a, s, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, i, r) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => i(r))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((s) => {
                        const [o, a] = s;
                        o(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, r]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(hr), m(kh), m(H));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class bA {
        constructor(t, e, i) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = i),
            (this.destroyNode = this.delegate.destroyNode
              ? (r) => e.destroyNode(r)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e),
            this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, i, r = !0) {
          this.delegate.insertBefore(t, e, i),
            this.engine.onInsert(this.namespaceId, e, t, r);
        }
        removeChild(t, e, i) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, i);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, i, r) {
          this.delegate.setAttribute(t, e, i, r);
        }
        removeAttribute(t, e, i) {
          this.delegate.removeAttribute(t, e, i);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, i, r) {
          this.delegate.setStyle(t, e, i, r);
        }
        removeStyle(t, e, i) {
          this.delegate.removeStyle(t, e, i);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0) && e == yA
            ? this.disableAnimations(t, !!i)
            : this.delegate.setProperty(t, e, i);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, i) {
          return this.delegate.listen(t, e, i);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class bG extends bA {
        constructor(t, e, i, r) {
          super(e, i, r), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, i) {
          "@" == e.charAt(0)
            ? "." == e.charAt(1) && e == yA
              ? this.disableAnimations(t, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, t, e.substr(1), i)
            : this.delegate.setProperty(t, e, i);
        }
        listen(t, e, i) {
          if ("@" == e.charAt(0)) {
            const r = (function (n) {
              switch (n) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return n;
              }
            })(t);
            let s = e.substr(1),
              o = "";
            return (
              "@" != s.charAt(0) &&
                ([s, o] = (function (n) {
                  const t = n.indexOf(".");
                  return [n.substring(0, t), n.substr(t + 1)];
                })(s)),
              this.engine.listen(this.namespaceId, r, s, o, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, i, a);
              })
            );
          }
          return this.delegate.listen(t, e, i);
        }
      }
      let CG = (() => {
        class n extends kh {
          constructor(e, i, r) {
            super(e.body, i, r);
          }
          ngOnDestroy() {
            this.flush();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(j), m(fh), m(uy));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Bs = new P("AnimationModuleType"),
        vA = [
          { provide: wT, useClass: gG },
          {
            provide: uy,
            useFactory: function () {
              return new N6();
            },
          },
          { provide: kh, useClass: CG },
          {
            provide: hr,
            useFactory: function (n, t, e) {
              return new yG(n, t, e);
            },
            deps: [kd, kh, H],
          },
        ],
        wA = [
          {
            provide: fh,
            useFactory: function () {
              return "function" == typeof mA() ? new fG() : new fA();
            },
          },
          { provide: Bs, useValue: "BrowserAnimations" },
          ...vA,
        ],
        CA = [
          { provide: fh, useClass: OT },
          { provide: Bs, useValue: "NoopAnimations" },
          ...vA,
        ];
      let SG = (() => {
        class n {
          static withConfig(e) {
            return { ngModule: n, providers: e.disableAnimations ? CA : wA };
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = K({ type: n })),
          (n.ɵinj = W({ providers: wA, imports: [Xm] })),
          n
        );
      })();
      function kG(n, t) {
        if ((1 & n && Z(0, "mat-pseudo-checkbox", 4), 2 & n)) {
          const e = T();
          D("state", e.selected ? "checked" : "unchecked")(
            "disabled",
            e.disabled
          );
        }
      }
      function NG(n, t) {
        if ((1 & n && (b(0, "span", 5), I(1), v()), 2 & n)) {
          const e = T();
          w(1), ye("(", e.group.label, ")");
        }
      }
      const RG = ["*"],
        DA = new Vr("12.2.5"),
        PG = new P("mat-sanity-checks", {
          providedIn: "root",
          factory: function () {
            return !0;
          },
        });
      let Hs,
        ut = (() => {
          class n {
            constructor(e, i, r) {
              (this._hasDoneGlobalChecks = !1),
                (this._document = r),
                e._applyBodyHighContrastModeCssClasses(),
                (this._sanityChecks = i),
                this._hasDoneGlobalChecks ||
                  (this._checkDoctypeIsDefined(),
                  this._checkThemeIsPresent(),
                  this._checkCdkVersionMatch(),
                  (this._hasDoneGlobalChecks = !0));
            }
            _getWindow() {
              const e = this._document.defaultView || window;
              return "object" == typeof e && e ? e : null;
            }
            _checkIsEnabled(e) {
              return (
                !(!dm() || this._isTestEnv()) &&
                ("boolean" == typeof this._sanityChecks
                  ? this._sanityChecks
                  : !!this._sanityChecks[e])
              );
            }
            _isTestEnv() {
              const e = this._getWindow();
              return e && (e.__karma__ || e.jasmine);
            }
            _checkDoctypeIsDefined() {
              this._checkIsEnabled("doctype") &&
                !this._document.doctype &&
                console.warn(
                  "Current document does not have a doctype. This may cause some Angular Material components not to behave as expected."
                );
            }
            _checkThemeIsPresent() {
              if (
                !this._checkIsEnabled("theme") ||
                !this._document.body ||
                "function" != typeof getComputedStyle
              )
                return;
              const e = this._document.createElement("div");
              e.classList.add("mat-theme-loaded-marker"),
                this._document.body.appendChild(e);
              const i = getComputedStyle(e);
              i &&
                "none" !== i.display &&
                console.warn(
                  "Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming"
                ),
                this._document.body.removeChild(e);
            }
            _checkCdkVersionMatch() {
              this._checkIsEnabled("version") &&
                DA.full !== vT.full &&
                console.warn(
                  "The Angular Material version (" +
                    DA.full +
                    ") does not match the Angular CDK version (" +
                    vT.full +
                    ").\nPlease ensure the versions of these two packages exactly match."
                );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(bT), m(PG, 8), m(j));
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[hc], hc] })),
            n
          );
        })();
      function Ma(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = We(t);
          }
        };
      }
      function EA(n, t) {
        return class extends n {
          constructor(...e) {
            super(...e), (this.defaultColor = t), (this.color = t);
          }
          get color() {
            return this._color;
          }
          set color(e) {
            const i = e || this.defaultColor;
            i !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`
                ),
              i && this._elementRef.nativeElement.classList.add(`mat-${i}`),
              (this._color = i));
          }
        };
      }
      function MA(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = We(t);
          }
        };
      }
      function FG(n, t = 0) {
        return class extends n {
          constructor(...e) {
            super(...e), (this._tabIndex = t), (this.defaultTabIndex = t);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(e) {
            this._tabIndex = null != e ? Hn(e) : this.defaultTabIndex;
          }
        };
      }
      function SA(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this.stateChanges = new O()), (this.errorState = !1);
          }
          updateErrorState() {
            const t = this.errorState,
              s = (
                this.errorStateMatcher || this._defaultErrorStateMatcher
              ).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            s !== t && ((this.errorState = s), this.stateChanges.next());
          }
        };
      }
      function TA(n) {
        return class extends n {
          constructor(...t) {
            super(...t),
              (this._isInitialized = !1),
              (this._pendingSubscribers = []),
              (this.initialized = new Ce((e) => {
                this._isInitialized
                  ? this._notifySubscriber(e)
                  : this._pendingSubscribers.push(e);
              }));
          }
          _markInitialized() {
            (this._isInitialized = !0),
              this._pendingSubscribers.forEach(this._notifySubscriber),
              (this._pendingSubscribers = null);
          }
          _notifySubscriber(t) {
            t.next(), t.complete();
          }
        };
      }
      try {
        Hs = "undefined" != typeof Intl;
      } catch (n) {
        Hs = !1;
      }
      let yy = (() => {
        class n {
          isErrorState(e, i) {
            return !!(e && e.invalid && (e.touched || (i && i.submitted)));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n();
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      class YG {
        constructor(t, e, i) {
          (this._renderer = t),
            (this.element = e),
            (this.config = i),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const kA = { enterDuration: 225, exitDuration: 150 },
        by = uc({ passive: !0 }),
        NA = ["mousedown", "touchstart"],
        RA = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class JG {
        constructor(t, e, i, r) {
          (this._target = t),
            (this._ngZone = e),
            (this._isPointerDown = !1),
            (this._activeRipples = new Set()),
            (this._pointerUpEventsRegistered = !1),
            r.isBrowser && (this._containerElement = vr(i));
        }
        fadeInRipple(t, e, i = {}) {
          const r = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            s = Object.assign(Object.assign({}, kA), i.animation);
          i.centered &&
            ((t = r.left + r.width / 2), (e = r.top + r.height / 2));
          const o =
              i.radius ||
              (function (n, t, e) {
                const i = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
                  r = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
                return Math.sqrt(i * i + r * r);
              })(t, e, r),
            a = t - r.left,
            l = e - r.top,
            c = s.enterDuration,
            u = document.createElement("div");
          u.classList.add("mat-ripple-element"),
            (u.style.left = a - o + "px"),
            (u.style.top = l - o + "px"),
            (u.style.height = 2 * o + "px"),
            (u.style.width = 2 * o + "px"),
            null != i.color && (u.style.backgroundColor = i.color),
            (u.style.transitionDuration = `${c}ms`),
            this._containerElement.appendChild(u),
            (function (n) {
              window.getComputedStyle(n).getPropertyValue("opacity");
            })(u),
            (u.style.transform = "scale(1)");
          const d = new YG(this, u, i);
          return (
            (d.state = 0),
            this._activeRipples.add(d),
            i.persistent || (this._mostRecentTransientRipple = d),
            this._runTimeoutOutsideZone(() => {
              const h = d === this._mostRecentTransientRipple;
              (d.state = 1),
                !i.persistent && (!h || !this._isPointerDown) && d.fadeOut();
            }, c),
            d
          );
        }
        fadeOutRipple(t) {
          const e = this._activeRipples.delete(t);
          if (
            (t === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            this._activeRipples.size || (this._containerRect = null),
            !e)
          )
            return;
          const i = t.element,
            r = Object.assign(Object.assign({}, kA), t.config.animation);
          (i.style.transitionDuration = `${r.exitDuration}ms`),
            (i.style.opacity = "0"),
            (t.state = 2),
            this._runTimeoutOutsideZone(() => {
              (t.state = 3), i.parentNode.removeChild(i);
            }, r.exitDuration);
        }
        fadeOutAll() {
          this._activeRipples.forEach((t) => t.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._activeRipples.forEach((t) => {
            t.config.persistent || t.fadeOut();
          });
        }
        setupTriggerEvents(t) {
          const e = vr(t);
          !e ||
            e === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = e),
            this._registerEvents(NA));
        }
        handleEvent(t) {
          "mousedown" === t.type
            ? this._onMousedown(t)
            : "touchstart" === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._registerEvents(RA),
              (this._pointerUpEventsRegistered = !0));
        }
        _onMousedown(t) {
          const e = cT(t),
            i =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !e &&
            !i &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled && !uT(t)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let i = 0; i < e.length; i++)
              this.fadeInRipple(
                e[i].clientX,
                e[i].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          !this._isPointerDown ||
            ((this._isPointerDown = !1),
            this._activeRipples.forEach((t) => {
              !t.config.persistent &&
                (1 === t.state ||
                  (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _runTimeoutOutsideZone(t, e = 0) {
          this._ngZone.runOutsideAngular(() => setTimeout(t, e));
        }
        _registerEvents(t) {
          this._ngZone.runOutsideAngular(() => {
            t.forEach((e) => {
              this._triggerElement.addEventListener(e, this, by);
            });
          });
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (NA.forEach((t) => {
              this._triggerElement.removeEventListener(t, this, by);
            }),
            this._pointerUpEventsRegistered &&
              RA.forEach((t) => {
                this._triggerElement.removeEventListener(t, this, by);
              }));
        }
      }
      const ZG = new P("mat-ripple-global-options");
      let xh = (() => {
          class n {
            constructor(e, i, r, s, o) {
              (this._elementRef = e),
                (this._animationMode = o),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = s || {}),
                (this._rippleRenderer = new JG(this, i, e, r));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && this.fadeOutAllNonPersistent(),
                (this._disabled = e),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(e) {
              (this._trigger = e), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: Object.assign(
                  Object.assign(
                    Object.assign({}, this._globalOptions.animation),
                    "NoopAnimations" === this._animationMode
                      ? { enterDuration: 0, exitDuration: 0 }
                      : {}
                  ),
                  this.animation
                ),
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(e, i = 0, r) {
              return "number" == typeof e
                ? this._rippleRenderer.fadeInRipple(
                    e,
                    i,
                    Object.assign(Object.assign({}, this.rippleConfig), r)
                  )
                : this._rippleRenderer.fadeInRipple(
                    0,
                    0,
                    Object.assign(Object.assign({}, this.rippleConfig), e)
                  );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(L), f(H), f(je), f(ZG, 8), f(Bs, 8));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && q("mat-ripple-unbounded", i.unbounded);
              },
              inputs: {
                radius: ["matRippleRadius", "radius"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                animation: ["matRippleAnimation", "animation"],
              },
              exportAs: ["matRipple"],
            })),
            n
          );
        })(),
        IA = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[ut, lc], ut] })),
            n
          );
        })(),
        e7 = (() => {
          class n {
            constructor(e) {
              (this._animationMode = e),
                (this.state = "unchecked"),
                (this.disabled = !1);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Bs, 8));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-pseudo-checkbox"]],
              hostAttrs: [1, "mat-pseudo-checkbox"],
              hostVars: 8,
              hostBindings: function (e, i) {
                2 & e &&
                  q(
                    "mat-pseudo-checkbox-indeterminate",
                    "indeterminate" === i.state
                  )("mat-pseudo-checkbox-checked", "checked" === i.state)(
                    "mat-pseudo-checkbox-disabled",
                    i.disabled
                  )(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              inputs: { state: "state", disabled: "disabled" },
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              styles: [
                '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        t7 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[ut]] })),
            n
          );
        })();
      const vy = new P("MAT_OPTION_PARENT_COMPONENT"),
        n7 = Ma(class {});
      let i7 = 0,
        xA = (() => {
          class n extends n7 {
            constructor(e) {
              var i;
              super(),
                (this._labelId = "mat-optgroup-label-" + i7++),
                (this._inert =
                  null !== (i = null == e ? void 0 : e.inertGroups) &&
                  void 0 !== i &&
                  i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(vy, 8));
            }),
            (n.ɵdir = M({
              type: n,
              inputs: { label: "label" },
              features: [B],
            })),
            n
          );
        })();
      const wy = new P("MatOptgroup");
      let r7 = 0;
      class s7 {
        constructor(t, e = !1) {
          (this.source = t), (this.isUserInput = e);
        }
      }
      let o7 = (() => {
          class n {
            constructor(e, i, r, s) {
              (this._element = e),
                (this._changeDetectorRef = i),
                (this._parent = r),
                (this.group = s),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ""),
                (this.id = "mat-option-" + r7++),
                (this.onSelectionChange = new F()),
                (this._stateChanges = new O());
            }
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(e) {
              this._disabled = We(e);
            }
            get disableRipple() {
              return this._parent && this._parent.disableRipple;
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._getHostElement().textContent || "").trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent());
            }
            focus(e, i) {
              const r = this._getHostElement();
              "function" == typeof r.focus && r.focus(i);
            }
            setActiveStyles() {
              this._active ||
                ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active &&
                ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(e) {
              (13 === e.keyCode || 32 === e.keyCode) &&
                !Is(e) &&
                (this._selectViaInteraction(), e.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getAriaSelected() {
              return this.selected || (!this.multiple && null);
            }
            _getTabIndex() {
              return this.disabled ? "-1" : "0";
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const e = this.viewValue;
                e !== this._mostRecentViewValue &&
                  ((this._mostRecentViewValue = e), this._stateChanges.next());
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(e = !1) {
              this.onSelectionChange.emit(new s7(this, e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(L), f(Be), f(void 0), f(xA));
            }),
            (n.ɵdir = M({
              type: n,
              inputs: { id: "id", disabled: "disabled", value: "value" },
              outputs: { onSelectionChange: "onSelectionChange" },
            })),
            n
          );
        })(),
        OA = (() => {
          class n extends o7 {
            constructor(e, i, r, s) {
              super(e, i, r, s);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(L), f(Be), f(vy, 8), f(wy, 8));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-option"]],
              hostAttrs: [
                "role",
                "option",
                1,
                "mat-option",
                "mat-focus-indicator",
              ],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  R("click", function () {
                    return i._selectViaInteraction();
                  })("keydown", function (s) {
                    return i._handleKeydown(s);
                  }),
                  2 & e &&
                    (Bt("id", i.id),
                    X("tabindex", i._getTabIndex())(
                      "aria-selected",
                      i._getAriaSelected()
                    )("aria-disabled", i.disabled.toString()),
                    q("mat-selected", i.selected)(
                      "mat-option-multiple",
                      i.multiple
                    )("mat-active", i.active)(
                      "mat-option-disabled",
                      i.disabled
                    ));
              },
              exportAs: ["matOption"],
              features: [B],
              ngContentSelectors: RG,
              decls: 5,
              vars: 4,
              consts: [
                [
                  "class",
                  "mat-option-pseudo-checkbox",
                  3,
                  "state",
                  "disabled",
                  4,
                  "ngIf",
                ],
                [1, "mat-option-text"],
                ["class", "cdk-visually-hidden", 4, "ngIf"],
                [
                  "mat-ripple",
                  "",
                  1,
                  "mat-option-ripple",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [1, "mat-option-pseudo-checkbox", 3, "state", "disabled"],
                [1, "cdk-visually-hidden"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Wt(),
                  S(0, kG, 1, 2, "mat-pseudo-checkbox", 0),
                  b(1, "span", 1),
                  Ye(2),
                  v(),
                  S(3, NG, 2, 1, "span", 2),
                  Z(4, "div", 3)),
                  2 & e &&
                    (D("ngIf", i.multiple),
                    w(3),
                    D("ngIf", i.group && i.group._inert),
                    w(1),
                    D("matRippleTrigger", i._getHostElement())(
                      "matRippleDisabled",
                      i.disabled || i.disableRipple
                    ));
              },
              directives: [bt, xh, e7],
              styles: [
                ".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })();
      function PA(n, t, e) {
        if (e.length) {
          let i = t.toArray(),
            r = e.toArray(),
            s = 0;
          for (let o = 0; o < n + 1; o++)
            i[o].group && i[o].group === r[s] && s++;
          return s;
        }
        return 0;
      }
      let FA = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = K({ type: n })),
          (n.ɵinj = W({ imports: [[IA, Et, ut, t7]] })),
          n
        );
      })();
      function l7(n, t) {}
      class Cy {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.maxWidth = "80vw"),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = !0),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const c7 = {
        dialogContainer: ai("dialogContainer", [
          gt("void, exit", we({ opacity: 0, transform: "scale(0.7)" })),
          gt("enter", we({ transform: "none" })),
          St(
            "* => enter",
            Ut(
              "150ms cubic-bezier(0, 0, 0.2, 1)",
              we({ transform: "none", opacity: 1 })
            )
          ),
          St(
            "* => void, * => exit",
            Ut("75ms cubic-bezier(0.4, 0.0, 0.2, 1)", we({ opacity: 0 }))
          ),
        ]),
      };
      let u7 = (() => {
          class n extends rh {
            constructor(e, i, r, s, o, a) {
              super(),
                (this._elementRef = e),
                (this._focusTrapFactory = i),
                (this._changeDetectorRef = r),
                (this._config = o),
                (this._focusMonitor = a),
                (this._animationStateChanged = new F()),
                (this._elementFocusedBeforeDialogWasOpened = null),
                (this._closeInteractionType = null),
                (this.attachDomPortal = (l) => (
                  this._portalOutlet.hasAttached(),
                  this._portalOutlet.attachDomPortal(l)
                )),
                (this._ariaLabelledBy = o.ariaLabelledBy || null),
                (this._document = s);
            }
            _initializeWithAttachedContent() {
              this._setupFocusTrap(),
                this._capturePreviouslyFocusedElement(),
                this._focusDialogContainer();
            }
            attachComponentPortal(e) {
              return (
                this._portalOutlet.hasAttached(),
                this._portalOutlet.attachComponentPortal(e)
              );
            }
            attachTemplatePortal(e) {
              return (
                this._portalOutlet.hasAttached(),
                this._portalOutlet.attachTemplatePortal(e)
              );
            }
            _recaptureFocus() {
              this._containsFocus() ||
                ((!this._config.autoFocus ||
                  !this._focusTrap.focusInitialElement()) &&
                  this._elementRef.nativeElement.focus());
            }
            _trapFocus() {
              this._config.autoFocus
                ? this._focusTrap.focusInitialElementWhenReady()
                : this._containsFocus() ||
                  this._elementRef.nativeElement.focus();
            }
            _restoreFocus() {
              const e = this._elementFocusedBeforeDialogWasOpened;
              if (
                this._config.restoreFocus &&
                e &&
                "function" == typeof e.focus
              ) {
                const i = th(),
                  r = this._elementRef.nativeElement;
                (!i || i === this._document.body || i === r || r.contains(i)) &&
                  (this._focusMonitor
                    ? (this._focusMonitor.focusVia(
                        e,
                        this._closeInteractionType
                      ),
                      (this._closeInteractionType = null))
                    : e.focus());
              }
              this._focusTrap && this._focusTrap.destroy();
            }
            _setupFocusTrap() {
              this._focusTrap = this._focusTrapFactory.create(
                this._elementRef.nativeElement
              );
            }
            _capturePreviouslyFocusedElement() {
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = th());
            }
            _focusDialogContainer() {
              this._elementRef.nativeElement.focus &&
                this._elementRef.nativeElement.focus();
            }
            _containsFocus() {
              const e = this._elementRef.nativeElement,
                i = th();
              return e === i || e.contains(i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(L), f(lT), f(Be), f(j, 8), f(Cy), f(Os));
            }),
            (n.ɵdir = M({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && Qe(ba, 7), 2 & e)) {
                  let r;
                  U((r = z())) && (i._portalOutlet = r.first);
                }
              },
              features: [B],
            })),
            n
          );
        })(),
        d7 = (() => {
          class n extends u7 {
            constructor() {
              super(...arguments), (this._state = "enter");
            }
            _onAnimationDone({ toState: e, totalTime: i }) {
              "enter" === e
                ? (this._trapFocus(),
                  this._animationStateChanged.next({
                    state: "opened",
                    totalTime: i,
                  }))
                : "exit" === e &&
                  (this._restoreFocus(),
                  this._animationStateChanged.next({
                    state: "closed",
                    totalTime: i,
                  }));
            }
            _onAnimationStart({ toState: e, totalTime: i }) {
              "enter" === e
                ? this._animationStateChanged.next({
                    state: "opening",
                    totalTime: i,
                  })
                : ("exit" === e || "void" === e) &&
                  this._animationStateChanged.next({
                    state: "closing",
                    totalTime: i,
                  });
            }
            _startExitAnimation() {
              (this._state = "exit"), this._changeDetectorRef.markForCheck();
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-dialog-container"]],
              hostAttrs: [
                "tabindex",
                "-1",
                "aria-modal",
                "true",
                1,
                "mat-dialog-container",
              ],
              hostVars: 6,
              hostBindings: function (e, i) {
                1 & e &&
                  Pu("@dialogContainer.start", function (s) {
                    return i._onAnimationStart(s);
                  })("@dialogContainer.done", function (s) {
                    return i._onAnimationDone(s);
                  }),
                  2 & e &&
                    (Bt("id", i._id),
                    X("role", i._config.role)(
                      "aria-labelledby",
                      i._config.ariaLabel ? null : i._ariaLabelledBy
                    )("aria-label", i._config.ariaLabel)(
                      "aria-describedby",
                      i._config.ariaDescribedBy || null
                    ),
                    Vu("@dialogContainer", i._state));
              },
              features: [B],
              decls: 1,
              vars: 0,
              consts: [["cdkPortalOutlet", ""]],
              template: function (e, i) {
                1 & e && S(0, l7, 0, 0, "ng-template", 0);
              },
              directives: [ba],
              styles: [
                ".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n",
              ],
              encapsulation: 2,
              data: { animation: [c7.dialogContainer] },
            })),
            n
          );
        })(),
        h7 = 0;
      class Dy {
        constructor(t, e, i = "mat-dialog-" + h7++) {
          (this._overlayRef = t),
            (this._containerInstance = e),
            (this.id = i),
            (this.disableClose = this._containerInstance._config.disableClose),
            (this._afterOpened = new O()),
            (this._afterClosed = new O()),
            (this._beforeClosed = new O()),
            (this._state = 0),
            (e._id = i),
            e._animationStateChanged
              .pipe(
                Pe((r) => "opened" === r.state),
                Oe(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            e._animationStateChanged
              .pipe(
                Pe((r) => "closed" === r.state),
                Oe(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            t.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._afterClosed.next(this._result),
                this._afterClosed.complete(),
                (this.componentInstance = null),
                this._overlayRef.dispose();
            }),
            t
              .keydownEvents()
              .pipe(Pe((r) => 27 === r.keyCode && !this.disableClose && !Is(r)))
              .subscribe((r) => {
                r.preventDefault(), Ey(this, "keyboard");
              }),
            t.backdropClick().subscribe(() => {
              this.disableClose
                ? this._containerInstance._recaptureFocus()
                : Ey(this, "mouse");
            });
        }
        close(t) {
          (this._result = t),
            this._containerInstance._animationStateChanged
              .pipe(
                Pe((e) => "closing" === e.state),
                Oe(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(t),
                  this._beforeClosed.complete(),
                  this._overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    e.totalTime + 100
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._afterClosed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._overlayRef.backdropClick();
        }
        keydownEvents() {
          return this._overlayRef.keydownEvents();
        }
        updatePosition(t) {
          let e = this._getPositionStrategy();
          return (
            t && (t.left || t.right)
              ? t.left
                ? e.left(t.left)
                : e.right(t.right)
              : e.centerHorizontally(),
            t && (t.top || t.bottom)
              ? t.top
                ? e.top(t.top)
                : e.bottom(t.bottom)
              : e.centerVertically(),
            this._overlayRef.updatePosition(),
            this
          );
        }
        updateSize(t = "", e = "") {
          return (
            this._overlayRef.updateSize({ width: t, height: e }),
            this._overlayRef.updatePosition(),
            this
          );
        }
        addPanelClass(t) {
          return this._overlayRef.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this._overlayRef.removePanelClass(t), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2), this._overlayRef.dispose();
        }
        _getPositionStrategy() {
          return this._overlayRef.getConfig().positionStrategy;
        }
      }
      function Ey(n, t, e) {
        return (
          void 0 !== n._containerInstance &&
            (n._containerInstance._closeInteractionType = t),
          n.close(e)
        );
      }
      const LA = new P("MatDialogData"),
        f7 = new P("mat-dialog-default-options"),
        VA = new P("mat-dialog-scroll-strategy"),
        g7 = {
          provide: VA,
          deps: [oi],
          useFactory: function (n) {
            return () => n.scrollStrategies.block();
          },
        };
      let m7 = (() => {
          class n {
            constructor(e, i, r, s, o, a, l, c, u) {
              (this._overlay = e),
                (this._injector = i),
                (this._defaultOptions = r),
                (this._parentDialog = s),
                (this._overlayContainer = o),
                (this._dialogRefConstructor = l),
                (this._dialogContainerType = c),
                (this._dialogDataToken = u),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new O()),
                (this._afterOpenedAtThisLevel = new O()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = oa(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(Bn(void 0))
                )),
                (this._scrollStrategy = a);
            }
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            open(e, i) {
              (i = (function (n, t) {
                return Object.assign(Object.assign({}, t), n);
              })(i, this._defaultOptions || new Cy())).id &&
                this.getDialogById(i.id);
              const r = this._createOverlay(i),
                s = this._attachDialogContainer(r, i),
                o = this._attachDialogContent(e, s, r, i);
              return (
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(o),
                o.afterClosed().subscribe(() => this._removeOpenDialog(o)),
                this.afterOpened.next(o),
                s._initializeWithAttachedContent(),
                o
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _createOverlay(e) {
              const i = this._getOverlayConfig(e);
              return this._overlay.create(i);
            }
            _getOverlayConfig(e) {
              const i = new ah({
                positionStrategy: this._overlay.position().global(),
                scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
                panelClass: e.panelClass,
                hasBackdrop: e.hasBackdrop,
                direction: e.direction,
                minWidth: e.minWidth,
                minHeight: e.minHeight,
                maxWidth: e.maxWidth,
                maxHeight: e.maxHeight,
                disposeOnNavigation: e.closeOnNavigation,
              });
              return e.backdropClass && (i.backdropClass = e.backdropClass), i;
            }
            _attachDialogContainer(e, i) {
              const s = ae.create({
                  parent:
                    (i && i.viewContainerRef && i.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: Cy, useValue: i }],
                }),
                o = new ya(
                  this._dialogContainerType,
                  i.viewContainerRef,
                  s,
                  i.componentFactoryResolver
                );
              return e.attach(o).instance;
            }
            _attachDialogContent(e, i, r, s) {
              const o = new this._dialogRefConstructor(r, i, s.id);
              if (e instanceof Se)
                i.attachTemplatePortal(
                  new fc(e, null, { $implicit: s.data, dialogRef: o })
                );
              else {
                const a = this._createInjector(s, o, i),
                  l = i.attachComponentPortal(new ya(e, s.viewContainerRef, a));
                o.componentInstance = l.instance;
              }
              return (
                o.updateSize(s.width, s.height).updatePosition(s.position), o
              );
            }
            _createInjector(e, i, r) {
              const s = e && e.viewContainerRef && e.viewContainerRef.injector,
                o = [
                  { provide: this._dialogContainerType, useValue: r },
                  { provide: this._dialogDataToken, useValue: e.data },
                  { provide: this._dialogRefConstructor, useValue: i },
                ];
              return (
                e.direction &&
                  (!s || !s.get(si, null, te.Optional)) &&
                  o.push({
                    provide: si,
                    useValue: { value: e.direction, change: J() },
                  }),
                ae.create({ parent: s || this._injector, providers: o })
              );
            }
            _removeOpenDialog(e) {
              const i = this.openDialogs.indexOf(e);
              i > -1 &&
                (this.openDialogs.splice(i, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((r, s) => {
                    r
                      ? s.setAttribute("aria-hidden", r)
                      : s.removeAttribute("aria-hidden");
                  }),
                  this._ariaHiddenElements.clear(),
                  this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const e = this._overlayContainer.getContainerElement();
              if (e.parentElement) {
                const i = e.parentElement.children;
                for (let r = i.length - 1; r > -1; r--) {
                  let s = i[r];
                  s !== e &&
                    "SCRIPT" !== s.nodeName &&
                    "STYLE" !== s.nodeName &&
                    !s.hasAttribute("aria-live") &&
                    (this._ariaHiddenElements.set(
                      s,
                      s.getAttribute("aria-hidden")
                    ),
                    s.setAttribute("aria-hidden", "true"));
                }
              }
            }
            _closeDialogs(e) {
              let i = e.length;
              for (; i--; ) e[i].close();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                f(oi),
                f(ae),
                f(void 0),
                f(void 0),
                f(pc),
                f(void 0),
                f(po),
                f(po),
                f(P)
              );
            }),
            (n.ɵdir = M({ type: n })),
            n
          );
        })(),
        Oh = (() => {
          class n extends m7 {
            constructor(e, i, r, s, o, a, l) {
              super(e, i, s, a, l, o, Dy, d7, LA);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                m(oi),
                m(ae),
                m(ra, 8),
                m(f7, 8),
                m(VA),
                m(n, 12),
                m(pc)
              );
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        y7 = 0,
        b7 = (() => {
          class n {
            constructor(e, i, r) {
              (this.dialogRef = e),
                (this._elementRef = i),
                (this._dialog = r),
                (this.type = "button");
            }
            ngOnInit() {
              this.dialogRef ||
                (this.dialogRef = BA(
                  this._elementRef,
                  this._dialog.openDialogs
                ));
            }
            ngOnChanges(e) {
              const i = e._matDialogClose || e._matDialogCloseResult;
              i && (this.dialogResult = i.currentValue);
            }
            _onButtonClick(e) {
              Ey(
                this.dialogRef,
                0 === e.screenX && 0 === e.screenY ? "keyboard" : "mouse",
                this.dialogResult
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Dy, 8), f(L), f(Oh));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["", "mat-dialog-close", ""],
                ["", "matDialogClose", ""],
              ],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  R("click", function (s) {
                    return i._onButtonClick(s);
                  }),
                  2 & e && X("aria-label", i.ariaLabel || null)("type", i.type);
              },
              inputs: {
                type: "type",
                dialogResult: ["mat-dialog-close", "dialogResult"],
                ariaLabel: ["aria-label", "ariaLabel"],
                _matDialogClose: ["matDialogClose", "_matDialogClose"],
              },
              exportAs: ["matDialogClose"],
              features: [Me],
            })),
            n
          );
        })(),
        v7 = (() => {
          class n {
            constructor(e, i, r) {
              (this._dialogRef = e),
                (this._elementRef = i),
                (this._dialog = r),
                (this.id = "mat-dialog-title-" + y7++);
            }
            ngOnInit() {
              this._dialogRef ||
                (this._dialogRef = BA(
                  this._elementRef,
                  this._dialog.openDialogs
                )),
                this._dialogRef &&
                  Promise.resolve().then(() => {
                    const e = this._dialogRef._containerInstance;
                    e && !e._ariaLabelledBy && (e._ariaLabelledBy = this.id);
                  });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Dy, 8), f(L), f(Oh));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["", "mat-dialog-title", ""],
                ["", "matDialogTitle", ""],
              ],
              hostAttrs: [1, "mat-dialog-title"],
              hostVars: 1,
              hostBindings: function (e, i) {
                2 & e && Bt("id", i.id);
              },
              inputs: { id: "id" },
              exportAs: ["matDialogTitle"],
            })),
            n
          );
        })(),
        w7 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["", "mat-dialog-content", ""],
                ["mat-dialog-content"],
                ["", "matDialogContent", ""],
              ],
              hostAttrs: [1, "mat-dialog-content"],
            })),
            n
          );
        })(),
        C7 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["", "mat-dialog-actions", ""],
                ["mat-dialog-actions"],
                ["", "matDialogActions", ""],
              ],
              hostAttrs: [1, "mat-dialog-actions"],
            })),
            n
          );
        })();
      function BA(n, t) {
        let e = n.nativeElement.parentElement;
        for (; e && !e.classList.contains("mat-dialog-container"); )
          e = e.parentElement;
        return e ? t.find((i) => i.id === e.id) : null;
      }
      let D7 = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = K({ type: n })),
          (n.ɵinj = W({ providers: [Oh, g7], imports: [[lh, I_, ut], ut] })),
          n
        );
      })();
      const E7 = [[["caption"]], [["colgroup"], ["col"]]],
        M7 = ["caption", "colgroup, col"];
      function My(n) {
        return class extends n {
          constructor(...t) {
            super(...t), (this._sticky = !1), (this._hasStickyChanged = !1);
          }
          get sticky() {
            return this._sticky;
          }
          set sticky(t) {
            const e = this._sticky;
            (this._sticky = We(t)),
              (this._hasStickyChanged = e !== this._sticky);
          }
          hasStickyChanged() {
            const t = this._hasStickyChanged;
            return (this._hasStickyChanged = !1), t;
          }
          resetStickyChanged() {
            this._hasStickyChanged = !1;
          }
        };
      }
      const Sa = new P("CDK_TABLE");
      let Ta = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Se));
            }),
            (n.ɵdir = M({ type: n, selectors: [["", "cdkCellDef", ""]] })),
            n
          );
        })(),
        Aa = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Se));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "cdkHeaderCellDef", ""]],
            })),
            n
          );
        })(),
        Ph = (() => {
          class n {
            constructor(e) {
              this.template = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Se));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "cdkFooterCellDef", ""]],
            })),
            n
          );
        })();
      class k7 {}
      const N7 = My(k7);
      let Cr = (() => {
        class n extends N7 {
          constructor(e) {
            super(), (this._table = e), (this._stickyEnd = !1);
          }
          get name() {
            return this._name;
          }
          set name(e) {
            this._setNameInput(e);
          }
          get stickyEnd() {
            return this._stickyEnd;
          }
          set stickyEnd(e) {
            const i = this._stickyEnd;
            (this._stickyEnd = We(e)),
              (this._hasStickyChanged = i !== this._stickyEnd);
          }
          _updateColumnCssClassName() {
            this._columnCssClassName = [
              `cdk-column-${this.cssClassFriendlyName}`,
            ];
          }
          _setNameInput(e) {
            e &&
              ((this._name = e),
              (this.cssClassFriendlyName = e.replace(/[^a-z0-9_-]/gi, "-")),
              this._updateColumnCssClassName());
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(f(Sa, 8));
          }),
          (n.ɵdir = M({
            type: n,
            selectors: [["", "cdkColumnDef", ""]],
            contentQueries: function (e, i, r) {
              if (
                (1 & e && (me(r, Ta, 5), me(r, Aa, 5), me(r, Ph, 5)), 2 & e)
              ) {
                let s;
                U((s = z())) && (i.cell = s.first),
                  U((s = z())) && (i.headerCell = s.first),
                  U((s = z())) && (i.footerCell = s.first);
              }
            },
            inputs: {
              sticky: "sticky",
              name: ["cdkColumnDef", "name"],
              stickyEnd: "stickyEnd",
            },
            features: [
              Y([{ provide: "MAT_SORT_HEADER_COLUMN_DEF", useExisting: n }]),
              B,
            ],
          })),
          n
        );
      })();
      class Sy {
        constructor(t, e) {
          const i = e.nativeElement.classList;
          for (const r of t._columnCssClassName) i.add(r);
        }
      }
      let Ty = (() => {
          class n extends Sy {
            constructor(e, i) {
              super(e, i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Cr), f(L));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["cdk-header-cell"], ["th", "cdk-header-cell", ""]],
              hostAttrs: ["role", "columnheader", 1, "cdk-header-cell"],
              features: [B],
            })),
            n
          );
        })(),
        Ay = (() => {
          class n extends Sy {
            constructor(e, i) {
              var r;
              if (
                (super(e, i),
                1 ===
                  (null === (r = e._table) || void 0 === r
                    ? void 0
                    : r._elementRef.nativeElement.nodeType))
              ) {
                const s =
                  e._table._elementRef.nativeElement.getAttribute("role");
                i.nativeElement.setAttribute(
                  "role",
                  "grid" === s || "treegrid" === s ? "gridcell" : "cell"
                );
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Cr), f(L));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["cdk-cell"], ["td", "cdk-cell", ""]],
              hostAttrs: [1, "cdk-cell"],
              features: [B],
            })),
            n
          );
        })();
      class $A {
        constructor() {
          (this.tasks = []), (this.endTasks = []);
        }
      }
      const ky = new P("_COALESCED_STYLE_SCHEDULER");
      let jA = (() => {
          class n {
            constructor(e) {
              (this._ngZone = e),
                (this._currentSchedule = null),
                (this._destroyed = new O());
            }
            schedule(e) {
              this._createScheduleIfNeeded(),
                this._currentSchedule.tasks.push(e);
            }
            scheduleEnd(e) {
              this._createScheduleIfNeeded(),
                this._currentSchedule.endTasks.push(e);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _createScheduleIfNeeded() {
              this._currentSchedule ||
                ((this._currentSchedule = new $A()),
                this._getScheduleObservable()
                  .pipe(re(this._destroyed))
                  .subscribe(() => {
                    for (
                      ;
                      this._currentSchedule.tasks.length ||
                      this._currentSchedule.endTasks.length;

                    ) {
                      const e = this._currentSchedule;
                      this._currentSchedule = new $A();
                      for (const i of e.tasks) i();
                      for (const i of e.endTasks) i();
                    }
                    this._currentSchedule = null;
                  }));
            }
            _getScheduleObservable() {
              return this._ngZone.isStable
                ? Pt(Promise.resolve(void 0))
                : this._ngZone.onStable.pipe(Oe(1));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(H));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Ny = (() => {
          class n {
            constructor(e, i) {
              (this.template = e), (this._differs = i);
            }
            ngOnChanges(e) {
              if (!this._columnsDiffer) {
                const i = (e.columns && e.columns.currentValue) || [];
                (this._columnsDiffer = this._differs.find(i).create()),
                  this._columnsDiffer.diff(i);
              }
            }
            getColumnsDiff() {
              return this._columnsDiffer.diff(this.columns);
            }
            extractCellTemplate(e) {
              return this instanceof bc
                ? e.headerCell.template
                : this instanceof vc
                ? e.footerCell.template
                : e.cell.template;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Se), f(Di));
            }),
            (n.ɵdir = M({ type: n, features: [Me] })),
            n
          );
        })();
      class R7 extends Ny {}
      const I7 = My(R7);
      let bc = (() => {
        class n extends I7 {
          constructor(e, i, r) {
            super(e, i), (this._table = r);
          }
          ngOnChanges(e) {
            super.ngOnChanges(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(f(Se), f(Di), f(Sa, 8));
          }),
          (n.ɵdir = M({
            type: n,
            selectors: [["", "cdkHeaderRowDef", ""]],
            inputs: {
              columns: ["cdkHeaderRowDef", "columns"],
              sticky: ["cdkHeaderRowDefSticky", "sticky"],
            },
            features: [B, Me],
          })),
          n
        );
      })();
      class x7 extends Ny {}
      const O7 = My(x7);
      let vc = (() => {
          class n extends O7 {
            constructor(e, i, r) {
              super(e, i), (this._table = r);
            }
            ngOnChanges(e) {
              super.ngOnChanges(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Se), f(Di), f(Sa, 8));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "cdkFooterRowDef", ""]],
              inputs: {
                columns: ["cdkFooterRowDef", "columns"],
                sticky: ["cdkFooterRowDefSticky", "sticky"],
              },
              features: [B, Me],
            })),
            n
          );
        })(),
        Fh = (() => {
          class n extends Ny {
            constructor(e, i, r) {
              super(e, i), (this._table = r);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Se), f(Di), f(Sa, 8));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "cdkRowDef", ""]],
              inputs: {
                columns: ["cdkRowDefColumns", "columns"],
                when: ["cdkRowDefWhen", "when"],
              },
              features: [B],
            })),
            n
          );
        })(),
        Dr = (() => {
          class n {
            constructor(e) {
              (this._viewContainer = e), (n.mostRecentCellOutlet = this);
            }
            ngOnDestroy() {
              n.mostRecentCellOutlet === this &&
                (n.mostRecentCellOutlet = null);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Ze));
            }),
            (n.ɵdir = M({ type: n, selectors: [["", "cdkCellOutlet", ""]] })),
            (n.mostRecentCellOutlet = null),
            n
          );
        })(),
        Ry = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["cdk-header-row"], ["tr", "cdk-header-row", ""]],
              hostAttrs: ["role", "row", 1, "cdk-header-row"],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, i) {
                1 & e && mn(0, 0);
              },
              directives: [Dr],
              encapsulation: 2,
            })),
            n
          );
        })(),
        xy = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["cdk-row"], ["tr", "cdk-row", ""]],
              hostAttrs: ["role", "row", 1, "cdk-row"],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, i) {
                1 & e && mn(0, 0);
              },
              directives: [Dr],
              encapsulation: 2,
            })),
            n
          );
        })(),
        Lh = (() => {
          class n {
            constructor(e) {
              this.templateRef = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Se));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["ng-template", "cdkNoDataRow", ""]],
            })),
            n
          );
        })();
      const UA = ["top", "bottom", "left", "right"];
      class P7 {
        constructor(t, e, i, r, s = !0, o = !0, a) {
          (this._isNativeHtmlTable = t),
            (this._stickCellCss = e),
            (this.direction = i),
            (this._coalescedStyleScheduler = r),
            (this._isBrowser = s),
            (this._needsPositionStickyOnElement = o),
            (this._positionListener = a),
            (this._cachedCellWidths = []),
            (this._borderCellCss = {
              top: `${e}-border-elem-top`,
              bottom: `${e}-border-elem-bottom`,
              left: `${e}-border-elem-left`,
              right: `${e}-border-elem-right`,
            });
        }
        clearStickyPositioning(t, e) {
          const i = [];
          for (const r of t)
            if (r.nodeType === r.ELEMENT_NODE) {
              i.push(r);
              for (let s = 0; s < r.children.length; s++) i.push(r.children[s]);
            }
          this._coalescedStyleScheduler.schedule(() => {
            for (const r of i) this._removeStickyStyle(r, e);
          });
        }
        updateStickyColumns(t, e, i, r = !0) {
          if (
            !t.length ||
            !this._isBrowser ||
            (!e.some((h) => h) && !i.some((h) => h))
          )
            return void (
              this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({ sizes: [] }),
              this._positionListener.stickyEndColumnsUpdated({ sizes: [] }))
            );
          const s = t[0],
            o = s.children.length,
            a = this._getCellWidths(s, r),
            l = this._getStickyStartColumnPositions(a, e),
            c = this._getStickyEndColumnPositions(a, i),
            u = e.lastIndexOf(!0),
            d = i.indexOf(!0);
          this._coalescedStyleScheduler.schedule(() => {
            const h = "rtl" === this.direction,
              p = h ? "right" : "left",
              g = h ? "left" : "right";
            for (const _ of t)
              for (let y = 0; y < o; y++) {
                const E = _.children[y];
                e[y] && this._addStickyStyle(E, p, l[y], y === u),
                  i[y] && this._addStickyStyle(E, g, c[y], y === d);
              }
            this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({
                sizes:
                  -1 === u
                    ? []
                    : a.slice(0, u + 1).map((_, y) => (e[y] ? _ : null)),
              }),
              this._positionListener.stickyEndColumnsUpdated({
                sizes:
                  -1 === d
                    ? []
                    : a
                        .slice(d)
                        .map((_, y) => (i[y + d] ? _ : null))
                        .reverse(),
              }));
          });
        }
        stickRows(t, e, i) {
          if (!this._isBrowser) return;
          const r = "bottom" === i ? t.slice().reverse() : t,
            s = "bottom" === i ? e.slice().reverse() : e,
            o = [],
            a = [],
            l = [];
          for (let u = 0, d = 0; u < r.length; u++) {
            if (!s[u]) continue;
            o[u] = d;
            const h = r[u];
            l[u] = this._isNativeHtmlTable ? Array.from(h.children) : [h];
            const p = h.getBoundingClientRect().height;
            (d += p), (a[u] = p);
          }
          const c = s.lastIndexOf(!0);
          this._coalescedStyleScheduler.schedule(() => {
            var u, d;
            for (let h = 0; h < r.length; h++) {
              if (!s[h]) continue;
              const p = o[h],
                g = h === c;
              for (const _ of l[h]) this._addStickyStyle(_, i, p, g);
            }
            "top" === i
              ? null === (u = this._positionListener) ||
                void 0 === u ||
                u.stickyHeaderRowsUpdated({ sizes: a, offsets: o, elements: l })
              : null === (d = this._positionListener) ||
                void 0 === d ||
                d.stickyFooterRowsUpdated({
                  sizes: a,
                  offsets: o,
                  elements: l,
                });
          });
        }
        updateStickyFooterContainer(t, e) {
          if (!this._isNativeHtmlTable) return;
          const i = t.querySelector("tfoot");
          this._coalescedStyleScheduler.schedule(() => {
            e.some((r) => !r)
              ? this._removeStickyStyle(i, ["bottom"])
              : this._addStickyStyle(i, "bottom", 0, !1);
          });
        }
        _removeStickyStyle(t, e) {
          for (const r of e)
            (t.style[r] = ""), t.classList.remove(this._borderCellCss[r]);
          UA.some((r) => -1 === e.indexOf(r) && t.style[r])
            ? (t.style.zIndex = this._getCalculatedZIndex(t))
            : ((t.style.zIndex = ""),
              this._needsPositionStickyOnElement && (t.style.position = ""),
              t.classList.remove(this._stickCellCss));
        }
        _addStickyStyle(t, e, i, r) {
          t.classList.add(this._stickCellCss),
            r && t.classList.add(this._borderCellCss[e]),
            (t.style[e] = `${i}px`),
            (t.style.zIndex = this._getCalculatedZIndex(t)),
            this._needsPositionStickyOnElement &&
              (t.style.cssText +=
                "position: -webkit-sticky; position: sticky; ");
        }
        _getCalculatedZIndex(t) {
          const e = { top: 100, bottom: 10, left: 1, right: 1 };
          let i = 0;
          for (const r of UA) t.style[r] && (i += e[r]);
          return i ? `${i}` : "";
        }
        _getCellWidths(t, e = !0) {
          if (!e && this._cachedCellWidths.length)
            return this._cachedCellWidths;
          const i = [],
            r = t.children;
          for (let s = 0; s < r.length; s++)
            i.push(r[s].getBoundingClientRect().width);
          return (this._cachedCellWidths = i), i;
        }
        _getStickyStartColumnPositions(t, e) {
          const i = [];
          let r = 0;
          for (let s = 0; s < t.length; s++) e[s] && ((i[s] = r), (r += t[s]));
          return i;
        }
        _getStickyEndColumnPositions(t, e) {
          const i = [];
          let r = 0;
          for (let s = t.length; s > 0; s--) e[s] && ((i[s] = r), (r += t[s]));
          return i;
        }
      }
      const Oy = new P("CDK_SPL");
      let Vh = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Ze), f(L));
            }),
            (n.ɵdir = M({ type: n, selectors: [["", "rowOutlet", ""]] })),
            n
          );
        })(),
        Bh = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Ze), f(L));
            }),
            (n.ɵdir = M({ type: n, selectors: [["", "headerRowOutlet", ""]] })),
            n
          );
        })(),
        Hh = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Ze), f(L));
            }),
            (n.ɵdir = M({ type: n, selectors: [["", "footerRowOutlet", ""]] })),
            n
          );
        })(),
        $h = (() => {
          class n {
            constructor(e, i) {
              (this.viewContainer = e), (this.elementRef = i);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Ze), f(L));
            }),
            (n.ɵdir = M({ type: n, selectors: [["", "noDataRowOutlet", ""]] })),
            n
          );
        })(),
        jh = (() => {
          class n {
            constructor(e, i, r, s, o, a, l, c, u, d, h) {
              (this._differs = e),
                (this._changeDetectorRef = i),
                (this._elementRef = r),
                (this._dir = o),
                (this._platform = l),
                (this._viewRepeater = c),
                (this._coalescedStyleScheduler = u),
                (this._viewportRuler = d),
                (this._stickyPositioningListener = h),
                (this._onDestroy = new O()),
                (this._columnDefsByName = new Map()),
                (this._customColumnDefs = new Set()),
                (this._customRowDefs = new Set()),
                (this._customHeaderRowDefs = new Set()),
                (this._customFooterRowDefs = new Set()),
                (this._headerRowDefChanged = !0),
                (this._footerRowDefChanged = !0),
                (this._stickyColumnStylesNeedReset = !0),
                (this._forceRecalculateCellWidths = !0),
                (this._cachedRenderRowsMap = new Map()),
                (this.stickyCssClass = "cdk-table-sticky"),
                (this.needsPositionStickyOnElement = !0),
                (this._isShowingNoDataRow = !1),
                (this._multiTemplateDataRows = !1),
                (this._fixedLayout = !1),
                (this.contentChanged = new F()),
                (this.viewChange = new rt({ start: 0, end: Number.MAX_VALUE })),
                s ||
                  this._elementRef.nativeElement.setAttribute("role", "table"),
                (this._document = a),
                (this._isNativeHtmlTable =
                  "TABLE" === this._elementRef.nativeElement.nodeName);
            }
            get trackBy() {
              return this._trackByFn;
            }
            set trackBy(e) {
              this._trackByFn = e;
            }
            get dataSource() {
              return this._dataSource;
            }
            set dataSource(e) {
              this._dataSource !== e && this._switchDataSource(e);
            }
            get multiTemplateDataRows() {
              return this._multiTemplateDataRows;
            }
            set multiTemplateDataRows(e) {
              (this._multiTemplateDataRows = We(e)),
                this._rowOutlet &&
                  this._rowOutlet.viewContainer.length &&
                  (this._forceRenderDataRows(),
                  this.updateStickyColumnStyles());
            }
            get fixedLayout() {
              return this._fixedLayout;
            }
            set fixedLayout(e) {
              (this._fixedLayout = We(e)),
                (this._forceRecalculateCellWidths = !0),
                (this._stickyColumnStylesNeedReset = !0);
            }
            ngOnInit() {
              this._setupStickyStyler(),
                this._isNativeHtmlTable && this._applyNativeTableSections(),
                (this._dataDiffer = this._differs
                  .find([])
                  .create((e, i) =>
                    this.trackBy ? this.trackBy(i.dataIndex, i.data) : i
                  )),
                this._viewportRuler
                  .change()
                  .pipe(re(this._onDestroy))
                  .subscribe(() => {
                    this._forceRecalculateCellWidths = !0;
                  });
            }
            ngAfterContentChecked() {
              this._cacheRowDefs(), this._cacheColumnDefs();
              const i =
                this._renderUpdatedColumns() ||
                this._headerRowDefChanged ||
                this._footerRowDefChanged;
              (this._stickyColumnStylesNeedReset =
                this._stickyColumnStylesNeedReset || i),
                (this._forceRecalculateCellWidths = i),
                this._headerRowDefChanged &&
                  (this._forceRenderHeaderRows(),
                  (this._headerRowDefChanged = !1)),
                this._footerRowDefChanged &&
                  (this._forceRenderFooterRows(),
                  (this._footerRowDefChanged = !1)),
                this.dataSource &&
                this._rowDefs.length > 0 &&
                !this._renderChangeSubscription
                  ? this._observeRenderChanges()
                  : this._stickyColumnStylesNeedReset &&
                    this.updateStickyColumnStyles(),
                this._checkStickyStates();
            }
            ngOnDestroy() {
              this._rowOutlet.viewContainer.clear(),
                this._noDataRowOutlet.viewContainer.clear(),
                this._headerRowOutlet.viewContainer.clear(),
                this._footerRowOutlet.viewContainer.clear(),
                this._cachedRenderRowsMap.clear(),
                this._onDestroy.next(),
                this._onDestroy.complete(),
                nh(this.dataSource) && this.dataSource.disconnect(this);
            }
            renderRows() {
              this._renderRows = this._getAllRenderRows();
              const e = this._dataDiffer.diff(this._renderRows);
              if (!e)
                return this._updateNoDataRow(), void this.contentChanged.next();
              const i = this._rowOutlet.viewContainer;
              this._viewRepeater.applyChanges(
                e,
                i,
                (r, s, o) => this._getEmbeddedViewArgs(r.item, o),
                (r) => r.item.data,
                (r) => {
                  1 === r.operation &&
                    r.context &&
                    this._renderCellTemplateForItem(
                      r.record.item.rowDef,
                      r.context
                    );
                }
              ),
                this._updateRowIndexContext(),
                e.forEachIdentityChange((r) => {
                  i.get(r.currentIndex).context.$implicit = r.item.data;
                }),
                this._updateNoDataRow(),
                this.updateStickyColumnStyles(),
                this.contentChanged.next();
            }
            addColumnDef(e) {
              this._customColumnDefs.add(e);
            }
            removeColumnDef(e) {
              this._customColumnDefs.delete(e);
            }
            addRowDef(e) {
              this._customRowDefs.add(e);
            }
            removeRowDef(e) {
              this._customRowDefs.delete(e);
            }
            addHeaderRowDef(e) {
              this._customHeaderRowDefs.add(e),
                (this._headerRowDefChanged = !0);
            }
            removeHeaderRowDef(e) {
              this._customHeaderRowDefs.delete(e),
                (this._headerRowDefChanged = !0);
            }
            addFooterRowDef(e) {
              this._customFooterRowDefs.add(e),
                (this._footerRowDefChanged = !0);
            }
            removeFooterRowDef(e) {
              this._customFooterRowDefs.delete(e),
                (this._footerRowDefChanged = !0);
            }
            setNoDataRow(e) {
              this._customNoDataRow = e;
            }
            updateStickyHeaderRowStyles() {
              const e = this._getRenderedRows(this._headerRowOutlet),
                r = this._elementRef.nativeElement.querySelector("thead");
              r && (r.style.display = e.length ? "" : "none");
              const s = this._headerRowDefs.map((o) => o.sticky);
              this._stickyStyler.clearStickyPositioning(e, ["top"]),
                this._stickyStyler.stickRows(e, s, "top"),
                this._headerRowDefs.forEach((o) => o.resetStickyChanged());
            }
            updateStickyFooterRowStyles() {
              const e = this._getRenderedRows(this._footerRowOutlet),
                r = this._elementRef.nativeElement.querySelector("tfoot");
              r && (r.style.display = e.length ? "" : "none");
              const s = this._footerRowDefs.map((o) => o.sticky);
              this._stickyStyler.clearStickyPositioning(e, ["bottom"]),
                this._stickyStyler.stickRows(e, s, "bottom"),
                this._stickyStyler.updateStickyFooterContainer(
                  this._elementRef.nativeElement,
                  s
                ),
                this._footerRowDefs.forEach((o) => o.resetStickyChanged());
            }
            updateStickyColumnStyles() {
              const e = this._getRenderedRows(this._headerRowOutlet),
                i = this._getRenderedRows(this._rowOutlet),
                r = this._getRenderedRows(this._footerRowOutlet);
              ((this._isNativeHtmlTable && !this._fixedLayout) ||
                this._stickyColumnStylesNeedReset) &&
                (this._stickyStyler.clearStickyPositioning(
                  [...e, ...i, ...r],
                  ["left", "right"]
                ),
                (this._stickyColumnStylesNeedReset = !1)),
                e.forEach((s, o) => {
                  this._addStickyColumnStyles([s], this._headerRowDefs[o]);
                }),
                this._rowDefs.forEach((s) => {
                  const o = [];
                  for (let a = 0; a < i.length; a++)
                    this._renderRows[a].rowDef === s && o.push(i[a]);
                  this._addStickyColumnStyles(o, s);
                }),
                r.forEach((s, o) => {
                  this._addStickyColumnStyles([s], this._footerRowDefs[o]);
                }),
                Array.from(this._columnDefsByName.values()).forEach((s) =>
                  s.resetStickyChanged()
                );
            }
            _getAllRenderRows() {
              const e = [],
                i = this._cachedRenderRowsMap;
              this._cachedRenderRowsMap = new Map();
              for (let r = 0; r < this._data.length; r++) {
                let s = this._data[r];
                const o = this._getRenderRowsForData(s, r, i.get(s));
                this._cachedRenderRowsMap.has(s) ||
                  this._cachedRenderRowsMap.set(s, new WeakMap());
                for (let a = 0; a < o.length; a++) {
                  let l = o[a];
                  const c = this._cachedRenderRowsMap.get(l.data);
                  c.has(l.rowDef)
                    ? c.get(l.rowDef).push(l)
                    : c.set(l.rowDef, [l]),
                    e.push(l);
                }
              }
              return e;
            }
            _getRenderRowsForData(e, i, r) {
              return this._getRowDefs(e, i).map((o) => {
                const a = r && r.has(o) ? r.get(o) : [];
                if (a.length) {
                  const l = a.shift();
                  return (l.dataIndex = i), l;
                }
                return { data: e, rowDef: o, dataIndex: i };
              });
            }
            _cacheColumnDefs() {
              this._columnDefsByName.clear(),
                Uh(
                  this._getOwnDefs(this._contentColumnDefs),
                  this._customColumnDefs
                ).forEach((i) => {
                  this._columnDefsByName.has(i.name),
                    this._columnDefsByName.set(i.name, i);
                });
            }
            _cacheRowDefs() {
              (this._headerRowDefs = Uh(
                this._getOwnDefs(this._contentHeaderRowDefs),
                this._customHeaderRowDefs
              )),
                (this._footerRowDefs = Uh(
                  this._getOwnDefs(this._contentFooterRowDefs),
                  this._customFooterRowDefs
                )),
                (this._rowDefs = Uh(
                  this._getOwnDefs(this._contentRowDefs),
                  this._customRowDefs
                ));
              const e = this._rowDefs.filter((i) => !i.when);
              this._defaultRowDef = e[0];
            }
            _renderUpdatedColumns() {
              const e = (o, a) => o || !!a.getColumnsDiff(),
                i = this._rowDefs.reduce(e, !1);
              i && this._forceRenderDataRows();
              const r = this._headerRowDefs.reduce(e, !1);
              r && this._forceRenderHeaderRows();
              const s = this._footerRowDefs.reduce(e, !1);
              return s && this._forceRenderFooterRows(), i || r || s;
            }
            _switchDataSource(e) {
              (this._data = []),
                nh(this.dataSource) && this.dataSource.disconnect(this),
                this._renderChangeSubscription &&
                  (this._renderChangeSubscription.unsubscribe(),
                  (this._renderChangeSubscription = null)),
                e ||
                  (this._dataDiffer && this._dataDiffer.diff([]),
                  this._rowOutlet.viewContainer.clear()),
                (this._dataSource = e);
            }
            _observeRenderChanges() {
              if (!this.dataSource) return;
              let e;
              nh(this.dataSource)
                ? (e = this.dataSource.connect(this))
                : (function (n) {
                    return (
                      !!n &&
                      (n instanceof Ce ||
                        ("function" == typeof n.lift &&
                          "function" == typeof n.subscribe))
                    );
                  })(this.dataSource)
                ? (e = this.dataSource)
                : Array.isArray(this.dataSource) && (e = J(this.dataSource)),
                (this._renderChangeSubscription = e
                  .pipe(re(this._onDestroy))
                  .subscribe((i) => {
                    (this._data = i || []), this.renderRows();
                  }));
            }
            _forceRenderHeaderRows() {
              this._headerRowOutlet.viewContainer.length > 0 &&
                this._headerRowOutlet.viewContainer.clear(),
                this._headerRowDefs.forEach((e, i) =>
                  this._renderRow(this._headerRowOutlet, e, i)
                ),
                this.updateStickyHeaderRowStyles();
            }
            _forceRenderFooterRows() {
              this._footerRowOutlet.viewContainer.length > 0 &&
                this._footerRowOutlet.viewContainer.clear(),
                this._footerRowDefs.forEach((e, i) =>
                  this._renderRow(this._footerRowOutlet, e, i)
                ),
                this.updateStickyFooterRowStyles();
            }
            _addStickyColumnStyles(e, i) {
              const r = Array.from(i.columns || []).map((a) =>
                  this._columnDefsByName.get(a)
                ),
                s = r.map((a) => a.sticky),
                o = r.map((a) => a.stickyEnd);
              this._stickyStyler.updateStickyColumns(
                e,
                s,
                o,
                !this._fixedLayout || this._forceRecalculateCellWidths
              );
            }
            _getRenderedRows(e) {
              const i = [];
              for (let r = 0; r < e.viewContainer.length; r++) {
                const s = e.viewContainer.get(r);
                i.push(s.rootNodes[0]);
              }
              return i;
            }
            _getRowDefs(e, i) {
              if (1 == this._rowDefs.length) return [this._rowDefs[0]];
              let r = [];
              if (this.multiTemplateDataRows)
                r = this._rowDefs.filter((s) => !s.when || s.when(i, e));
              else {
                let s =
                  this._rowDefs.find((o) => o.when && o.when(i, e)) ||
                  this._defaultRowDef;
                s && r.push(s);
              }
              return r;
            }
            _getEmbeddedViewArgs(e, i) {
              return {
                templateRef: e.rowDef.template,
                context: { $implicit: e.data },
                index: i,
              };
            }
            _renderRow(e, i, r, s = {}) {
              const o = e.viewContainer.createEmbeddedView(i.template, s, r);
              return this._renderCellTemplateForItem(i, s), o;
            }
            _renderCellTemplateForItem(e, i) {
              for (let r of this._getCellTemplates(e))
                Dr.mostRecentCellOutlet &&
                  Dr.mostRecentCellOutlet._viewContainer.createEmbeddedView(
                    r,
                    i
                  );
              this._changeDetectorRef.markForCheck();
            }
            _updateRowIndexContext() {
              const e = this._rowOutlet.viewContainer;
              for (let i = 0, r = e.length; i < r; i++) {
                const o = e.get(i).context;
                (o.count = r),
                  (o.first = 0 === i),
                  (o.last = i === r - 1),
                  (o.even = i % 2 == 0),
                  (o.odd = !o.even),
                  this.multiTemplateDataRows
                    ? ((o.dataIndex = this._renderRows[i].dataIndex),
                      (o.renderIndex = i))
                    : (o.index = this._renderRows[i].dataIndex);
              }
            }
            _getCellTemplates(e) {
              return e && e.columns
                ? Array.from(e.columns, (i) => {
                    const r = this._columnDefsByName.get(i);
                    return e.extractCellTemplate(r);
                  })
                : [];
            }
            _applyNativeTableSections() {
              const e = this._document.createDocumentFragment(),
                i = [
                  { tag: "thead", outlets: [this._headerRowOutlet] },
                  {
                    tag: "tbody",
                    outlets: [this._rowOutlet, this._noDataRowOutlet],
                  },
                  { tag: "tfoot", outlets: [this._footerRowOutlet] },
                ];
              for (const r of i) {
                const s = this._document.createElement(r.tag);
                s.setAttribute("role", "rowgroup");
                for (const o of r.outlets)
                  s.appendChild(o.elementRef.nativeElement);
                e.appendChild(s);
              }
              this._elementRef.nativeElement.appendChild(e);
            }
            _forceRenderDataRows() {
              this._dataDiffer.diff([]),
                this._rowOutlet.viewContainer.clear(),
                this.renderRows();
            }
            _checkStickyStates() {
              const e = (i, r) => i || r.hasStickyChanged();
              this._headerRowDefs.reduce(e, !1) &&
                this.updateStickyHeaderRowStyles(),
                this._footerRowDefs.reduce(e, !1) &&
                  this.updateStickyFooterRowStyles(),
                Array.from(this._columnDefsByName.values()).reduce(e, !1) &&
                  ((this._stickyColumnStylesNeedReset = !0),
                  this.updateStickyColumnStyles());
            }
            _setupStickyStyler() {
              (this._stickyStyler = new P7(
                this._isNativeHtmlTable,
                this.stickyCssClass,
                this._dir ? this._dir.value : "ltr",
                this._coalescedStyleScheduler,
                this._platform.isBrowser,
                this.needsPositionStickyOnElement,
                this._stickyPositioningListener
              )),
                (this._dir ? this._dir.change : J())
                  .pipe(re(this._onDestroy))
                  .subscribe((i) => {
                    (this._stickyStyler.direction = i),
                      this.updateStickyColumnStyles();
                  });
            }
            _getOwnDefs(e) {
              return e.filter((i) => !i._table || i._table === this);
            }
            _updateNoDataRow() {
              const e = this._customNoDataRow || this._noDataRow;
              if (e) {
                const i = 0 === this._rowOutlet.viewContainer.length;
                if (i !== this._isShowingNoDataRow) {
                  const r = this._noDataRowOutlet.viewContainer;
                  i ? r.createEmbeddedView(e.templateRef) : r.clear(),
                    (this._isShowingNoDataRow = i);
                }
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                f(Di),
                f(Be),
                f(L),
                gi("role"),
                f(si, 8),
                f(j),
                f(je),
                f(Ns),
                f(ky),
                f(Rs),
                f(Oy, 12)
              );
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["cdk-table"], ["table", "cdk-table", ""]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e &&
                    (me(r, Lh, 5),
                    me(r, Cr, 5),
                    me(r, Fh, 5),
                    me(r, bc, 5),
                    me(r, vc, 5)),
                  2 & e)
                ) {
                  let s;
                  U((s = z())) && (i._noDataRow = s.first),
                    U((s = z())) && (i._contentColumnDefs = s),
                    U((s = z())) && (i._contentRowDefs = s),
                    U((s = z())) && (i._contentHeaderRowDefs = s),
                    U((s = z())) && (i._contentFooterRowDefs = s);
                }
              },
              viewQuery: function (e, i) {
                if (
                  (1 & e && (Qe(Vh, 7), Qe(Bh, 7), Qe(Hh, 7), Qe($h, 7)), 2 & e)
                ) {
                  let r;
                  U((r = z())) && (i._rowOutlet = r.first),
                    U((r = z())) && (i._headerRowOutlet = r.first),
                    U((r = z())) && (i._footerRowOutlet = r.first),
                    U((r = z())) && (i._noDataRowOutlet = r.first);
                }
              },
              hostAttrs: [1, "cdk-table"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && q("cdk-table-fixed-layout", i.fixedLayout);
              },
              inputs: {
                trackBy: "trackBy",
                dataSource: "dataSource",
                multiTemplateDataRows: "multiTemplateDataRows",
                fixedLayout: "fixedLayout",
              },
              outputs: { contentChanged: "contentChanged" },
              exportAs: ["cdkTable"],
              features: [
                Y([
                  { provide: Sa, useExisting: n },
                  { provide: Ns, useClass: IS },
                  { provide: ky, useClass: jA },
                  { provide: Oy, useValue: null },
                ]),
              ],
              ngContentSelectors: M7,
              decls: 6,
              vars: 0,
              consts: [
                ["headerRowOutlet", ""],
                ["rowOutlet", ""],
                ["noDataRowOutlet", ""],
                ["footerRowOutlet", ""],
              ],
              template: function (e, i) {
                1 & e &&
                  (Wt(E7),
                  Ye(0),
                  Ye(1, 1),
                  mn(2, 0),
                  mn(3, 1),
                  mn(4, 2),
                  mn(5, 3));
              },
              directives: [Bh, Vh, $h, Hh],
              styles: [".cdk-table-fixed-layout{table-layout:fixed}\n"],
              encapsulation: 2,
            })),
            n
          );
        })();
      function Uh(n, t) {
        return n.concat(Array.from(t));
      }
      let L7 = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = K({ type: n })),
          (n.ɵinj = W({ imports: [[N_]] })),
          n
        );
      })();
      const V7 = [[["caption"]], [["colgroup"], ["col"]]],
        B7 = ["caption", "colgroup, col"];
      let Py = (() => {
          class n extends jh {
            constructor() {
              super(...arguments),
                (this.stickyCssClass = "mat-table-sticky"),
                (this.needsPositionStickyOnElement = !1);
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-table"], ["table", "mat-table", ""]],
              hostAttrs: [1, "mat-table"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && q("mat-table-fixed-layout", i.fixedLayout);
              },
              exportAs: ["matTable"],
              features: [
                Y([
                  { provide: Ns, useClass: IS },
                  { provide: jh, useExisting: n },
                  { provide: Sa, useExisting: n },
                  { provide: ky, useClass: jA },
                  { provide: Oy, useValue: null },
                ]),
                B,
              ],
              ngContentSelectors: B7,
              decls: 6,
              vars: 0,
              consts: [
                ["headerRowOutlet", ""],
                ["rowOutlet", ""],
                ["noDataRowOutlet", ""],
                ["footerRowOutlet", ""],
              ],
              template: function (e, i) {
                1 & e &&
                  (Wt(V7),
                  Ye(0),
                  Ye(1, 1),
                  mn(2, 0),
                  mn(3, 1),
                  mn(4, 2),
                  mn(5, 3));
              },
              directives: [Bh, Vh, $h, Hh],
              styles: [
                'mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:""}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\n',
              ],
              encapsulation: 2,
            })),
            n
          );
        })(),
        zh = (() => {
          class n extends Ta {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "matCellDef", ""]],
              features: [Y([{ provide: Ta, useExisting: n }]), B],
            })),
            n
          );
        })(),
        Gh = (() => {
          class n extends Aa {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "matHeaderCellDef", ""]],
              features: [Y([{ provide: Aa, useExisting: n }]), B],
            })),
            n
          );
        })(),
        Wh = (() => {
          class n extends Cr {
            get name() {
              return this._name;
            }
            set name(e) {
              this._setNameInput(e);
            }
            _updateColumnCssClassName() {
              super._updateColumnCssClassName(),
                this._columnCssClassName.push(
                  `mat-column-${this.cssClassFriendlyName}`
                );
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "matColumnDef", ""]],
              inputs: { sticky: "sticky", name: ["matColumnDef", "name"] },
              features: [
                Y([
                  { provide: Cr, useExisting: n },
                  { provide: "MAT_SORT_HEADER_COLUMN_DEF", useExisting: n },
                ]),
                B,
              ],
            })),
            n
          );
        })(),
        qh = (() => {
          class n extends Ty {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵdir = M({
              type: n,
              selectors: [["mat-header-cell"], ["th", "mat-header-cell", ""]],
              hostAttrs: ["role", "columnheader", 1, "mat-header-cell"],
              features: [B],
            })),
            n
          );
        })(),
        Yh = (() => {
          class n extends Ay {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵdir = M({
              type: n,
              selectors: [["mat-cell"], ["td", "mat-cell", ""]],
              hostAttrs: ["role", "gridcell", 1, "mat-cell"],
              features: [B],
            })),
            n
          );
        })(),
        Fy = (() => {
          class n extends bc {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "matHeaderRowDef", ""]],
              inputs: {
                columns: ["matHeaderRowDef", "columns"],
                sticky: ["matHeaderRowDefSticky", "sticky"],
              },
              features: [Y([{ provide: bc, useExisting: n }]), B],
            })),
            n
          );
        })(),
        Ly = (() => {
          class n extends Fh {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "matRowDef", ""]],
              inputs: {
                columns: ["matRowDefColumns", "columns"],
                when: ["matRowDefWhen", "when"],
              },
              features: [Y([{ provide: Fh, useExisting: n }]), B],
            })),
            n
          );
        })(),
        Vy = (() => {
          class n extends Ry {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-header-row"], ["tr", "mat-header-row", ""]],
              hostAttrs: ["role", "row", 1, "mat-header-row"],
              exportAs: ["matHeaderRow"],
              features: [Y([{ provide: Ry, useExisting: n }]), B],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, i) {
                1 & e && mn(0, 0);
              },
              directives: [Dr],
              encapsulation: 2,
            })),
            n
          );
        })(),
        By = (() => {
          class n extends xy {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-row"], ["tr", "mat-row", ""]],
              hostAttrs: ["role", "row", 1, "mat-row"],
              exportAs: ["matRow"],
              features: [Y([{ provide: xy, useExisting: n }]), B],
              decls: 1,
              vars: 0,
              consts: [["cdkCellOutlet", ""]],
              template: function (e, i) {
                1 & e && mn(0, 0);
              },
              directives: [Dr],
              encapsulation: 2,
            })),
            n
          );
        })(),
        GA = (() => {
          class n extends Lh {}
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵdir = M({
              type: n,
              selectors: [["ng-template", "matNoDataRow", ""]],
              features: [Y([{ provide: Lh, useExisting: n }]), B],
            })),
            n
          );
        })(),
        Y7 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[L7, ut], ut] })),
            n
          );
        })();
      class WA extends class extends class {} {
        constructor(t = []) {
          super(),
            (this._renderData = new rt([])),
            (this._filter = new rt("")),
            (this._internalPageChanges = new O()),
            (this._renderChangesSubscription = null),
            (this.sortingDataAccessor = (e, i) => {
              const r = e[i];
              if (wS(r)) {
                const s = Number(r);
                return s < 9007199254740991 ? s : r;
              }
              return r;
            }),
            (this.sortData = (e, i) => {
              const r = i.active,
                s = i.direction;
              return r && "" != s
                ? e.sort((o, a) => {
                    let l = this.sortingDataAccessor(o, r),
                      c = this.sortingDataAccessor(a, r);
                    const u = typeof l,
                      d = typeof c;
                    u !== d &&
                      ("number" === u && (l += ""),
                      "number" === d && (c += ""));
                    let h = 0;
                    return (
                      null != l && null != c
                        ? l > c
                          ? (h = 1)
                          : l < c && (h = -1)
                        : null != l
                        ? (h = 1)
                        : null != c && (h = -1),
                      h * ("asc" == s ? 1 : -1)
                    );
                  })
                : e;
            }),
            (this.filterPredicate = (e, i) => {
              const r = Object.keys(e)
                  .reduce((o, a) => o + e[a] + "\u25ec", "")
                  .toLowerCase(),
                s = i.trim().toLowerCase();
              return -1 != r.indexOf(s);
            }),
            (this._data = new rt(t)),
            this._updateChangeSubscription();
        }
        get data() {
          return this._data.value;
        }
        set data(t) {
          this._data.next(t),
            this._renderChangesSubscription || this._filterData(t);
        }
        get filter() {
          return this._filter.value;
        }
        set filter(t) {
          this._filter.next(t),
            this._renderChangesSubscription || this._filterData(this.data);
        }
        get sort() {
          return this._sort;
        }
        set sort(t) {
          (this._sort = t), this._updateChangeSubscription();
        }
        get paginator() {
          return this._paginator;
        }
        set paginator(t) {
          (this._paginator = t), this._updateChangeSubscription();
        }
        _updateChangeSubscription() {
          var t;
          const e = this._sort
              ? Tn(this._sort.sortChange, this._sort.initialized)
              : J(null),
            i = this._paginator
              ? Tn(
                  this._paginator.page,
                  this._internalPageChanges,
                  this._paginator.initialized
                )
              : J(null),
            s = Ds([this._data, this._filter]).pipe(
              Q(([l]) => this._filterData(l))
            ),
            o = Ds([s, e]).pipe(Q(([l]) => this._orderData(l))),
            a = Ds([o, i]).pipe(Q(([l]) => this._pageData(l)));
          null === (t = this._renderChangesSubscription) ||
            void 0 === t ||
            t.unsubscribe(),
            (this._renderChangesSubscription = a.subscribe((l) =>
              this._renderData.next(l)
            ));
        }
        _filterData(t) {
          return (
            (this.filteredData =
              null == this.filter || "" === this.filter
                ? t
                : t.filter((e) => this.filterPredicate(e, this.filter))),
            this.paginator && this._updatePaginator(this.filteredData.length),
            this.filteredData
          );
        }
        _orderData(t) {
          return this.sort ? this.sortData(t.slice(), this.sort) : t;
        }
        _pageData(t) {
          if (!this.paginator) return t;
          const e = this.paginator.pageIndex * this.paginator.pageSize;
          return t.slice(e, e + this.paginator.pageSize);
        }
        _updatePaginator(t) {
          Promise.resolve().then(() => {
            const e = this.paginator;
            if (e && ((e.length = t), e.pageIndex > 0)) {
              const i = Math.ceil(e.length / e.pageSize) - 1 || 0,
                r = Math.min(e.pageIndex, i);
              r !== e.pageIndex &&
                ((e.pageIndex = r), this._internalPageChanges.next());
            }
          });
        }
        connect() {
          return (
            this._renderChangesSubscription || this._updateChangeSubscription(),
            this._renderData
          );
        }
        disconnect() {
          var t;
          null === (t = this._renderChangesSubscription) ||
            void 0 === t ||
            t.unsubscribe(),
            (this._renderChangesSubscription = null);
        }
      } {}
      function X7(n) {
        const { subscriber: t, counter: e, period: i } = n;
        t.next(e),
          this.schedule({ subscriber: t, counter: e + 1, period: i }, i);
      }
      class qA {}
      class YA {}
      class ui {
        constructor(t) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            t
              ? (this.lazyInit =
                  "string" == typeof t
                    ? () => {
                        (this.headers = new Map()),
                          t.split("\n").forEach((e) => {
                            const i = e.indexOf(":");
                            if (i > 0) {
                              const r = e.slice(0, i),
                                s = r.toLowerCase(),
                                o = e.slice(i + 1).trim();
                              this.maybeSetNormalizedName(r, s),
                                this.headers.has(s)
                                  ? this.headers.get(s).push(o)
                                  : this.headers.set(s, [o]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(t).forEach((e) => {
                            let i = t[e];
                            const r = e.toLowerCase();
                            "string" == typeof i && (i = [i]),
                              i.length > 0 &&
                                (this.headers.set(r, i),
                                this.maybeSetNormalizedName(e, r));
                          });
                      })
              : (this.headers = new Map());
        }
        has(t) {
          return this.init(), this.headers.has(t.toLowerCase());
        }
        get(t) {
          this.init();
          const e = this.headers.get(t.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t) {
          return this.init(), this.headers.get(t.toLowerCase()) || null;
        }
        append(t, e) {
          return this.clone({ name: t, value: e, op: "a" });
        }
        set(t, e) {
          return this.clone({ name: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ name: t, value: e, op: "d" });
        }
        maybeSetNormalizedName(t, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof ui
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((t) => this.applyUpdate(t)),
              (this.lazyUpdate = null)));
        }
        copyFrom(t) {
          t.init(),
            Array.from(t.headers.keys()).forEach((e) => {
              this.headers.set(e, t.headers.get(e)),
                this.normalizedNames.set(e, t.normalizedNames.get(e));
            });
        }
        clone(t) {
          const e = new ui();
          return (
            (e.lazyInit =
              this.lazyInit && this.lazyInit instanceof ui
                ? this.lazyInit
                : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
            e
          );
        }
        applyUpdate(t) {
          const e = t.name.toLowerCase();
          switch (t.op) {
            case "a":
            case "s":
              let i = t.value;
              if (("string" == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(t.name, e);
              const r = ("a" === t.op ? this.headers.get(e) : void 0) || [];
              r.push(...i), this.headers.set(e, r);
              break;
            case "d":
              const s = t.value;
              if (s) {
                let o = this.headers.get(e);
                if (!o) return;
                (o = o.filter((a) => -1 === s.indexOf(a))),
                  0 === o.length
                    ? (this.headers.delete(e), this.normalizedNames.delete(e))
                    : this.headers.set(e, o);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(t) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) =>
              t(this.normalizedNames.get(e), this.headers.get(e))
            );
        }
      }
      class Z7 {
        encodeKey(t) {
          return KA(t);
        }
        encodeValue(t) {
          return KA(t);
        }
        decodeKey(t) {
          return decodeURIComponent(t);
        }
        decodeValue(t) {
          return decodeURIComponent(t);
        }
      }
      const tW = /%(\d[a-f0-9])/gi,
        nW = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "2B": "+",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function KA(n) {
        return encodeURIComponent(n).replace(tW, (t, e) => {
          var i;
          return null !== (i = nW[e]) && void 0 !== i ? i : t;
        });
      }
      function JA(n) {
        return `${n}`;
      }
      class qr {
        constructor(t = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = t.encoder || new Z7()),
            t.fromString)
          ) {
            if (t.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function (n, t) {
              const e = new Map();
              return (
                n.length > 0 &&
                  n
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((r) => {
                      const s = r.indexOf("="),
                        [o, a] =
                          -1 == s
                            ? [t.decodeKey(r), ""]
                            : [
                                t.decodeKey(r.slice(0, s)),
                                t.decodeValue(r.slice(s + 1)),
                              ],
                        l = e.get(o) || [];
                      l.push(a), e.set(o, l);
                    }),
                e
              );
            })(t.fromString, this.encoder);
          } else
            t.fromObject
              ? ((this.map = new Map()),
                Object.keys(t.fromObject).forEach((e) => {
                  const i = t.fromObject[e];
                  this.map.set(e, Array.isArray(i) ? i : [i]);
                }))
              : (this.map = null);
        }
        has(t) {
          return this.init(), this.map.has(t);
        }
        get(t) {
          this.init();
          const e = this.map.get(t);
          return e ? e[0] : null;
        }
        getAll(t) {
          return this.init(), this.map.get(t) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t, e) {
          return this.clone({ param: t, value: e, op: "a" });
        }
        appendAll(t) {
          const e = [];
          return (
            Object.keys(t).forEach((i) => {
              const r = t[i];
              Array.isArray(r)
                ? r.forEach((s) => {
                    e.push({ param: i, value: s, op: "a" });
                  })
                : e.push({ param: i, value: r, op: "a" });
            }),
            this.clone(e)
          );
        }
        set(t, e) {
          return this.clone({ param: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ param: t, value: e, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((t) => {
                const e = this.encoder.encodeKey(t);
                return this.map
                  .get(t)
                  .map((i) => e + "=" + this.encoder.encodeValue(i))
                  .join("&");
              })
              .filter((t) => "" !== t)
              .join("&")
          );
        }
        clone(t) {
          const e = new qr({ encoder: this.encoder });
          return (
            (e.cloneFrom = this.cloneFrom || this),
            (e.updates = (this.updates || []).concat(t)),
            e
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
              this.updates.forEach((t) => {
                switch (t.op) {
                  case "a":
                  case "s":
                    const e =
                      ("a" === t.op ? this.map.get(t.param) : void 0) || [];
                    e.push(JA(t.value)), this.map.set(t.param, e);
                    break;
                  case "d":
                    if (void 0 === t.value) {
                      this.map.delete(t.param);
                      break;
                    }
                    {
                      let i = this.map.get(t.param) || [];
                      const r = i.indexOf(JA(t.value));
                      -1 !== r && i.splice(r, 1),
                        i.length > 0
                          ? this.map.set(t.param, i)
                          : this.map.delete(t.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class iW {
        constructor() {
          this.map = new Map();
        }
        set(t, e) {
          return this.map.set(t, e), this;
        }
        get(t) {
          return (
            this.map.has(t) || this.map.set(t, t.defaultValue()),
            this.map.get(t)
          );
        }
        delete(t) {
          return this.map.delete(t), this;
        }
        keys() {
          return this.map.keys();
        }
      }
      function QA(n) {
        return "undefined" != typeof ArrayBuffer && n instanceof ArrayBuffer;
      }
      function XA(n) {
        return "undefined" != typeof Blob && n instanceof Blob;
      }
      function ZA(n) {
        return "undefined" != typeof FormData && n instanceof FormData;
      }
      class wc {
        constructor(t, e, i, r) {
          let s;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = t.toUpperCase()),
            (function (n) {
              switch (n) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || r
              ? ((this.body = void 0 !== i ? i : null), (s = r))
              : (s = i),
            s &&
              ((this.reportProgress = !!s.reportProgress),
              (this.withCredentials = !!s.withCredentials),
              s.responseType && (this.responseType = s.responseType),
              s.headers && (this.headers = s.headers),
              s.context && (this.context = s.context),
              s.params && (this.params = s.params)),
            this.headers || (this.headers = new ui()),
            this.context || (this.context = new iW()),
            this.params)
          ) {
            const o = this.params.toString();
            if (0 === o.length) this.urlWithParams = e;
            else {
              const a = e.indexOf("?");
              this.urlWithParams =
                e + (-1 === a ? "?" : a < e.length - 1 ? "&" : "") + o;
            }
          } else (this.params = new qr()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : QA(this.body) ||
              XA(this.body) ||
              ZA(this.body) ||
              (function (n) {
                return (
                  "undefined" != typeof URLSearchParams &&
                  n instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof qr
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || ZA(this.body)
            ? null
            : XA(this.body)
            ? this.body.type || null
            : QA(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof qr
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(t = {}) {
          var e;
          const i = t.method || this.method,
            r = t.url || this.url,
            s = t.responseType || this.responseType,
            o = void 0 !== t.body ? t.body : this.body,
            a =
              void 0 !== t.withCredentials
                ? t.withCredentials
                : this.withCredentials,
            l =
              void 0 !== t.reportProgress
                ? t.reportProgress
                : this.reportProgress;
          let c = t.headers || this.headers,
            u = t.params || this.params;
          const d = null !== (e = t.context) && void 0 !== e ? e : this.context;
          return (
            void 0 !== t.setHeaders &&
              (c = Object.keys(t.setHeaders).reduce(
                (h, p) => h.set(p, t.setHeaders[p]),
                c
              )),
            t.setParams &&
              (u = Object.keys(t.setParams).reduce(
                (h, p) => h.set(p, t.setParams[p]),
                u
              )),
            new wc(i, r, o, {
              params: u,
              headers: c,
              context: d,
              reportProgress: l,
              responseType: s,
              withCredentials: a,
            })
          );
        }
      }
      var Tt = (() => (
        ((Tt = Tt || {})[(Tt.Sent = 0)] = "Sent"),
        (Tt[(Tt.UploadProgress = 1)] = "UploadProgress"),
        (Tt[(Tt.ResponseHeader = 2)] = "ResponseHeader"),
        (Tt[(Tt.DownloadProgress = 3)] = "DownloadProgress"),
        (Tt[(Tt.Response = 4)] = "Response"),
        (Tt[(Tt.User = 5)] = "User"),
        Tt
      ))();
      class Hy {
        constructor(t, e = 200, i = "OK") {
          (this.headers = t.headers || new ui()),
            (this.status = void 0 !== t.status ? t.status : e),
            (this.statusText = t.statusText || i),
            (this.url = t.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class $y extends Hy {
        constructor(t = {}) {
          super(t), (this.type = Tt.ResponseHeader);
        }
        clone(t = {}) {
          return new $y({
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class Kh extends Hy {
        constructor(t = {}) {
          super(t),
            (this.type = Tt.Response),
            (this.body = void 0 !== t.body ? t.body : null);
        }
        clone(t = {}) {
          return new Kh({
            body: void 0 !== t.body ? t.body : this.body,
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class ek extends Hy {
        constructor(t) {
          super(t, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${t.url || "(unknown url)"}`
                : `Http failure response for ${t.url || "(unknown url)"}: ${
                    t.status
                  } ${t.statusText}`),
            (this.error = t.error || null);
        }
      }
      function jy(n, t) {
        return {
          body: t,
          headers: n.headers,
          context: n.context,
          observe: n.observe,
          params: n.params,
          reportProgress: n.reportProgress,
          responseType: n.responseType,
          withCredentials: n.withCredentials,
        };
      }
      let Jh = (() => {
        class n {
          constructor(e) {
            this.handler = e;
          }
          request(e, i, r = {}) {
            let s;
            if (e instanceof wc) s = e;
            else {
              let l, c;
              (l = r.headers instanceof ui ? r.headers : new ui(r.headers)),
                r.params &&
                  (c =
                    r.params instanceof qr
                      ? r.params
                      : new qr({ fromObject: r.params })),
                (s = new wc(e, i, void 0 !== r.body ? r.body : null, {
                  headers: l,
                  context: r.context,
                  params: c,
                  reportProgress: r.reportProgress,
                  responseType: r.responseType || "json",
                  withCredentials: r.withCredentials,
                }));
            }
            const o = J(s).pipe(aa((l) => this.handler.handle(l)));
            if (e instanceof wc || "events" === r.observe) return o;
            const a = o.pipe(Pe((l) => l instanceof Kh));
            switch (r.observe || "body") {
              case "body":
                switch (s.responseType) {
                  case "arraybuffer":
                    return a.pipe(
                      Q((l) => {
                        if (null !== l.body && !(l.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return l.body;
                      })
                    );
                  case "blob":
                    return a.pipe(
                      Q((l) => {
                        if (null !== l.body && !(l.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return l.body;
                      })
                    );
                  case "text":
                    return a.pipe(
                      Q((l) => {
                        if (null !== l.body && "string" != typeof l.body)
                          throw new Error("Response is not a string.");
                        return l.body;
                      })
                    );
                  case "json":
                  default:
                    return a.pipe(Q((l) => l.body));
                }
              case "response":
                return a;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${r.observe}}`
                );
            }
          }
          delete(e, i = {}) {
            return this.request("DELETE", e, i);
          }
          get(e, i = {}) {
            return this.request("GET", e, i);
          }
          head(e, i = {}) {
            return this.request("HEAD", e, i);
          }
          jsonp(e, i) {
            return this.request("JSONP", e, {
              params: new qr().append(i, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, i = {}) {
            return this.request("OPTIONS", e, i);
          }
          patch(e, i, r = {}) {
            return this.request("PATCH", e, jy(r, i));
          }
          post(e, i, r = {}) {
            return this.request("POST", e, jy(r, i));
          }
          put(e, i, r = {}) {
            return this.request("PUT", e, jy(r, i));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(qA));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      class tk {
        constructor(t, e) {
          (this.next = t), (this.interceptor = e);
        }
        handle(t) {
          return this.interceptor.intercept(t, this.next);
        }
      }
      const nk = new P("HTTP_INTERCEPTORS");
      let oW = (() => {
        class n {
          intercept(e, i) {
            return i.handle(e);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const aW = /^\)\]\}',?\n/;
      let ik = (() => {
        class n {
          constructor(e) {
            this.xhrFactory = e;
          }
          handle(e) {
            if ("JSONP" === e.method)
              throw new Error(
                "Attempted to construct Jsonp request without HttpClientJsonpModule installed."
              );
            return new Ce((i) => {
              const r = this.xhrFactory.build();
              if (
                (r.open(e.method, e.urlWithParams),
                e.withCredentials && (r.withCredentials = !0),
                e.headers.forEach((p, g) => r.setRequestHeader(p, g.join(","))),
                e.headers.has("Accept") ||
                  r.setRequestHeader(
                    "Accept",
                    "application/json, text/plain, */*"
                  ),
                !e.headers.has("Content-Type"))
              ) {
                const p = e.detectContentTypeHeader();
                null !== p && r.setRequestHeader("Content-Type", p);
              }
              if (e.responseType) {
                const p = e.responseType.toLowerCase();
                r.responseType = "json" !== p ? p : "text";
              }
              const s = e.serializeBody();
              let o = null;
              const a = () => {
                  if (null !== o) return o;
                  const p = 1223 === r.status ? 204 : r.status,
                    g = r.statusText || "OK",
                    _ = new ui(r.getAllResponseHeaders()),
                    y =
                      (function (n) {
                        return "responseURL" in n && n.responseURL
                          ? n.responseURL
                          : /^X-Request-URL:/m.test(n.getAllResponseHeaders())
                          ? n.getResponseHeader("X-Request-URL")
                          : null;
                      })(r) || e.url;
                  return (
                    (o = new $y({
                      headers: _,
                      status: p,
                      statusText: g,
                      url: y,
                    })),
                    o
                  );
                },
                l = () => {
                  let { headers: p, status: g, statusText: _, url: y } = a(),
                    E = null;
                  204 !== g &&
                    (E = void 0 === r.response ? r.responseText : r.response),
                    0 === g && (g = E ? 200 : 0);
                  let C = g >= 200 && g < 300;
                  if ("json" === e.responseType && "string" == typeof E) {
                    const N = E;
                    E = E.replace(aW, "");
                    try {
                      E = "" !== E ? JSON.parse(E) : null;
                    } catch (x) {
                      (E = N), C && ((C = !1), (E = { error: x, text: E }));
                    }
                  }
                  C
                    ? (i.next(
                        new Kh({
                          body: E,
                          headers: p,
                          status: g,
                          statusText: _,
                          url: y || void 0,
                        })
                      ),
                      i.complete())
                    : i.error(
                        new ek({
                          error: E,
                          headers: p,
                          status: g,
                          statusText: _,
                          url: y || void 0,
                        })
                      );
                },
                c = (p) => {
                  const { url: g } = a(),
                    _ = new ek({
                      error: p,
                      status: r.status || 0,
                      statusText: r.statusText || "Unknown Error",
                      url: g || void 0,
                    });
                  i.error(_);
                };
              let u = !1;
              const d = (p) => {
                  u || (i.next(a()), (u = !0));
                  let g = { type: Tt.DownloadProgress, loaded: p.loaded };
                  p.lengthComputable && (g.total = p.total),
                    "text" === e.responseType &&
                      !!r.responseText &&
                      (g.partialText = r.responseText),
                    i.next(g);
                },
                h = (p) => {
                  let g = { type: Tt.UploadProgress, loaded: p.loaded };
                  p.lengthComputable && (g.total = p.total), i.next(g);
                };
              return (
                r.addEventListener("load", l),
                r.addEventListener("error", c),
                r.addEventListener("timeout", c),
                r.addEventListener("abort", c),
                e.reportProgress &&
                  (r.addEventListener("progress", d),
                  null !== s &&
                    r.upload &&
                    r.upload.addEventListener("progress", h)),
                r.send(s),
                i.next({ type: Tt.Sent }),
                () => {
                  r.removeEventListener("error", c),
                    r.removeEventListener("abort", c),
                    r.removeEventListener("load", l),
                    r.removeEventListener("timeout", c),
                    e.reportProgress &&
                      (r.removeEventListener("progress", d),
                      null !== s &&
                        r.upload &&
                        r.upload.removeEventListener("progress", h)),
                    r.readyState !== r.DONE && r.abort();
                }
              );
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(nM));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac })),
          n
        );
      })();
      const Uy = new P("XSRF_COOKIE_NAME"),
        zy = new P("XSRF_HEADER_NAME");
      class rk {}
      let cW = (() => {
          class n {
            constructor(e, i, r) {
              (this.doc = e),
                (this.platform = i),
                (this.cookieName = r),
                (this.lastCookieString = ""),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ("server" === this.platform) return null;
              const e = this.doc.cookie || "";
              return (
                e !== this.lastCookieString &&
                  (this.parseCount++,
                  (this.lastToken = GE(e, this.cookieName)),
                  (this.lastCookieString = e)),
                this.lastToken
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j), m(fr), m(Uy));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        Gy = (() => {
          class n {
            constructor(e, i) {
              (this.tokenService = e), (this.headerName = i);
            }
            intercept(e, i) {
              const r = e.url.toLowerCase();
              if (
                "GET" === e.method ||
                "HEAD" === e.method ||
                r.startsWith("http://") ||
                r.startsWith("https://")
              )
                return i.handle(e);
              const s = this.tokenService.getToken();
              return (
                null !== s &&
                  !e.headers.has(this.headerName) &&
                  (e = e.clone({ headers: e.headers.set(this.headerName, s) })),
                i.handle(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(rk), m(zy));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        uW = (() => {
          class n {
            constructor(e, i) {
              (this.backend = e), (this.injector = i), (this.chain = null);
            }
            handle(e) {
              if (null === this.chain) {
                const i = this.injector.get(nk, []);
                this.chain = i.reduceRight(
                  (r, s) => new tk(r, s),
                  this.backend
                );
              }
              return this.chain.handle(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(YA), m(ae));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        dW = (() => {
          class n {
            static disable() {
              return {
                ngModule: n,
                providers: [{ provide: Gy, useClass: oW }],
              };
            }
            static withOptions(e = {}) {
              return {
                ngModule: n,
                providers: [
                  e.cookieName ? { provide: Uy, useValue: e.cookieName } : [],
                  e.headerName ? { provide: zy, useValue: e.headerName } : [],
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({
              providers: [
                Gy,
                { provide: nk, useExisting: Gy, multi: !0 },
                { provide: rk, useClass: cW },
                { provide: Uy, useValue: "XSRF-TOKEN" },
                { provide: zy, useValue: "X-XSRF-TOKEN" },
              ],
            })),
            n
          );
        })(),
        hW = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({
              providers: [
                Jh,
                { provide: qA, useClass: uW },
                ik,
                { provide: YA, useExisting: ik },
              ],
              imports: [
                [
                  dW.withOptions({
                    cookieName: "XSRF-TOKEN",
                    headerName: "X-XSRF-TOKEN",
                  }),
                ],
              ],
            })),
            n
          );
        })();
      new ui({ "Content-Type": "application/json" });
      let Wy = (() => {
        class n {
          constructor(e) {
            this.http = e;
          }
          getLiveStats() {
            return this.http.get("/live");
          }
          getDiscord() {
            return this.http.get("/discord");
          }
          getVapidKey() {
            return this.http.get("/vapidkey");
          }
          getServerName() {
            return this.http.get("/serverName");
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(Jh));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const Yr = new Ce(_r);
      class gW {
        constructor(t, e) {
          (this.delay = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new Ky(t, this.delay, this.scheduler));
        }
      }
      class Ky extends He {
        constructor(t, e, i) {
          super(t),
            (this.delay = e),
            (this.scheduler = i),
            (this.queue = []),
            (this.active = !1),
            (this.errored = !1);
        }
        static dispatch(t) {
          const e = t.source,
            i = e.queue,
            r = t.scheduler,
            s = t.destination;
          for (; i.length > 0 && i[0].time - r.now() <= 0; )
            i.shift().notification.observe(s);
          if (i.length > 0) {
            const o = Math.max(0, i[0].time - r.now());
            this.schedule(t, o);
          } else this.unsubscribe(), (e.active = !1);
        }
        _schedule(t) {
          (this.active = !0),
            this.destination.add(
              t.schedule(Ky.dispatch, this.delay, {
                source: this,
                destination: this.destination,
                scheduler: t,
              })
            );
        }
        scheduleNotification(t) {
          if (!0 === this.errored) return;
          const e = this.scheduler,
            i = new mW(e.now() + this.delay, t);
          this.queue.push(i), !1 === this.active && this._schedule(e);
        }
        _next(t) {
          this.scheduleNotification(Sn.createNext(t));
        }
        _error(t) {
          (this.errored = !0),
            (this.queue = []),
            this.destination.error(t),
            this.unsubscribe();
        }
        _complete() {
          this.scheduleNotification(Sn.createComplete()), this.unsubscribe();
        }
      }
      class mW {
        constructor(t, e) {
          (this.time = t), (this.notification = e);
        }
      }
      const Cc =
        "Service workers are disabled or not supported by this browser";
      class Qh {
        constructor(t) {
          if (((this.serviceWorker = t), t)) {
            const i = ct(t, "controllerchange").pipe(Q(() => t.controller)),
              s = sa(
                oa(() => J(t.controller)),
                i
              );
            (this.worker = s.pipe(Pe((u) => !!u))),
              (this.registration = this.worker.pipe(
                jt(() => t.getRegistration())
              ));
            const c = ct(t, "message")
              .pipe(Q((u) => u.data))
              .pipe(Pe((u) => u && u.type))
              .pipe(xf(new O()));
            c.connect(), (this.events = c);
          } else
            this.worker =
              this.events =
              this.registration =
                oa(() =>
                  SS(
                    new Error(
                      "Service workers are disabled or not supported by this browser"
                    )
                  )
                );
        }
        postMessage(t, e) {
          return this.worker
            .pipe(
              Oe(1),
              It((i) => {
                i.postMessage(Object.assign({ action: t }, e));
              })
            )
            .toPromise()
            .then(() => {});
        }
        postMessageWithStatus(t, e, i) {
          const r = this.waitForStatus(i),
            s = this.postMessage(t, e);
          return Promise.all([r, s]).then(() => {});
        }
        generateNonce() {
          return Math.round(1e7 * Math.random());
        }
        eventsOfType(t) {
          return this.events.pipe(Pe((i) => i.type === t));
        }
        nextEventOfType(t) {
          return this.eventsOfType(t).pipe(Oe(1));
        }
        waitForStatus(t) {
          return this.eventsOfType("STATUS")
            .pipe(
              Pe((e) => e.nonce === t),
              Oe(1),
              Q((e) => {
                if (!e.status) throw new Error(e.error);
              })
            )
            .toPromise();
        }
        get isEnabled() {
          return !!this.serviceWorker;
        }
      }
      let sk = (() => {
          class n {
            constructor(e) {
              if (
                ((this.sw = e),
                (this.subscriptionChanges = new O()),
                !e.isEnabled)
              )
                return (
                  (this.messages = Yr),
                  (this.notificationClicks = Yr),
                  void (this.subscription = Yr)
                );
              (this.messages = this.sw
                .eventsOfType("PUSH")
                .pipe(Q((r) => r.data))),
                (this.notificationClicks = this.sw
                  .eventsOfType("NOTIFICATION_CLICK")
                  .pipe(Q((r) => r.data))),
                (this.pushManager = this.sw.registration.pipe(
                  Q((r) => r.pushManager)
                ));
              const i = this.pushManager.pipe(jt((r) => r.getSubscription()));
              this.subscription = Tn(i, this.subscriptionChanges);
            }
            get isEnabled() {
              return this.sw.isEnabled;
            }
            requestSubscription(e) {
              if (!this.sw.isEnabled) return Promise.reject(new Error(Cc));
              const i = { userVisibleOnly: !0 };
              let r = this.decodeBase64(
                  e.serverPublicKey.replace(/_/g, "/").replace(/-/g, "+")
                ),
                s = new Uint8Array(new ArrayBuffer(r.length));
              for (let o = 0; o < r.length; o++) s[o] = r.charCodeAt(o);
              return (
                (i.applicationServerKey = s),
                this.pushManager
                  .pipe(
                    jt((o) => o.subscribe(i)),
                    Oe(1)
                  )
                  .toPromise()
                  .then((o) => (this.subscriptionChanges.next(o), o))
              );
            }
            unsubscribe() {
              return this.sw.isEnabled
                ? this.subscription
                    .pipe(
                      Oe(1),
                      jt((i) => {
                        if (null === i)
                          throw new Error(
                            "Not subscribed to push notifications."
                          );
                        return i.unsubscribe().then((r) => {
                          if (!r) throw new Error("Unsubscribe failed!");
                          this.subscriptionChanges.next(null);
                        });
                      })
                    )
                    .toPromise()
                : Promise.reject(new Error(Cc));
            }
            decodeBase64(e) {
              return atob(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Qh));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        yW = (() => {
          class n {
            constructor(e) {
              if (((this.sw = e), !e.isEnabled))
                return (
                  (this.available = Yr),
                  (this.activated = Yr),
                  void (this.unrecoverable = Yr)
                );
              (this.available = this.sw.eventsOfType("UPDATE_AVAILABLE")),
                (this.activated = this.sw.eventsOfType("UPDATE_ACTIVATED")),
                (this.unrecoverable = this.sw.eventsOfType(
                  "UNRECOVERABLE_STATE"
                ));
            }
            get isEnabled() {
              return this.sw.isEnabled;
            }
            checkForUpdate() {
              if (!this.sw.isEnabled) return Promise.reject(new Error(Cc));
              const e = this.sw.generateNonce();
              return this.sw.postMessageWithStatus(
                "CHECK_FOR_UPDATES",
                { statusNonce: e },
                e
              );
            }
            activateUpdate() {
              if (!this.sw.isEnabled) return Promise.reject(new Error(Cc));
              const e = this.sw.generateNonce();
              return this.sw.postMessageWithStatus(
                "ACTIVATE_UPDATE",
                { statusNonce: e },
                e
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Qh));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      class Jy {}
      const ok = new P("NGSW_REGISTER_SCRIPT");
      function bW(n, t, e, i) {
        return () => {
          if (!Ed(i) || !("serviceWorker" in navigator) || !1 === e.enabled)
            return;
          let s;
          if (
            (navigator.serviceWorker.addEventListener(
              "controllerchange",
              () => {
                null !== navigator.serviceWorker.controller &&
                  navigator.serviceWorker.controller.postMessage({
                    action: "INITIALIZE",
                  });
              }
            ),
            "function" == typeof e.registrationStrategy)
          )
            s = e.registrationStrategy();
          else {
            const [a, ...l] = (
              e.registrationStrategy || "registerWhenStable:30000"
            ).split(":");
            switch (a) {
              case "registerImmediately":
                s = J(null);
                break;
              case "registerWithDelay":
                s = ak(+l[0] || 0);
                break;
              case "registerWhenStable":
                s = l[0] ? Tn(lk(n), ak(+l[0])) : lk(n);
                break;
              default:
                throw new Error(
                  `Unknown ServiceWorker registration strategy: ${e.registrationStrategy}`
                );
            }
          }
          n.get(H).runOutsideAngular(() =>
            s
              .pipe(Oe(1))
              .subscribe(() =>
                navigator.serviceWorker
                  .register(t, { scope: e.scope })
                  .catch((a) =>
                    console.error("Service worker registration failed with:", a)
                  )
              )
          );
        };
      }
      function ak(n) {
        return J(null).pipe(
          (function (n, t = pa) {
            const i = (function (n) {
              return n instanceof Date && !isNaN(+n);
            })(n)
              ? +n - t.now()
              : Math.abs(n);
            return (r) => r.lift(new gW(i, t));
          })(n)
        );
      }
      function lk(n) {
        return n.get(Vn).isStable.pipe(Pe((e) => e));
      }
      function vW(n, t) {
        return new Qh(
          Ed(t) && !1 !== n.enabled ? navigator.serviceWorker : void 0
        );
      }
      let wW = (() => {
          class n {
            static register(e, i = {}) {
              return {
                ngModule: n,
                providers: [
                  { provide: ok, useValue: e },
                  { provide: Jy, useValue: i },
                  { provide: Qh, useFactory: vW, deps: [Jy, fr] },
                  {
                    provide: Zo,
                    useFactory: bW,
                    deps: [ae, ok, Jy, fr],
                    multi: !0,
                  },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ providers: [sk, yW] })),
            n
          );
        })(),
        CW = (() => {
          class n {
            constructor(e) {
              this.http = e;
            }
            subscribe(e) {
              return this.http.post("/subscribe", e);
            }
            triggerMessage(e) {
              return this.http.post("/message", JSON.parse(e));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Jh));
            }),
            (n.ɵprov = A({ token: n, factory: n.ɵfac, providedIn: "root" })),
            n
          );
        })();
      new ui({ "Content-Type": "application/json" });
      let Qy = (() => {
        class n {
          constructor(e, i, r) {
            (this.swPush = e),
              (this.service = i),
              (this.mainservice = r),
              (this.vapidKeys =
                "BLHl0OcSwB9pL9Yfi-tMa0pJMbWBO_OpkG-8QKQQqWb08cunEihuHgvvGzKYB6mU0w_RgqKtTJH8l3yCwGXWFaw"),
              (this.payload = JSON.stringify({
                notification: {
                  title: "Web Mail Notification",
                  body: "New Mail Received!",
                  icon: "images/bell.jpg",
                  vibrate: [100, 50, 100],
                  requireInteraction: !0,
                  data: { dateOfArrival: Date.now() },
                  actions: [{ action: "inbox", title: "Go to Web Mail" }],
                },
              }));
          }
          triggerMessage() {
            this.service.triggerMessage(this.payload).subscribe(
              (e) => console.log(e),
              (e) => console.log(e)
            );
          }
          subscribeToNotifications(e, i) {
            console.log(this.swPush.isEnabled),
              this.swPush.isEnabled &&
                (this.swPush.notificationClicks.subscribe((r) =>
                  console.log(r)
                ),
                this.mainservice.getVapidKey().subscribe((r) => {
                  this.swPush
                    .requestSubscription({ serverPublicKey: r.key })
                    .then((s) => {
                      this.service
                        .subscribe({ subscription: s, player_id: e, name: i })
                        .subscribe(
                          (a) => console.log(a),
                          (a) => console.log(a)
                        );
                    })
                    .catch((s) =>
                      console.error("Could not subscribe to notifications", s)
                    );
                }));
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(sk), m(CW), m(Wy));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      new ui({ "Content-Type": "application/json" });
      let Xy = (() => {
        class n {
          constructor(e) {
            (this.http = e),
              (this.leaderboard = []),
              (this.leaderboardUpdateEvent = new O());
          }
          getTop200() {
            return this.http.get("/top200");
          }
          getCompleteLeaderboard() {
            return this.http.get("/leaderboard");
          }
          getLeaderboard() {
            return this.leaderboard;
          }
          compare(e, i) {
            return e.rank < i.rank ? -1 : e.rank > i.rank ? 1 : 0;
          }
          loadLeaderboard() {
            this.getTop200().subscribe((e) => {
              (this.leaderboard = Object.keys(e).map((i) => ({
                rank: e[i].rank,
                id: i,
                name: e[i].name_html.replace(/<\/?[^>]+(>|$)/g, ""),
                scores: e[i].scores,
                games: e[i].games,
                kills: e[i].kills,
                deaths: e[i].deaths,
                last_seen: e[i].last_seen,
              }))),
                this.leaderboard.sort(this.compare),
                this.leaderboardUpdateEvent.next(),
                console.log("got leaderboard"),
                this.getCompleteLeaderboard().subscribe((i) => {
                  this.leaderboard = Object.keys(e).map((r) => ({
                    rank: e[r].rank,
                    id: r,
                    name: e[r].name_html.replace(/<\/?[^>]+(>|$)/g, ""),
                    scores: e[r].scores,
                    games: e[r].games,
                    kills: e[r].kills,
                    deaths: e[r].deaths,
                    last_seen: e[r].last_seen,
                  }));
                }),
                this.leaderboard.sort(this.compare),
                this.leaderboardUpdateEvent.next();
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(Jh));
          }),
          (n.ɵprov = A({ token: n, factory: n.ɵfac, providedIn: "root" })),
          n
        );
      })();
      const ck = ["mat-button", ""],
        uk = ["*"],
        EW = [
          "mat-button",
          "mat-flat-button",
          "mat-icon-button",
          "mat-raised-button",
          "mat-stroked-button",
          "mat-mini-fab",
          "mat-fab",
        ],
        MW = EA(
          Ma(
            MA(
              class {
                constructor(n) {
                  this._elementRef = n;
                }
              }
            )
          )
        );
      let Zy = (() => {
          class n extends MW {
            constructor(e, i, r) {
              super(e),
                (this._focusMonitor = i),
                (this._animationMode = r),
                (this.isRoundButton = this._hasHostAttributes(
                  "mat-fab",
                  "mat-mini-fab"
                )),
                (this.isIconButton =
                  this._hasHostAttributes("mat-icon-button"));
              for (const s of EW)
                this._hasHostAttributes(s) &&
                  this._getHostElement().classList.add(s);
              e.nativeElement.classList.add("mat-button-base"),
                this.isRoundButton && (this.color = "accent");
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(e, i) {
              e
                ? this._focusMonitor.focusVia(this._getHostElement(), e, i)
                : this._getHostElement().focus(i);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...e) {
              return e.some((i) => this._getHostElement().hasAttribute(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(L), f(Os), f(Bs, 8));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [
                ["button", "mat-button", ""],
                ["button", "mat-raised-button", ""],
                ["button", "mat-icon-button", ""],
                ["button", "mat-fab", ""],
                ["button", "mat-mini-fab", ""],
                ["button", "mat-stroked-button", ""],
                ["button", "mat-flat-button", ""],
              ],
              viewQuery: function (e, i) {
                if ((1 & e && Qe(xh, 5), 2 & e)) {
                  let r;
                  U((r = z())) && (i.ripple = r.first);
                }
              },
              hostAttrs: [1, "mat-focus-indicator"],
              hostVars: 5,
              hostBindings: function (e, i) {
                2 & e &&
                  (X("disabled", i.disabled || null),
                  q(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  )("mat-button-disabled", i.disabled));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [B],
              attrs: ck,
              ngContentSelectors: uk,
              decls: 4,
              vars: 5,
              consts: [
                [1, "mat-button-wrapper"],
                [
                  "matRipple",
                  "",
                  1,
                  "mat-button-ripple",
                  3,
                  "matRippleDisabled",
                  "matRippleCentered",
                  "matRippleTrigger",
                ],
                [1, "mat-button-focus-overlay"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Wt(),
                  b(0, "span", 0),
                  Ye(1),
                  v(),
                  Z(2, "span", 1),
                  Z(3, "span", 2)),
                  2 & e &&
                    (w(2),
                    q(
                      "mat-button-ripple-round",
                      i.isRoundButton || i.isIconButton
                    ),
                    D("matRippleDisabled", i._isRippleDisabled())(
                      "matRippleCentered",
                      i.isIconButton
                    )("matRippleTrigger", i._getHostElement()));
              },
              directives: [xh],
              styles: [
                ".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        hk = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[IA, ut], ut] })),
            n
          );
        })();
      const fk = new Set();
      let ka,
        pk = (() => {
          class n {
            constructor(e) {
              (this._platform = e),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : TW);
            }
            matchMedia(e) {
              return (
                this._platform.WEBKIT &&
                  (function (n) {
                    if (!fk.has(n))
                      try {
                        ka ||
                          ((ka = document.createElement("style")),
                          ka.setAttribute("type", "text/css"),
                          document.head.appendChild(ka)),
                          ka.sheet &&
                            (ka.sheet.insertRule(
                              `@media ${n} {.fx-query-test{ }}`,
                              0
                            ),
                            fk.add(n));
                      } catch (t) {
                        console.error(t);
                      }
                  })(e),
                this._matchMedia(e)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(je));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(je));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })();
      function TW(n) {
        return {
          matches: "all" === n || "" === n,
          media: n,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let eb = (() => {
        class n {
          constructor(e, i) {
            (this._mediaMatcher = e),
              (this._zone = i),
              (this._queries = new Map()),
              (this._destroySubject = new O());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return gk(Kd(e)).some((r) => this._registerQuery(r).mql.matches);
          }
          observe(e) {
            let s = Ds(gk(Kd(e)).map((o) => this._registerQuery(o).observable));
            return (
              (s = sa(s.pipe(Oe(1)), s.pipe(V_(1), L_(0)))),
              s.pipe(
                Q((o) => {
                  const a = { matches: !1, breakpoints: {} };
                  return (
                    o.forEach(({ matches: l, query: c }) => {
                      (a.matches = a.matches || l), (a.breakpoints[c] = l);
                    }),
                    a
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const i = this._mediaMatcher.matchMedia(e),
              s = {
                observable: new Ce((o) => {
                  const a = (l) => this._zone.run(() => o.next(l));
                  return (
                    i.addListener(a),
                    () => {
                      i.removeListener(a);
                    }
                  );
                }).pipe(
                  Bn(i),
                  Q(({ matches: o }) => ({ query: e, matches: o })),
                  re(this._destroySubject)
                ),
                mql: i,
              };
            return this._queries.set(e, s), s;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(pk), m(H));
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n(m(pk), m(H));
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      function gk(n) {
        return n
          .map((t) => t.split(","))
          .reduce((t, e) => t.concat(e))
          .map((t) => t.trim());
      }
      function AW(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "div", 1),
            b(1, "button", 2),
            R("click", function () {
              return ce(e), T().action();
            }),
            I(2),
            v(),
            v();
        }
        if (2 & n) {
          const e = T();
          w(2), Ke(e.data.action);
        }
      }
      function kW(n, t) {}
      const _k = new P("MatSnackBarData");
      class Xh {
        constructor() {
          (this.politeness = "assertive"),
            (this.announcementMessage = ""),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = "center"),
            (this.verticalPosition = "bottom");
        }
      }
      const NW = Math.pow(2, 31) - 1;
      class tb {
        constructor(t, e) {
          (this._overlayRef = e),
            (this._afterDismissed = new O()),
            (this._afterOpened = new O()),
            (this._onAction = new O()),
            (this._dismissedByAction = !1),
            (this.containerInstance = t),
            this.onAction().subscribe(() => this.dismiss()),
            t._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(t) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(t, NW)
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      let RW = (() => {
        class n {
          constructor(e, i) {
            (this.snackBarRef = e), (this.data = i);
          }
          action() {
            this.snackBarRef.dismissWithAction();
          }
          get hasAction() {
            return !!this.data.action;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(f(tb), f(_k));
          }),
          (n.ɵcmp = ne({
            type: n,
            selectors: [["simple-snack-bar"]],
            hostAttrs: [1, "mat-simple-snackbar"],
            decls: 3,
            vars: 2,
            consts: [
              ["class", "mat-simple-snackbar-action", 4, "ngIf"],
              [1, "mat-simple-snackbar-action"],
              ["mat-button", "", 3, "click"],
            ],
            template: function (e, i) {
              1 & e && (b(0, "span"), I(1), v(), S(2, AW, 3, 1, "div", 0)),
                2 & e &&
                  (w(1), Ke(i.data.message), w(1), D("ngIf", i.hasAction));
            },
            directives: [bt, Zy],
            styles: [
              ".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\n",
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          n
        );
      })();
      const IW = {
        snackBarState: ai("state", [
          gt("void, hidden", we({ transform: "scale(0.8)", opacity: 0 })),
          gt("visible", we({ transform: "scale(1)", opacity: 1 })),
          St("* => visible", Ut("150ms cubic-bezier(0, 0, 0.2, 1)")),
          St(
            "* => void, * => hidden",
            Ut("75ms cubic-bezier(0.4, 0.0, 1, 1)", we({ opacity: 0 }))
          ),
        ]),
      };
      let xW = (() => {
          class n extends rh {
            constructor(e, i, r, s, o) {
              super(),
                (this._ngZone = e),
                (this._elementRef = i),
                (this._changeDetectorRef = r),
                (this._platform = s),
                (this.snackBarConfig = o),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new O()),
                (this._onExit = new O()),
                (this._onEnter = new O()),
                (this._animationState = "void"),
                (this.attachDomPortal = (a) => (
                  this._assertNotAttached(),
                  this._applySnackBarClasses(),
                  this._portalOutlet.attachDomPortal(a)
                )),
                (this._live =
                  "assertive" !== o.politeness || o.announcementMessage
                    ? "off" === o.politeness
                      ? "off"
                      : "polite"
                    : "assertive"),
                this._platform.FIREFOX &&
                  ("polite" === this._live && (this._role = "status"),
                  "assertive" === this._live && (this._role = "alert"));
            }
            attachComponentPortal(e) {
              return (
                this._assertNotAttached(),
                this._applySnackBarClasses(),
                this._portalOutlet.attachComponentPortal(e)
              );
            }
            attachTemplatePortal(e) {
              return (
                this._assertNotAttached(),
                this._applySnackBarClasses(),
                this._portalOutlet.attachTemplatePortal(e)
              );
            }
            onAnimationEnd(e) {
              const { fromState: i, toState: r } = e;
              if (
                ((("void" === r && "void" !== i) || "hidden" === r) &&
                  this._completeExit(),
                "visible" === r)
              ) {
                const s = this._onEnter;
                this._ngZone.run(() => {
                  s.next(), s.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = "visible"),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                (this._animationState = "hidden"),
                this._elementRef.nativeElement.setAttribute("mat-exit", ""),
                clearTimeout(this._announceTimeoutId),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0), this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe(Oe(1)).subscribe(() => {
                this._onExit.next(), this._onExit.complete();
              });
            }
            _applySnackBarClasses() {
              const e = this._elementRef.nativeElement,
                i = this.snackBarConfig.panelClass;
              i &&
                (Array.isArray(i)
                  ? i.forEach((r) => e.classList.add(r))
                  : e.classList.add(i)),
                "center" === this.snackBarConfig.horizontalPosition &&
                  e.classList.add("mat-snack-bar-center"),
                "top" === this.snackBarConfig.verticalPosition &&
                  e.classList.add("mat-snack-bar-top");
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const e =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-hidden]"
                        ),
                      i =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-live]"
                        );
                    if (e && i) {
                      let r = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        e.contains(document.activeElement) &&
                        (r = document.activeElement),
                        e.removeAttribute("aria-hidden"),
                        i.appendChild(e),
                        null == r || r.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(H), f(L), f(Be), f(je), f(Xh));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["snack-bar-container"]],
              viewQuery: function (e, i) {
                if ((1 & e && Qe(ba, 7), 2 & e)) {
                  let r;
                  U((r = z())) && (i._portalOutlet = r.first);
                }
              },
              hostAttrs: [1, "mat-snack-bar-container"],
              hostVars: 1,
              hostBindings: function (e, i) {
                1 & e &&
                  Pu("@state.done", function (s) {
                    return i.onAnimationEnd(s);
                  }),
                  2 & e && Vu("@state", i._animationState);
              },
              features: [B],
              decls: 3,
              vars: 2,
              consts: [
                ["aria-hidden", "true"],
                ["cdkPortalOutlet", ""],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "div", 0),
                  S(1, kW, 0, 0, "ng-template", 1),
                  v(),
                  Z(2, "div")),
                  2 & e && (w(2), X("aria-live", i._live)("role", i._role));
              },
              directives: [ba],
              styles: [
                ".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\n",
              ],
              encapsulation: 2,
              data: { animation: [IW.snackBarState] },
            })),
            n
          );
        })(),
        yk = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[lh, I_, Et, hk, ut], ut] })),
            n
          );
        })();
      const bk = new P("mat-snack-bar-default-options", {
        providedIn: "root",
        factory: function () {
          return new Xh();
        },
      });
      let vk = (() => {
        class n {
          constructor(e, i, r, s, o, a) {
            (this._overlay = e),
              (this._live = i),
              (this._injector = r),
              (this._breakpointObserver = s),
              (this._parentSnackBar = o),
              (this._defaultConfig = a),
              (this._snackBarRefAtThisLevel = null),
              (this.simpleSnackBarComponent = RW),
              (this.snackBarContainerComponent = xW),
              (this.handsetCssClass = "mat-snack-bar-handset");
          }
          get _openedSnackBarRef() {
            const e = this._parentSnackBar;
            return e ? e._openedSnackBarRef : this._snackBarRefAtThisLevel;
          }
          set _openedSnackBarRef(e) {
            this._parentSnackBar
              ? (this._parentSnackBar._openedSnackBarRef = e)
              : (this._snackBarRefAtThisLevel = e);
          }
          openFromComponent(e, i) {
            return this._attach(e, i);
          }
          openFromTemplate(e, i) {
            return this._attach(e, i);
          }
          open(e, i = "", r) {
            const s = Object.assign(Object.assign({}, this._defaultConfig), r);
            return (
              (s.data = { message: e, action: i }),
              s.announcementMessage === e && (s.announcementMessage = void 0),
              this.openFromComponent(this.simpleSnackBarComponent, s)
            );
          }
          dismiss() {
            this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
          }
          ngOnDestroy() {
            this._snackBarRefAtThisLevel &&
              this._snackBarRefAtThisLevel.dismiss();
          }
          _attachSnackBarContainer(e, i) {
            const s = ae.create({
                parent:
                  (i && i.viewContainerRef && i.viewContainerRef.injector) ||
                  this._injector,
                providers: [{ provide: Xh, useValue: i }],
              }),
              o = new ya(
                this.snackBarContainerComponent,
                i.viewContainerRef,
                s
              ),
              a = e.attach(o);
            return (a.instance.snackBarConfig = i), a.instance;
          }
          _attach(e, i) {
            const r = Object.assign(
                Object.assign(Object.assign({}, new Xh()), this._defaultConfig),
                i
              ),
              s = this._createOverlay(r),
              o = this._attachSnackBarContainer(s, r),
              a = new tb(o, s);
            if (e instanceof Se) {
              const l = new fc(e, null, { $implicit: r.data, snackBarRef: a });
              a.instance = o.attachTemplatePortal(l);
            } else {
              const l = this._createInjector(r, a),
                c = new ya(e, void 0, l),
                u = o.attachComponentPortal(c);
              a.instance = u.instance;
            }
            return (
              this._breakpointObserver
                .observe("(max-width: 599.98px) and (orientation: portrait)")
                .pipe(re(s.detachments()))
                .subscribe((l) => {
                  const c = s.overlayElement.classList;
                  l.matches
                    ? c.add(this.handsetCssClass)
                    : c.remove(this.handsetCssClass);
                }),
              r.announcementMessage &&
                o._onAnnounce.subscribe(() => {
                  this._live.announce(r.announcementMessage, r.politeness);
                }),
              this._animateSnackBar(a, r),
              (this._openedSnackBarRef = a),
              this._openedSnackBarRef
            );
          }
          _animateSnackBar(e, i) {
            e.afterDismissed().subscribe(() => {
              this._openedSnackBarRef == e && (this._openedSnackBarRef = null),
                i.announcementMessage && this._live.clear();
            }),
              this._openedSnackBarRef
                ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                    e.containerInstance.enter();
                  }),
                  this._openedSnackBarRef.dismiss())
                : e.containerInstance.enter(),
              i.duration &&
                i.duration > 0 &&
                e.afterOpened().subscribe(() => e._dismissAfter(i.duration));
          }
          _createOverlay(e) {
            const i = new ah();
            i.direction = e.direction;
            let r = this._overlay.position().global();
            const s = "rtl" === e.direction,
              o =
                "left" === e.horizontalPosition ||
                ("start" === e.horizontalPosition && !s) ||
                ("end" === e.horizontalPosition && s),
              a = !o && "center" !== e.horizontalPosition;
            return (
              o ? r.left("0") : a ? r.right("0") : r.centerHorizontally(),
              "top" === e.verticalPosition ? r.top("0") : r.bottom("0"),
              (i.positionStrategy = r),
              this._overlay.create(i)
            );
          }
          _createInjector(e, i) {
            return ae.create({
              parent:
                (e && e.viewContainerRef && e.viewContainerRef.injector) ||
                this._injector,
              providers: [
                { provide: tb, useValue: i },
                { provide: _k, useValue: e.data },
              ],
            });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(m(oi), m(dh), m(ae), m(eb), m(n, 12), m(bk));
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n(m(oi), m(dh), m(ur), m(eb), m(n, 12), m(bk));
            },
            token: n,
            providedIn: yk,
          })),
          n
        );
      })();
      function PW(n, t) {
        if ((1 & n && (b(0, "th", 23), I(1), v()), 2 & n)) {
          const e = T().$implicit;
          w(1), ye(" ", e.header, " ");
        }
      }
      function FW(n, t) {
        if ((1 & n && (b(0, "td", 24), I(1), v()), 2 & n)) {
          const e = t.$implicit,
            i = T().$implicit;
          w(1), ye(" ", i.cell(e), " ");
        }
      }
      function LW(n, t) {
        1 & n &&
          (Xn(0, 20), S(1, PW, 2, 1, "th", 21), S(2, FW, 2, 1, "td", 22), Zn()),
          2 & n && D("matColumnDef", t.$implicit.columnDef);
      }
      function VW(n, t) {
        1 & n && Z(0, "tr", 25);
      }
      function BW(n, t) {
        1 & n && Z(0, "tr", 26);
      }
      function HW(n, t) {
        if (
          (1 & n &&
            (b(0, "div", 27),
            b(1, "div", 28),
            I(2),
            v(),
            b(3, "div", 29),
            I(4),
            v(),
            v()),
          2 & n)
        ) {
          const e = T();
          w(2), Ke(e.teamData[0].name), w(2), Ke(e.teamData[0].score);
        }
      }
      function $W(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "li", 31),
            R("click", function () {
              const s = ce(e).$implicit;
              return T(2).openDialog(s);
            }),
            I(1),
            Z(2, "br"),
            b(3, "span"),
            I(4),
            v(),
            v();
        }
        if (2 & n) {
          const e = t.$implicit;
          w(1), ye("", e.device_id, " "), w(3), Ke(e.name);
        }
      }
      function jW(n, t) {
        if ((1 & n && (b(0, "ul"), S(1, $W, 5, 2, "li", 30), v()), 2 & n)) {
          const e = T();
          w(1), D("ngForOf", e.teamData[0].players);
        }
      }
      function UW(n, t) {
        if (
          (1 & n &&
            (b(0, "div", 27),
            b(1, "div", 28),
            I(2),
            v(),
            b(3, "div", 29),
            I(4),
            v(),
            v()),
          2 & n)
        ) {
          const e = T();
          w(2), Ke(e.teamData[1].name), w(2), Ke(e.teamData[1].score);
        }
      }
      function zW(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "li", 31),
            R("click", function () {
              const s = ce(e).$implicit;
              return T(2).openDialog(s);
            }),
            I(1),
            Z(2, "br"),
            b(3, "span"),
            I(4),
            v(),
            v();
        }
        if (2 & n) {
          const e = t.$implicit;
          w(1), ye("", e.device_id, " "), w(3), Ke(e.name);
        }
      }
      function GW(n, t) {
        if ((1 & n && (b(0, "ul"), S(1, zW, 5, 2, "li", 30), v()), 2 & n)) {
          const e = T();
          w(1), D("ngForOf", e.teamData[1].players);
        }
      }
      const WW = ["class", "dialog"];
      let qW = (() => {
          class n {
            constructor(e, i, r, s, o, a) {
              (this.mainservice = e),
                (this.dialog = i),
                (this.subService = r),
                (this.lBoard = s),
                (this.changeDetectorRefs = o),
                (this._snackBar = a),
                (this.playlist = { current: "", next: "" }),
                (this.topPlayers = []),
                (this.serverName = ""),
                (this.columns = [
                  {
                    columnDef: "rank",
                    header: "No.",
                    cell: (l) => `${l.rank}`,
                  },
                  {
                    columnDef: "name",
                    header: "Name",
                    cell: (l) => `${l.name}`,
                  },
                  {
                    columnDef: "scores",
                    header: "Score",
                    cell: (l) => `${l.scores}`,
                  },
                  {
                    columnDef: "kills",
                    header: "Kills",
                    cell: (l) => `${l.kills}`,
                  },
                ]),
                (this.dataSource = new WA()),
                (this.displayedColumns = this.columns.map((l) => l.columnDef));
            }
            ngOnInit() {
              this.mainservice.getServerName().subscribe((e) => {
                this.serverName = e.name;
              }),
                this.getLeaderboard(),
                this.lBoard.leaderboardUpdateEvent.subscribe((e) => {
                  this.getLeaderboard(),
                    this.changeDetectorRefs.detectChanges();
                }),
                this.refreshData(),
                (this.updateSubscription = (function (n = 0, t = pa) {
                  return (
                    (!M_(n) || n < 0) && (n = 0),
                    (!t || "function" != typeof t.schedule) && (t = pa),
                    new Ce(
                      (e) => (
                        e.add(
                          t.schedule(X7, n, {
                            subscriber: e,
                            counter: 0,
                            period: n,
                          })
                        ),
                        e
                      )
                    )
                  );
                })(9e3).subscribe((e) => {
                  this.refreshData();
                }));
            }
            getLeaderboard() {
              (this.topPlayers = this.lBoard.getLeaderboard().slice(0, 5)),
                (this.dataSource.data = this.topPlayers);
            }
            openDialog(e) {
              this.dialog
                .open(YW, { data: e })
                .afterClosed()
                .subscribe((r) => {
                  if ((console.log(`Dialog result: ${r}`), r)) {
                    this.subService.subscribeToNotifications(
                      r.account_id,
                      r.name
                    );
                    let s = `Subscribed to ${name} , conformation notification will be sent shortely.`;
                    this.openSnackBar(s, "ok");
                  }
                });
            }
            openSnackBar(e, i) {
              this._snackBar.open(e, i);
            }
            refreshData() {
              this.mainservice.getLiveStats().subscribe((e) => {
                (this.playlist = e.playlist), (this.teamData = e.teamInfo);
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Wy), f(Oh), f(Qy), f(Xy), f(Be), f(vk));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["app-home"]],
              decls: 31,
              vars: 11,
              consts: [
                [1, "main-container"],
                [1, "row"],
                [1, "col", "sub-container1"],
                [1, "sc11"],
                [1, "live-card"],
                [1, "leaderboard"],
                [1, "heading"],
                ["mat-table", "", 1, "demo-table", 3, "dataSource"],
                [3, "matColumnDef", 4, "ngFor", "ngForOf"],
                ["mat-header-row", "", 4, "matHeaderRowDef"],
                ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                [1, "col", "sub-container2"],
                [1, "live-players"],
                [1, "server-name"],
                [1, "d-flex", "justify-content-center", "pt-5", "scoreboard"],
                [1, "teamA"],
                ["class", "header", 4, "ngIf"],
                [1, "players"],
                [4, "ngIf"],
                [1, "teamB"],
                [3, "matColumnDef"],
                ["mat-header-cell", "", 4, "matHeaderCellDef"],
                ["mat-cell", "", 4, "matCellDef"],
                ["mat-header-cell", ""],
                ["mat-cell", ""],
                ["mat-header-row", ""],
                ["mat-row", ""],
                [1, "header"],
                [1, "name"],
                [1, "score"],
                [3, "click", 4, "ngFor", "ngForOf"],
                [3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "div", 0),
                  b(1, "div", 1),
                  b(2, "div", 2),
                  b(3, "div", 1),
                  b(4, "div", 3),
                  b(5, "div", 4),
                  I(6),
                  v(),
                  b(7, "div", 4),
                  I(8),
                  v(),
                  v(),
                  v(),
                  b(9, "div", 1),
                  b(10, "div", 5),
                  b(11, "div", 6),
                  b(12, "h3"),
                  I(13, "Leaderboard"),
                  v(),
                  v(),
                  b(14, "table", 7),
                  S(15, LW, 3, 1, "ng-container", 8),
                  S(16, VW, 1, 0, "tr", 9),
                  S(17, BW, 1, 0, "tr", 10),
                  v(),
                  v(),
                  v(),
                  v(),
                  b(18, "div", 11),
                  b(19, "div", 12),
                  b(20, "div", 13),
                  I(21),
                  v(),
                  b(22, "div", 14),
                  b(23, "div", 15),
                  S(24, HW, 5, 2, "div", 16),
                  b(25, "div", 17),
                  S(26, jW, 2, 1, "ul", 18),
                  v(),
                  v(),
                  b(27, "div", 19),
                  S(28, UW, 5, 2, "div", 16),
                  b(29, "div", 17),
                  S(30, GW, 2, 1, "ul", 18),
                  v(),
                  v(),
                  v(),
                  v(),
                  v(),
                  v(),
                  v()),
                  2 & e &&
                    (w(6),
                    ye(" Current Map : ", i.playlist.current, " "),
                    w(2),
                    ye(" Next Map : ", i.playlist.next, " "),
                    w(6),
                    D("dataSource", i.dataSource),
                    w(1),
                    D("ngForOf", i.columns),
                    w(1),
                    D("matHeaderRowDef", i.displayedColumns),
                    w(1),
                    D("matRowDefColumns", i.displayedColumns),
                    w(4),
                    ye(" ", i.serverName, " "),
                    w(3),
                    D("ngIf", i.teamData),
                    w(2),
                    D("ngIf", i.teamData),
                    w(2),
                    D("ngIf", i.teamData),
                    w(2),
                    D("ngIf", i.teamData));
              },
              directives: [Py, En, Fy, Ly, bt, Wh, Gh, zh, qh, Yh, Vy, By],
              styles: [
                ".main-container[_ngcontent-%COMP%]{width:85%;margin:2rem auto auto}.sub-container1[_ngcontent-%COMP%]{margin-bottom:2rem}.sub-container1[_ngcontent-%COMP%]   .sc11[_ngcontent-%COMP%]{background-color:#272b4a;width:97%;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}.sub-container2[_ngcontent-%COMP%]{background-color:#272b4a;margin-bottom:2rem}.live-card[_ngcontent-%COMP%]{width:70%;height:4rem;margin:2rem auto;background-color:#4a5188;padding-top:1.2rem;padding-left:1rem}.leaderboard[_ngcontent-%COMP%]{width:100%;margin-top:1em}.leaderboard[_ngcontent-%COMP%]   .heading[_ngcontent-%COMP%]{padding-top:.9rem;text-align:center;display:none}.leaderboard[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:97%}.live-players[_ngcontent-%COMP%]   .server-name[_ngcontent-%COMP%]{margin-top:2rem;width:100%;font-size:1.6rem;text-align:center}.live-players[_ngcontent-%COMP%]   .scoreboard[_ngcontent-%COMP%]{text-align:center}.live-players[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style-type:none;padding:0}.live-players[_ngcontent-%COMP%]   .teamA[_ngcontent-%COMP%]{width:16em;padding:1rem;margin-right:1rem}.live-players[_ngcontent-%COMP%]   .teamA[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{padding:1rem;background-color:#3f51b5}.live-players[_ngcontent-%COMP%]   .teamA[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .score[_ngcontent-%COMP%]{padding-top:4px;font-size:1.7rem}.live-players[_ngcontent-%COMP%]   .teamB[_ngcontent-%COMP%]{width:16em;padding:1rem;margin-left:1rem}.live-players[_ngcontent-%COMP%]   .teamB[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{padding:1rem;background-color:#f44336}.live-players[_ngcontent-%COMP%]   .teamB[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .score[_ngcontent-%COMP%]{padding-top:4px;font-size:1.7rem}.live-players[_ngcontent-%COMP%]   .players[_ngcontent-%COMP%]{padding-left:.7rem;text-align:left;padding-top:1rem}.live-players[_ngcontent-%COMP%]   .players[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding-bottom:1rem}.mat-table[_ngcontent-%COMP%]{background-color:#272b4a}@media only screen and (max-width: 768px){.sub-container1[_ngcontent-%COMP%]{margin-bottom:1rem}.sub-container1[_ngcontent-%COMP%]   .sc11[_ngcontent-%COMP%]{width:100%}.leaderboard[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}}",
              ],
            })),
            n
          );
        })(),
        YW = (() => {
          class n {
            constructor(e) {
              this.data = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(LA));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["profile", 8, "dialog"]],
              attrs: WW,
              decls: 13,
              vars: 6,
              consts: [
                ["mat-dialog-title", ""],
                [1, "mat-typography"],
                ["align", "end"],
                [1, "btn", "btn-primary", "btn-block", 3, "mat-dialog-close"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "h2", 0),
                  I(1),
                  v(),
                  b(2, "mat-dialog-content", 1),
                  b(3, "h3"),
                  I(4),
                  v(),
                  I(5),
                  Z(6, "br"),
                  I(7),
                  Z(8, "br"),
                  I(9),
                  v(),
                  b(10, "mat-dialog-actions", 2),
                  b(11, "button", 3),
                  I(12, "Subscribe"),
                  v(),
                  v()),
                  2 & e &&
                    (w(1),
                    Ke(i.data.name),
                    w(3),
                    ye("Device_Id: ", i.data.device_id, ""),
                    w(1),
                    ye(" Character: ", i.data.character, ""),
                    w(2),
                    ye(" In Game:", i.data.inGame, ""),
                    w(2),
                    ye(" id: ", i.data.account_id, "\n"),
                    w(2),
                    D("mat-dialog-close", i.data));
              },
              directives: [v7, w7, C7, b7],
              encapsulation: 2,
            })),
            n
          );
        })();
      const KW = ["underline"],
        JW = ["connectionContainer"],
        QW = ["inputContainer"],
        XW = ["label"];
      function ZW(n, t) {
        1 & n &&
          (Xn(0),
          b(1, "div", 14),
          Z(2, "div", 15),
          Z(3, "div", 16),
          Z(4, "div", 17),
          v(),
          b(5, "div", 18),
          Z(6, "div", 15),
          Z(7, "div", 16),
          Z(8, "div", 17),
          v(),
          Zn());
      }
      function e9(n, t) {
        1 & n && (b(0, "div", 19), Ye(1, 1), v());
      }
      function t9(n, t) {
        if (
          (1 & n && (Xn(0), Ye(1, 2), b(2, "span"), I(3), v(), Zn()), 2 & n)
        ) {
          const e = T(2);
          w(3), Ke(e._control.placeholder);
        }
      }
      function n9(n, t) {
        1 & n && Ye(0, 3, ["*ngSwitchCase", "true"]);
      }
      function i9(n, t) {
        1 & n && (b(0, "span", 23), I(1, " *"), v());
      }
      function r9(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "label", 20, 21),
            R("cdkObserveContent", function () {
              return ce(e), T().updateOutlineGap();
            }),
            S(2, t9, 4, 1, "ng-container", 12),
            S(3, n9, 1, 0, "ng-content", 12),
            S(4, i9, 2, 0, "span", 22),
            v();
        }
        if (2 & n) {
          const e = T();
          q("mat-empty", e._control.empty && !e._shouldAlwaysFloat())(
            "mat-form-field-empty",
            e._control.empty && !e._shouldAlwaysFloat()
          )("mat-accent", "accent" == e.color)("mat-warn", "warn" == e.color),
            D("cdkObserveContentDisabled", "outline" != e.appearance)(
              "id",
              e._labelId
            )("ngSwitch", e._hasLabel()),
            X("for", e._control.id)("aria-owns", e._control.id),
            w(2),
            D("ngSwitchCase", !1),
            w(1),
            D("ngSwitchCase", !0),
            w(1),
            D(
              "ngIf",
              !e.hideRequiredMarker &&
                e._control.required &&
                !e._control.disabled
            );
        }
      }
      function s9(n, t) {
        1 & n && (b(0, "div", 24), Ye(1, 4), v());
      }
      function o9(n, t) {
        if ((1 & n && (b(0, "div", 25, 26), Z(2, "span", 27), v()), 2 & n)) {
          const e = T();
          w(2),
            q("mat-accent", "accent" == e.color)("mat-warn", "warn" == e.color);
        }
      }
      function a9(n, t) {
        1 & n && (b(0, "div"), Ye(1, 5), v()),
          2 & n && D("@transitionMessages", T()._subscriptAnimationState);
      }
      function l9(n, t) {
        if ((1 & n && (b(0, "div", 31), I(1), v()), 2 & n)) {
          const e = T(2);
          D("id", e._hintLabelId), w(1), Ke(e.hintLabel);
        }
      }
      function c9(n, t) {
        if (
          (1 & n &&
            (b(0, "div", 28),
            S(1, l9, 2, 2, "div", 29),
            Ye(2, 6),
            Z(3, "div", 30),
            Ye(4, 7),
            v()),
          2 & n)
        ) {
          const e = T();
          D("@transitionMessages", e._subscriptAnimationState),
            w(1),
            D("ngIf", e.hintLabel);
        }
      }
      const u9 = [
          "*",
          [["", "matPrefix", ""]],
          [["mat-placeholder"]],
          [["mat-label"]],
          [["", "matSuffix", ""]],
          [["mat-error"]],
          [["mat-hint", 3, "align", "end"]],
          [["mat-hint", "align", "end"]],
        ],
        d9 = [
          "*",
          "[matPrefix]",
          "mat-placeholder",
          "mat-label",
          "[matSuffix]",
          "mat-error",
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ],
        wk = new P("MatError"),
        f9 = {
          transitionMessages: ai("transitionMessages", [
            gt("enter", we({ opacity: 1, transform: "translateY(0%)" })),
            St("void => enter", [
              we({ opacity: 0, transform: "translateY(-5px)" }),
              Ut("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
            ]),
          ]),
        };
      let Zh = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵdir = M({ type: n })),
          n
        );
      })();
      const Ck = new P("MatHint");
      let nb = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = M({ type: n, selectors: [["mat-label"]] })),
            n
          );
        })(),
        g9 = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = M({ type: n, selectors: [["mat-placeholder"]] })),
            n
          );
        })();
      const Dk = new P("MatPrefix"),
        Ek = new P("MatSuffix");
      let Mk = 0;
      const _9 = EA(
          class {
            constructor(n) {
              this._elementRef = n;
            }
          },
          "primary"
        ),
        y9 = new P("MAT_FORM_FIELD_DEFAULT_OPTIONS"),
        ib = new P("MatFormField");
      let Tk = (() => {
          class n extends _9 {
            constructor(e, i, r, s, o, a, l, c) {
              super(e),
                (this._changeDetectorRef = i),
                (this._dir = s),
                (this._defaults = o),
                (this._platform = a),
                (this._ngZone = l),
                (this._outlineGapCalculationNeededImmediately = !1),
                (this._outlineGapCalculationNeededOnStable = !1),
                (this._destroyed = new O()),
                (this._showAlwaysAnimate = !1),
                (this._subscriptAnimationState = ""),
                (this._hintLabel = ""),
                (this._hintLabelId = "mat-hint-" + Mk++),
                (this._labelId = "mat-form-field-label-" + Mk++),
                (this.floatLabel = this._getDefaultFloatLabelState()),
                (this._animationsEnabled = "NoopAnimations" !== c),
                (this.appearance = o && o.appearance ? o.appearance : "legacy"),
                (this._hideRequiredMarker =
                  !(!o || null == o.hideRequiredMarker) &&
                  o.hideRequiredMarker);
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(e) {
              const i = this._appearance;
              (this._appearance =
                e || (this._defaults && this._defaults.appearance) || "legacy"),
                "outline" === this._appearance &&
                  i !== e &&
                  (this._outlineGapCalculationNeededOnStable = !0);
            }
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(e) {
              this._hideRequiredMarker = We(e);
            }
            _shouldAlwaysFloat() {
              return "always" === this.floatLabel && !this._showAlwaysAnimate;
            }
            _canLabelFloat() {
              return "never" !== this.floatLabel;
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(e) {
              (this._hintLabel = e), this._processHints();
            }
            get floatLabel() {
              return "legacy" !== this.appearance &&
                "never" === this._floatLabel
                ? "auto"
                : this._floatLabel;
            }
            set floatLabel(e) {
              e !== this._floatLabel &&
                ((this._floatLabel = e || this._getDefaultFloatLabelState()),
                this._changeDetectorRef.markForCheck());
            }
            get _control() {
              return (
                this._explicitFormFieldControl ||
                this._controlNonStatic ||
                this._controlStatic
              );
            }
            set _control(e) {
              this._explicitFormFieldControl = e;
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._connectionContainerRef || this._elementRef;
            }
            ngAfterContentInit() {
              this._validateControlChild();
              const e = this._control;
              e.controlType &&
                this._elementRef.nativeElement.classList.add(
                  `mat-form-field-type-${e.controlType}`
                ),
                e.stateChanges.pipe(Bn(null)).subscribe(() => {
                  this._validatePlaceholders(),
                    this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                e.ngControl &&
                  e.ngControl.valueChanges &&
                  e.ngControl.valueChanges
                    .pipe(re(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck()),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .pipe(re(this._destroyed))
                    .subscribe(() => {
                      this._outlineGapCalculationNeededOnStable &&
                        this.updateOutlineGap();
                    });
                }),
                Tn(
                  this._prefixChildren.changes,
                  this._suffixChildren.changes
                ).subscribe(() => {
                  (this._outlineGapCalculationNeededOnStable = !0),
                    this._changeDetectorRef.markForCheck();
                }),
                this._hintChildren.changes.pipe(Bn(null)).subscribe(() => {
                  this._processHints(), this._changeDetectorRef.markForCheck();
                }),
                this._errorChildren.changes.pipe(Bn(null)).subscribe(() => {
                  this._syncDescribedByIds(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._dir &&
                  this._dir.change.pipe(re(this._destroyed)).subscribe(() => {
                    "function" == typeof requestAnimationFrame
                      ? this._ngZone.runOutsideAngular(() => {
                          requestAnimationFrame(() => this.updateOutlineGap());
                        })
                      : this.updateOutlineGap();
                  });
            }
            ngAfterContentChecked() {
              this._validateControlChild(),
                this._outlineGapCalculationNeededImmediately &&
                  this.updateOutlineGap();
            }
            ngAfterViewInit() {
              (this._subscriptAnimationState = "enter"),
                this._changeDetectorRef.detectChanges();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _shouldForward(e) {
              const i = this._control ? this._control.ngControl : null;
              return i && i[e];
            }
            _hasPlaceholder() {
              return !!(
                (this._control && this._control.placeholder) ||
                this._placeholderChild
              );
            }
            _hasLabel() {
              return !(!this._labelChildNonStatic && !this._labelChildStatic);
            }
            _shouldLabelFloat() {
              return (
                this._canLabelFloat() &&
                ((this._control && this._control.shouldLabelFloat) ||
                  this._shouldAlwaysFloat())
              );
            }
            _hideControlPlaceholder() {
              return (
                ("legacy" === this.appearance && !this._hasLabel()) ||
                (this._hasLabel() && !this._shouldLabelFloat())
              );
            }
            _hasFloatingLabel() {
              return (
                this._hasLabel() ||
                ("legacy" === this.appearance && this._hasPlaceholder())
              );
            }
            _getDisplayedMessages() {
              return this._errorChildren &&
                this._errorChildren.length > 0 &&
                this._control.errorState
                ? "error"
                : "hint";
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() &&
                this._canLabelFloat() &&
                (this._animationsEnabled &&
                  this._label &&
                  ((this._showAlwaysAnimate = !0),
                  ct(this._label.nativeElement, "transitionend")
                    .pipe(Oe(1))
                    .subscribe(() => {
                      this._showAlwaysAnimate = !1;
                    })),
                (this.floatLabel = "always"),
                this._changeDetectorRef.markForCheck());
            }
            _validatePlaceholders() {}
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _getDefaultFloatLabelState() {
              return (this._defaults && this._defaults.floatLabel) || "auto";
            }
            _syncDescribedByIds() {
              if (this._control) {
                let e = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    "string" == typeof this._control.userAriaDescribedBy &&
                    e.push(...this._control.userAriaDescribedBy.split(" ")),
                  "hint" === this._getDisplayedMessages())
                ) {
                  const i = this._hintChildren
                      ? this._hintChildren.find((s) => "start" === s.align)
                      : null,
                    r = this._hintChildren
                      ? this._hintChildren.find((s) => "end" === s.align)
                      : null;
                  i
                    ? e.push(i.id)
                    : this._hintLabel && e.push(this._hintLabelId),
                    r && e.push(r.id);
                } else
                  this._errorChildren &&
                    e.push(...this._errorChildren.map((i) => i.id));
                this._control.setDescribedByIds(e);
              }
            }
            _validateControlChild() {}
            updateOutlineGap() {
              const e = this._label ? this._label.nativeElement : null;
              if (
                !(
                  "outline" === this.appearance &&
                  e &&
                  e.children.length &&
                  e.textContent.trim() &&
                  this._platform.isBrowser
                )
              )
                return;
              if (!this._isAttachedToDOM())
                return void (this._outlineGapCalculationNeededImmediately = !0);
              let i = 0,
                r = 0;
              const s = this._connectionContainerRef.nativeElement,
                o = s.querySelectorAll(".mat-form-field-outline-start"),
                a = s.querySelectorAll(".mat-form-field-outline-gap");
              if (this._label && this._label.nativeElement.children.length) {
                const l = s.getBoundingClientRect();
                if (0 === l.width && 0 === l.height)
                  return (
                    (this._outlineGapCalculationNeededOnStable = !0),
                    void (this._outlineGapCalculationNeededImmediately = !1)
                  );
                const c = this._getStartEnd(l),
                  u = e.children,
                  d = this._getStartEnd(u[0].getBoundingClientRect());
                let h = 0;
                for (let p = 0; p < u.length; p++) h += u[p].offsetWidth;
                (i = Math.abs(d - c) - 5), (r = h > 0 ? 0.75 * h + 10 : 0);
              }
              for (let l = 0; l < o.length; l++) o[l].style.width = `${i}px`;
              for (let l = 0; l < a.length; l++) a[l].style.width = `${r}px`;
              this._outlineGapCalculationNeededOnStable =
                this._outlineGapCalculationNeededImmediately = !1;
            }
            _getStartEnd(e) {
              return this._dir && "rtl" === this._dir.value ? e.right : e.left;
            }
            _isAttachedToDOM() {
              const e = this._elementRef.nativeElement;
              if (e.getRootNode) {
                const i = e.getRootNode();
                return i && i !== e;
              }
              return document.documentElement.contains(e);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                f(L),
                f(Be),
                f(L),
                f(si, 8),
                f(y9, 8),
                f(je),
                f(H),
                f(Bs, 8)
              );
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-form-field"]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e &&
                    (me(r, Zh, 5),
                    me(r, Zh, 7),
                    me(r, nb, 5),
                    me(r, nb, 7),
                    me(r, g9, 5),
                    me(r, wk, 5),
                    me(r, Ck, 5),
                    me(r, Dk, 5),
                    me(r, Ek, 5)),
                  2 & e)
                ) {
                  let s;
                  U((s = z())) && (i._controlNonStatic = s.first),
                    U((s = z())) && (i._controlStatic = s.first),
                    U((s = z())) && (i._labelChildNonStatic = s.first),
                    U((s = z())) && (i._labelChildStatic = s.first),
                    U((s = z())) && (i._placeholderChild = s.first),
                    U((s = z())) && (i._errorChildren = s),
                    U((s = z())) && (i._hintChildren = s),
                    U((s = z())) && (i._prefixChildren = s),
                    U((s = z())) && (i._suffixChildren = s);
                }
              },
              viewQuery: function (e, i) {
                if (
                  (1 & e && (Qe(KW, 5), Qe(JW, 7), Qe(QW, 5), Qe(XW, 5)), 2 & e)
                ) {
                  let r;
                  U((r = z())) && (i.underlineRef = r.first),
                    U((r = z())) && (i._connectionContainerRef = r.first),
                    U((r = z())) && (i._inputContainerRef = r.first),
                    U((r = z())) && (i._label = r.first);
                }
              },
              hostAttrs: [1, "mat-form-field"],
              hostVars: 40,
              hostBindings: function (e, i) {
                2 & e &&
                  q(
                    "mat-form-field-appearance-standard",
                    "standard" == i.appearance
                  )("mat-form-field-appearance-fill", "fill" == i.appearance)(
                    "mat-form-field-appearance-outline",
                    "outline" == i.appearance
                  )(
                    "mat-form-field-appearance-legacy",
                    "legacy" == i.appearance
                  )("mat-form-field-invalid", i._control.errorState)(
                    "mat-form-field-can-float",
                    i._canLabelFloat()
                  )("mat-form-field-should-float", i._shouldLabelFloat())(
                    "mat-form-field-has-label",
                    i._hasFloatingLabel()
                  )(
                    "mat-form-field-hide-placeholder",
                    i._hideControlPlaceholder()
                  )("mat-form-field-disabled", i._control.disabled)(
                    "mat-form-field-autofilled",
                    i._control.autofilled
                  )("mat-focused", i._control.focused)(
                    "ng-untouched",
                    i._shouldForward("untouched")
                  )("ng-touched", i._shouldForward("touched"))(
                    "ng-pristine",
                    i._shouldForward("pristine")
                  )("ng-dirty", i._shouldForward("dirty"))(
                    "ng-valid",
                    i._shouldForward("valid")
                  )("ng-invalid", i._shouldForward("invalid"))(
                    "ng-pending",
                    i._shouldForward("pending")
                  )("_mat-animation-noopable", !i._animationsEnabled);
              },
              inputs: {
                color: "color",
                floatLabel: "floatLabel",
                appearance: "appearance",
                hideRequiredMarker: "hideRequiredMarker",
                hintLabel: "hintLabel",
              },
              exportAs: ["matFormField"],
              features: [Y([{ provide: ib, useExisting: n }]), B],
              ngContentSelectors: d9,
              decls: 15,
              vars: 8,
              consts: [
                [1, "mat-form-field-wrapper"],
                [1, "mat-form-field-flex", 3, "click"],
                ["connectionContainer", ""],
                [4, "ngIf"],
                ["class", "mat-form-field-prefix", 4, "ngIf"],
                [1, "mat-form-field-infix"],
                ["inputContainer", ""],
                [1, "mat-form-field-label-wrapper"],
                [
                  "class",
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "mat-empty",
                  "mat-form-field-empty",
                  "mat-accent",
                  "mat-warn",
                  "ngSwitch",
                  "cdkObserveContent",
                  4,
                  "ngIf",
                ],
                ["class", "mat-form-field-suffix", 4, "ngIf"],
                ["class", "mat-form-field-underline", 4, "ngIf"],
                [1, "mat-form-field-subscript-wrapper", 3, "ngSwitch"],
                [4, "ngSwitchCase"],
                ["class", "mat-form-field-hint-wrapper", 4, "ngSwitchCase"],
                [1, "mat-form-field-outline"],
                [1, "mat-form-field-outline-start"],
                [1, "mat-form-field-outline-gap"],
                [1, "mat-form-field-outline-end"],
                [1, "mat-form-field-outline", "mat-form-field-outline-thick"],
                [1, "mat-form-field-prefix"],
                [
                  1,
                  "mat-form-field-label",
                  3,
                  "cdkObserveContentDisabled",
                  "id",
                  "ngSwitch",
                  "cdkObserveContent",
                ],
                ["label", ""],
                [
                  "class",
                  "mat-placeholder-required mat-form-field-required-marker",
                  "aria-hidden",
                  "true",
                  4,
                  "ngIf",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "mat-placeholder-required",
                  "mat-form-field-required-marker",
                ],
                [1, "mat-form-field-suffix"],
                [1, "mat-form-field-underline"],
                ["underline", ""],
                [1, "mat-form-field-ripple"],
                [1, "mat-form-field-hint-wrapper"],
                ["class", "mat-hint", 3, "id", 4, "ngIf"],
                [1, "mat-form-field-hint-spacer"],
                [1, "mat-hint", 3, "id"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Wt(u9),
                  b(0, "div", 0),
                  b(1, "div", 1, 2),
                  R("click", function (s) {
                    return (
                      i._control.onContainerClick &&
                      i._control.onContainerClick(s)
                    );
                  }),
                  S(3, ZW, 9, 0, "ng-container", 3),
                  S(4, e9, 2, 0, "div", 4),
                  b(5, "div", 5, 6),
                  Ye(7),
                  b(8, "span", 7),
                  S(9, r9, 5, 16, "label", 8),
                  v(),
                  v(),
                  S(10, s9, 2, 0, "div", 9),
                  v(),
                  S(11, o9, 3, 4, "div", 10),
                  b(12, "div", 11),
                  S(13, a9, 2, 1, "div", 12),
                  S(14, c9, 5, 2, "div", 13),
                  v(),
                  v()),
                  2 & e &&
                    (w(3),
                    D("ngIf", "outline" == i.appearance),
                    w(1),
                    D("ngIf", i._prefixChildren.length),
                    w(5),
                    D("ngIf", i._hasFloatingLabel()),
                    w(1),
                    D("ngIf", i._suffixChildren.length),
                    w(1),
                    D("ngIf", "outline" != i.appearance),
                    w(1),
                    D("ngSwitch", i._getDisplayedMessages()),
                    w(1),
                    D("ngSwitchCase", "error"),
                    w(1),
                    D("ngSwitchCase", "hint"));
              },
              directives: [bt, Yl, Hm, xz],
              styles: [
                ".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n",
                '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n',
                '.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',
                ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n",
                ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n",
                ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n",
              ],
              encapsulation: 2,
              data: { animation: [f9.transitionMessages] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        ef = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et, ut, ZS], ut] })),
            n
          );
        })();
      function tf(n, t) {
        return new Ce((e) => {
          const i = n.length;
          if (0 === i) return void e.complete();
          const r = new Array(i);
          let s = 0,
            o = 0;
          for (let a = 0; a < i; a++) {
            const l = Pt(n[a]);
            let c = !1;
            e.add(
              l.subscribe({
                next: (u) => {
                  c || ((c = !0), o++), (r[a] = u);
                },
                error: (u) => e.error(u),
                complete: () => {
                  s++,
                    (s === i || !c) &&
                      (o === i &&
                        e.next(
                          t ? t.reduce((u, d, h) => ((u[d] = r[h]), u), {}) : r
                        ),
                      e.complete());
                },
              })
            );
          }
        });
      }
      const Zt = new P("NgValidators"),
        Jr = new P("NgAsyncValidators");
      function Bk(n) {
        return null != n;
      }
      function Hk(n) {
        const t = wl(n) ? Pt(n) : n;
        return Ou(t), t;
      }
      function $k(n) {
        let t = {};
        return (
          n.forEach((e) => {
            t = null != e ? Object.assign(Object.assign({}, t), e) : t;
          }),
          0 === Object.keys(t).length ? null : t
        );
      }
      function jk(n, t) {
        return t.map((e) => e(n));
      }
      function Uk(n) {
        return n.map((t) =>
          (function (n) {
            return !n.validate;
          })(t)
            ? t
            : (e) => t.validate(e)
        );
      }
      function sb(n) {
        return null != n
          ? (function (n) {
              if (!n) return null;
              const t = n.filter(Bk);
              return 0 == t.length
                ? null
                : function (e) {
                    return $k(jk(e, t));
                  };
            })(Uk(n))
          : null;
      }
      function ob(n) {
        return null != n
          ? (function (n) {
              if (!n) return null;
              const t = n.filter(Bk);
              return 0 == t.length
                ? null
                : function (e) {
                    return (function (...n) {
                      if (1 === n.length) {
                        const t = n[0];
                        if (Tr(t)) return tf(t, null);
                        if (
                          kf(t) &&
                          Object.getPrototypeOf(t) === Object.prototype
                        ) {
                          const e = Object.keys(t);
                          return tf(
                            e.map((i) => t[i]),
                            e
                          );
                        }
                      }
                      if ("function" == typeof n[n.length - 1]) {
                        const t = n.pop();
                        return tf(
                          (n = 1 === n.length && Tr(n[0]) ? n[0] : n),
                          null
                        ).pipe(Q((e) => t(...e)));
                      }
                      return tf(n, null);
                    })(jk(e, t).map(Hk)).pipe(Q($k));
                  };
            })(Uk(n))
          : null;
      }
      function Wk(n, t) {
        return null === n ? [t] : Array.isArray(n) ? [...n, t] : [n, t];
      }
      function qk(n) {
        return n._rawValidators;
      }
      function Yk(n) {
        return n._rawAsyncValidators;
      }
      function ab(n) {
        return n ? (Array.isArray(n) ? n : [n]) : [];
      }
      function nf(n, t) {
        return Array.isArray(n) ? n.includes(t) : n === t;
      }
      function Kk(n, t) {
        const e = ab(t);
        return (
          ab(n).forEach((r) => {
            nf(e, r) || e.push(r);
          }),
          e
        );
      }
      function Jk(n, t) {
        return ab(t).filter((e) => !nf(n, e));
      }
      let Qk = (() => {
          class n {
            constructor() {
              (this._rawValidators = []),
                (this._rawAsyncValidators = []),
                (this._onDestroyCallbacks = []);
            }
            get value() {
              return this.control ? this.control.value : null;
            }
            get valid() {
              return this.control ? this.control.valid : null;
            }
            get invalid() {
              return this.control ? this.control.invalid : null;
            }
            get pending() {
              return this.control ? this.control.pending : null;
            }
            get disabled() {
              return this.control ? this.control.disabled : null;
            }
            get enabled() {
              return this.control ? this.control.enabled : null;
            }
            get errors() {
              return this.control ? this.control.errors : null;
            }
            get pristine() {
              return this.control ? this.control.pristine : null;
            }
            get dirty() {
              return this.control ? this.control.dirty : null;
            }
            get touched() {
              return this.control ? this.control.touched : null;
            }
            get status() {
              return this.control ? this.control.status : null;
            }
            get untouched() {
              return this.control ? this.control.untouched : null;
            }
            get statusChanges() {
              return this.control ? this.control.statusChanges : null;
            }
            get valueChanges() {
              return this.control ? this.control.valueChanges : null;
            }
            get path() {
              return null;
            }
            _setValidators(e) {
              (this._rawValidators = e || []),
                (this._composedValidatorFn = sb(this._rawValidators));
            }
            _setAsyncValidators(e) {
              (this._rawAsyncValidators = e || []),
                (this._composedAsyncValidatorFn = ob(this._rawAsyncValidators));
            }
            get validator() {
              return this._composedValidatorFn || null;
            }
            get asyncValidator() {
              return this._composedAsyncValidatorFn || null;
            }
            _registerOnDestroy(e) {
              this._onDestroyCallbacks.push(e);
            }
            _invokeOnDestroyCallbacks() {
              this._onDestroyCallbacks.forEach((e) => e()),
                (this._onDestroyCallbacks = []);
            }
            reset(e) {
              this.control && this.control.reset(e);
            }
            hasError(e, i) {
              return !!this.control && this.control.hasError(e, i);
            }
            getError(e, i) {
              return this.control ? this.control.getError(e, i) : null;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵdir = M({ type: n })),
            n
          );
        })(),
        vn = (() => {
          class n extends Qk {
            get formDirective() {
              return null;
            }
            get path() {
              return null;
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵdir = M({ type: n, features: [B] })),
            n
          );
        })();
      class er extends Qk {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      function Dc(n, t) {
        ub(n, t),
          t.valueAccessor.writeValue(n.value),
          (function (n, t) {
            t.valueAccessor.registerOnChange((e) => {
              (n._pendingValue = e),
                (n._pendingChange = !0),
                (n._pendingDirty = !0),
                "change" === n.updateOn && Zk(n, t);
            });
          })(n, t),
          (function (n, t) {
            const e = (i, r) => {
              t.valueAccessor.writeValue(i), r && t.viewToModelUpdate(i);
            };
            n.registerOnChange(e),
              t._registerOnDestroy(() => {
                n._unregisterOnChange(e);
              });
          })(n, t),
          (function (n, t) {
            t.valueAccessor.registerOnTouched(() => {
              (n._pendingTouched = !0),
                "blur" === n.updateOn && n._pendingChange && Zk(n, t),
                "submit" !== n.updateOn && n.markAsTouched();
            });
          })(n, t),
          (function (n, t) {
            if (t.valueAccessor.setDisabledState) {
              const e = (i) => {
                t.valueAccessor.setDisabledState(i);
              };
              n.registerOnDisabledChange(e),
                t._registerOnDestroy(() => {
                  n._unregisterOnDisabledChange(e);
                });
            }
          })(n, t);
      }
      function of(n, t, e = !0) {
        const i = () => {};
        t.valueAccessor &&
          (t.valueAccessor.registerOnChange(i),
          t.valueAccessor.registerOnTouched(i)),
          lf(n, t),
          n &&
            (t._invokeOnDestroyCallbacks(),
            n._registerOnCollectionChange(() => {}));
      }
      function af(n, t) {
        n.forEach((e) => {
          e.registerOnValidatorChange && e.registerOnValidatorChange(t);
        });
      }
      function ub(n, t) {
        const e = qk(n);
        null !== t.validator
          ? n.setValidators(Wk(e, t.validator))
          : "function" == typeof e && n.setValidators([e]);
        const i = Yk(n);
        null !== t.asyncValidator
          ? n.setAsyncValidators(Wk(i, t.asyncValidator))
          : "function" == typeof i && n.setAsyncValidators([i]);
        const r = () => n.updateValueAndValidity();
        af(t._rawValidators, r), af(t._rawAsyncValidators, r);
      }
      function lf(n, t) {
        let e = !1;
        if (null !== n) {
          if (null !== t.validator) {
            const r = qk(n);
            if (Array.isArray(r) && r.length > 0) {
              const s = r.filter((o) => o !== t.validator);
              s.length !== r.length && ((e = !0), n.setValidators(s));
            }
          }
          if (null !== t.asyncValidator) {
            const r = Yk(n);
            if (Array.isArray(r) && r.length > 0) {
              const s = r.filter((o) => o !== t.asyncValidator);
              s.length !== r.length && ((e = !0), n.setAsyncValidators(s));
            }
          }
        }
        const i = () => {};
        return af(t._rawValidators, i), af(t._rawAsyncValidators, i), e;
      }
      function Zk(n, t) {
        n._pendingDirty && n.markAsDirty(),
          n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
          t.viewToModelUpdate(n._pendingValue),
          (n._pendingChange = !1);
      }
      function eN(n, t) {
        ub(n, t);
      }
      function tN(n, t) {
        n._syncPendingControls(),
          t.forEach((e) => {
            const i = e.control;
            "submit" === i.updateOn &&
              i._pendingChange &&
              (e.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
          });
      }
      function cf(n, t) {
        const e = n.indexOf(t);
        e > -1 && n.splice(e, 1);
      }
      const Ec = "VALID",
        uf = "INVALID",
        Na = "PENDING",
        Mc = "DISABLED";
      function fb(n) {
        return (gb(n) ? n.validators : n) || null;
      }
      function nN(n) {
        return Array.isArray(n) ? sb(n) : n || null;
      }
      function pb(n, t) {
        return (gb(t) ? t.asyncValidators : n) || null;
      }
      function iN(n) {
        return Array.isArray(n) ? ob(n) : n || null;
      }
      function gb(n) {
        return null != n && !Array.isArray(n) && "object" == typeof n;
      }
      class mb {
        constructor(t, e) {
          (this._hasOwnPendingAsyncValidator = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            (this._rawValidators = t),
            (this._rawAsyncValidators = e),
            (this._composedValidatorFn = nN(this._rawValidators)),
            (this._composedAsyncValidatorFn = iN(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(t) {
          this._rawValidators = this._composedValidatorFn = t;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(t) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = t;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === Ec;
        }
        get invalid() {
          return this.status === uf;
        }
        get pending() {
          return this.status == Na;
        }
        get disabled() {
          return this.status === Mc;
        }
        get enabled() {
          return this.status !== Mc;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(t) {
          (this._rawValidators = t), (this._composedValidatorFn = nN(t));
        }
        setAsyncValidators(t) {
          (this._rawAsyncValidators = t),
            (this._composedAsyncValidatorFn = iN(t));
        }
        addValidators(t) {
          this.setValidators(Kk(t, this._rawValidators));
        }
        addAsyncValidators(t) {
          this.setAsyncValidators(Kk(t, this._rawAsyncValidators));
        }
        removeValidators(t) {
          this.setValidators(Jk(t, this._rawValidators));
        }
        removeAsyncValidators(t) {
          this.setAsyncValidators(Jk(t, this._rawAsyncValidators));
        }
        hasValidator(t) {
          return nf(this._rawValidators, t);
        }
        hasAsyncValidator(t) {
          return nf(this._rawAsyncValidators, t);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(t = {}) {
          (this.touched = !0),
            this._parent && !t.onlySelf && this._parent.markAsTouched(t);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((t) => t.markAllAsTouched());
        }
        markAsUntouched(t = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        markAsDirty(t = {}) {
          (this.pristine = !1),
            this._parent && !t.onlySelf && this._parent.markAsDirty(t);
        }
        markAsPristine(t = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        markAsPending(t = {}) {
          (this.status = Na),
            !1 !== t.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !t.onlySelf && this._parent.markAsPending(t);
        }
        disable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = Mc),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable(Object.assign(Object.assign({}, t), { onlySelf: !0 }));
            }),
            this._updateValue(),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors(
              Object.assign(Object.assign({}, t), { skipPristineCheck: e })
            ),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = Ec),
            this._forEachChild((i) => {
              i.enable(Object.assign(Object.assign({}, t), { onlySelf: !0 }));
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            }),
            this._updateAncestors(
              Object.assign(Object.assign({}, t), { skipPristineCheck: e })
            ),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(t) {
          this._parent &&
            !t.onlySelf &&
            (this._parent.updateValueAndValidity(t),
            t.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(t) {
          this._parent = t;
        }
        updateValueAndValidity(t = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === Ec || this.status === Na) &&
                this._runAsyncValidator(t.emitEvent)),
            !1 !== t.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !t.onlySelf &&
              this._parent.updateValueAndValidity(t);
        }
        _updateTreeValidity(t = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(t)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: t.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Mc : Ec;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(t) {
          if (this.asyncValidator) {
            (this.status = Na), (this._hasOwnPendingAsyncValidator = !0);
            const e = Hk(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: t });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(t, e = {}) {
          (this.errors = t), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(t) {
          return (function (n, t, e) {
            if (
              null == t ||
              (Array.isArray(t) || (t = t.split(".")),
              Array.isArray(t) && 0 === t.length)
            )
              return null;
            let i = n;
            return (
              t.forEach((r) => {
                i =
                  i instanceof _b
                    ? i.controls.hasOwnProperty(r)
                      ? i.controls[r]
                      : null
                    : (i instanceof B9 && i.at(r)) || null;
              }),
              i
            );
          })(this, t);
        }
        getError(t, e) {
          const i = e ? this.get(e) : this;
          return i && i.errors ? i.errors[t] : null;
        }
        hasError(t, e) {
          return !!this.getError(t, e);
        }
        get root() {
          let t = this;
          for (; t._parent; ) t = t._parent;
          return t;
        }
        _updateControlsErrors(t) {
          (this.status = this._calculateStatus()),
            t && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(t);
        }
        _initObservables() {
          (this.valueChanges = new F()), (this.statusChanges = new F());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Mc
            : this.errors
            ? uf
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(Na)
            ? Na
            : this._anyControlsHaveStatus(uf)
            ? uf
            : Ec;
        }
        _anyControlsHaveStatus(t) {
          return this._anyControls((e) => e.status === t);
        }
        _anyControlsDirty() {
          return this._anyControls((t) => t.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((t) => t.touched);
        }
        _updatePristine(t = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        _updateTouched(t = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        _isBoxedValue(t) {
          return (
            "object" == typeof t &&
            null !== t &&
            2 === Object.keys(t).length &&
            "value" in t &&
            "disabled" in t
          );
        }
        _registerOnCollectionChange(t) {
          this._onCollectionChange = t;
        }
        _setUpdateStrategy(t) {
          gb(t) && null != t.updateOn && (this._updateOn = t.updateOn);
        }
        _parentMarkedDirty(t) {
          return (
            !t &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
      }
      class df extends mb {
        constructor(t = null, e, i) {
          super(fb(e), pb(i, e)),
            (this._onChange = []),
            this._applyFormState(t),
            this._setUpdateStrategy(e),
            this._initObservables(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        setValue(t, e = {}) {
          (this.value = this._pendingValue = t),
            this._onChange.length &&
              !1 !== e.emitModelToViewChange &&
              this._onChange.forEach((i) =>
                i(this.value, !1 !== e.emitViewToModelChange)
              ),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          this.setValue(t, e);
        }
        reset(t = null, e = {}) {
          this._applyFormState(t),
            this.markAsPristine(e),
            this.markAsUntouched(e),
            this.setValue(this.value, e),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(t) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(t) {
          this._onChange.push(t);
        }
        _unregisterOnChange(t) {
          cf(this._onChange, t);
        }
        registerOnDisabledChange(t) {
          this._onDisabledChange.push(t);
        }
        _unregisterOnDisabledChange(t) {
          cf(this._onDisabledChange, t);
        }
        _forEachChild(t) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(t) {
          this._isBoxedValue(t)
            ? ((this.value = this._pendingValue = t.value),
              t.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = t);
        }
      }
      class _b extends mb {
        constructor(t, e, i) {
          super(fb(e), pb(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(t, e) {
          return this.controls[t]
            ? this.controls[t]
            : ((this.controls[t] = e),
              e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange),
              e);
        }
        addControl(t, e, i = {}) {
          this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(t, e = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        setControl(t, e, i = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            e && this.registerControl(t, e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        contains(t) {
          return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
        }
        setValue(t, e = {}) {
          this._checkAllValuesPresent(t),
            Object.keys(t).forEach((i) => {
              this._throwIfControlMissing(i),
                this.controls[i].setValue(t[i], {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (Object.keys(t).forEach((i) => {
              this.controls[i] &&
                this.controls[i].patchValue(t[i], {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = {}, e = {}) {
          this._forEachChild((i, r) => {
            i.reset(t[r], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (t, e, i) => (
              (t[i] = e instanceof df ? e.value : e.getRawValue()), t
            )
          );
        }
        _syncPendingControls() {
          let t = this._reduceChildren(
            !1,
            (e, i) => !!i._syncPendingControls() || e
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _throwIfControlMissing(t) {
          if (!Object.keys(this.controls).length)
            throw new Error(
              "\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.controls[t])
            throw new Error(`Cannot find form control with name: ${t}.`);
        }
        _forEachChild(t) {
          Object.keys(this.controls).forEach((e) => {
            const i = this.controls[e];
            i && t(i, e);
          });
        }
        _setUpControls() {
          this._forEachChild((t) => {
            t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(t) {
          for (const e of Object.keys(this.controls)) {
            const i = this.controls[e];
            if (this.contains(e) && t(i)) return !0;
          }
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (t, e, i) => ((e.enabled || this.disabled) && (t[i] = e.value), t)
          );
        }
        _reduceChildren(t, e) {
          let i = t;
          return (
            this._forEachChild((r, s) => {
              i = e(i, r, s);
            }),
            i
          );
        }
        _allControlsDisabled() {
          for (const t of Object.keys(this.controls))
            if (this.controls[t].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _checkAllValuesPresent(t) {
          this._forEachChild((e, i) => {
            if (void 0 === t[i])
              throw new Error(
                `Must supply a value for form control with name: '${i}'.`
              );
          });
        }
      }
      class B9 extends mb {
        constructor(t, e, i) {
          super(fb(e), pb(i, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(t) {
          return this.controls[t];
        }
        push(t, e = {}) {
          this.controls.push(t),
            this._registerControl(t),
            this.updateValueAndValidity({ emitEvent: e.emitEvent }),
            this._onCollectionChange();
        }
        insert(t, e, i = {}) {
          this.controls.splice(t, 0, e),
            this._registerControl(e),
            this.updateValueAndValidity({ emitEvent: i.emitEvent });
        }
        removeAt(t, e = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            this.controls.splice(t, 1),
            this.updateValueAndValidity({ emitEvent: e.emitEvent });
        }
        setControl(t, e, i = {}) {
          this.controls[t] &&
            this.controls[t]._registerOnCollectionChange(() => {}),
            this.controls.splice(t, 1),
            e && (this.controls.splice(t, 0, e), this._registerControl(e)),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(t, e = {}) {
          this._checkAllValuesPresent(t),
            t.forEach((i, r) => {
              this._throwIfControlMissing(r),
                this.at(r).setValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (t.forEach((i, r) => {
              this.at(r) &&
                this.at(r).patchValue(i, {
                  onlySelf: !0,
                  emitEvent: e.emitEvent,
                });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = [], e = {}) {
          this._forEachChild((i, r) => {
            i.reset(t[r], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this.controls.map((t) =>
            t instanceof df ? t.value : t.getRawValue()
          );
        }
        clear(t = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((e) => e._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: t.emitEvent }));
        }
        _syncPendingControls() {
          let t = this.controls.reduce(
            (e, i) => !!i._syncPendingControls() || e,
            !1
          );
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _throwIfControlMissing(t) {
          if (!this.controls.length)
            throw new Error(
              "\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.at(t))
            throw new Error(`Cannot find form control at index ${t}`);
        }
        _forEachChild(t) {
          this.controls.forEach((e, i) => {
            t(e, i);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((t) => t.enabled || this.disabled)
            .map((t) => t.value);
        }
        _anyControls(t) {
          return this.controls.some((e) => e.enabled && t(e));
        }
        _setUpControls() {
          this._forEachChild((t) => this._registerControl(t));
        }
        _checkAllValuesPresent(t) {
          this._forEachChild((e, i) => {
            if (void 0 === t[i])
              throw new Error(
                `Must supply a value for form control at index: ${i}.`
              );
          });
        }
        _allControlsDisabled() {
          for (const t of this.controls) if (t.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(t) {
          t.setParent(this),
            t._registerOnCollectionChange(this._onCollectionChange);
        }
      }
      const H9 = { provide: vn, useExisting: Ee(() => Tc) },
        Sc = (() => Promise.resolve(null))();
      let Tc = (() => {
          class n extends vn {
            constructor(e, i) {
              super(),
                (this.submitted = !1),
                (this._directives = []),
                (this.ngSubmit = new F()),
                (this.form = new _b({}, sb(e), ob(i)));
            }
            ngAfterViewInit() {
              this._setUpdateStrategy();
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            get controls() {
              return this.form.controls;
            }
            addControl(e) {
              Sc.then(() => {
                const i = this._findContainer(e.path);
                (e.control = i.registerControl(e.name, e.control)),
                  Dc(e.control, e),
                  e.control.updateValueAndValidity({ emitEvent: !1 }),
                  this._directives.push(e);
              });
            }
            getControl(e) {
              return this.form.get(e.path);
            }
            removeControl(e) {
              Sc.then(() => {
                const i = this._findContainer(e.path);
                i && i.removeControl(e.name), cf(this._directives, e);
              });
            }
            addFormGroup(e) {
              Sc.then(() => {
                const i = this._findContainer(e.path),
                  r = new _b({});
                eN(r, e),
                  i.registerControl(e.name, r),
                  r.updateValueAndValidity({ emitEvent: !1 });
              });
            }
            removeFormGroup(e) {
              Sc.then(() => {
                const i = this._findContainer(e.path);
                i && i.removeControl(e.name);
              });
            }
            getFormGroup(e) {
              return this.form.get(e.path);
            }
            updateModel(e, i) {
              Sc.then(() => {
                this.form.get(e.path).setValue(i);
              });
            }
            setValue(e) {
              this.control.setValue(e);
            }
            onSubmit(e) {
              return (
                (this.submitted = !0),
                tN(this.form, this._directives),
                this.ngSubmit.emit(e),
                !1
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(e) {
              this.form.reset(e), (this.submitted = !1);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.form._updateOn = this.options.updateOn);
            }
            _findContainer(e) {
              return e.pop(), e.length ? this.form.get(e) : this.form;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Zt, 10), f(Jr, 10));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
                ["ng-form"],
                ["", "ngForm", ""],
              ],
              hostBindings: function (e, i) {
                1 & e &&
                  R("submit", function (s) {
                    return i.onSubmit(s);
                  })("reset", function () {
                    return i.onReset();
                  });
              },
              inputs: { options: ["ngFormOptions", "options"] },
              outputs: { ngSubmit: "ngSubmit" },
              exportAs: ["ngForm"],
              features: [Y([H9]), B],
            })),
            n
          );
        })(),
        cN = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({})),
            n
          );
        })();
      const K9 = { provide: vn, useExisting: Ee(() => Ac) };
      let Ac = (() => {
          class n extends vn {
            constructor(e, i) {
              super(),
                (this.validators = e),
                (this.asyncValidators = i),
                (this.submitted = !1),
                (this._onCollectionChange = () => this._updateDomValue()),
                (this.directives = []),
                (this.form = null),
                (this.ngSubmit = new F()),
                this._setValidators(e),
                this._setAsyncValidators(i);
            }
            ngOnChanges(e) {
              this._checkFormPresent(),
                e.hasOwnProperty("form") &&
                  (this._updateValidators(),
                  this._updateDomValue(),
                  this._updateRegistrations(),
                  (this._oldForm = this.form));
            }
            ngOnDestroy() {
              this.form &&
                (lf(this.form, this),
                this.form._onCollectionChange === this._onCollectionChange &&
                  this.form._registerOnCollectionChange(() => {}));
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            addControl(e) {
              const i = this.form.get(e.path);
              return (
                Dc(i, e),
                i.updateValueAndValidity({ emitEvent: !1 }),
                this.directives.push(e),
                i
              );
            }
            getControl(e) {
              return this.form.get(e.path);
            }
            removeControl(e) {
              of(e.control || null, e, !1), cf(this.directives, e);
            }
            addFormGroup(e) {
              this._setUpFormContainer(e);
            }
            removeFormGroup(e) {
              this._cleanUpFormContainer(e);
            }
            getFormGroup(e) {
              return this.form.get(e.path);
            }
            addFormArray(e) {
              this._setUpFormContainer(e);
            }
            removeFormArray(e) {
              this._cleanUpFormContainer(e);
            }
            getFormArray(e) {
              return this.form.get(e.path);
            }
            updateModel(e, i) {
              this.form.get(e.path).setValue(i);
            }
            onSubmit(e) {
              return (
                (this.submitted = !0),
                tN(this.form, this.directives),
                this.ngSubmit.emit(e),
                !1
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(e) {
              this.form.reset(e), (this.submitted = !1);
            }
            _updateDomValue() {
              this.directives.forEach((e) => {
                const i = e.control,
                  r = this.form.get(e.path);
                i !== r &&
                  (of(i || null, e),
                  r instanceof df && (Dc(r, e), (e.control = r)));
              }),
                this.form._updateTreeValidity({ emitEvent: !1 });
            }
            _setUpFormContainer(e) {
              const i = this.form.get(e.path);
              eN(i, e), i.updateValueAndValidity({ emitEvent: !1 });
            }
            _cleanUpFormContainer(e) {
              if (this.form) {
                const i = this.form.get(e.path);
                i &&
                  (function (n, t) {
                    return lf(n, t);
                  })(i, e) &&
                  i.updateValueAndValidity({ emitEvent: !1 });
              }
            }
            _updateRegistrations() {
              this.form._registerOnCollectionChange(this._onCollectionChange),
                this._oldForm &&
                  this._oldForm._registerOnCollectionChange(() => {});
            }
            _updateValidators() {
              ub(this.form, this), this._oldForm && lf(this._oldForm, this);
            }
            _checkFormPresent() {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Zt, 10), f(Jr, 10));
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "formGroup", ""]],
              hostBindings: function (e, i) {
                1 & e &&
                  R("submit", function (s) {
                    return i.onSubmit(s);
                  })("reset", function () {
                    return i.onReset();
                  });
              },
              inputs: { form: ["formGroup", "form"] },
              outputs: { ngSubmit: "ngSubmit" },
              exportAs: ["ngForm"],
              features: [Y([K9]), B, Me],
            })),
            n
          );
        })(),
        AN = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[cN]] })),
            n
          );
        })(),
        dq = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [AN] })),
            n
          );
        })();
      const hq = ["trigger"],
        fq = ["panel"];
      function pq(n, t) {
        if ((1 & n && (b(0, "span", 8), I(1), v()), 2 & n)) {
          const e = T();
          w(1), Ke(e.placeholder);
        }
      }
      function gq(n, t) {
        if ((1 & n && (b(0, "span", 12), I(1), v()), 2 & n)) {
          const e = T(2);
          w(1), Ke(e.triggerValue);
        }
      }
      function mq(n, t) {
        1 & n && Ye(0, 0, ["*ngSwitchCase", "true"]);
      }
      function _q(n, t) {
        1 & n &&
          (b(0, "span", 9),
          S(1, gq, 2, 1, "span", 10),
          S(2, mq, 1, 0, "ng-content", 11),
          v()),
          2 & n &&
            (D("ngSwitch", !!T().customTrigger), w(2), D("ngSwitchCase", !0));
      }
      function yq(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "div", 13),
            b(1, "div", 14, 15),
            R("@transformPanel.done", function (r) {
              return ce(e), T()._panelDoneAnimatingStream.next(r.toState);
            })("keydown", function (r) {
              return ce(e), T()._handleKeydown(r);
            }),
            Ye(3, 1),
            v(),
            v();
        }
        if (2 & n) {
          const e = T();
          D("@transformPanelWrap", void 0),
            w(1),
            (function (n, t, e) {
              Ci(In, qi, No(k(), n, t, e), !0);
            })("mat-select-panel ", e._getPanelTheme(), ""),
            Fn("transform-origin", e._transformOrigin)(
              "font-size",
              e._triggerFontSize,
              "px"
            ),
            D("ngClass", e.panelClass)(
              "@transformPanel",
              e.multiple ? "showing-multiple" : "showing"
            ),
            X("id", e.id + "-panel")("aria-multiselectable", e.multiple)(
              "aria-label",
              e.ariaLabel || null
            )("aria-labelledby", e._getPanelAriaLabelledby());
        }
      }
      const bq = [[["mat-select-trigger"]], "*"],
        vq = ["mat-select-trigger", "*"],
        kN = {
          transformPanelWrap: ai("transformPanelWrap", [
            St("* => void", ET("@transformPanel", [DT()], { optional: !0 })),
          ]),
          transformPanel: ai("transformPanel", [
            gt(
              "void",
              we({ transform: "scaleY(0.8)", minWidth: "100%", opacity: 0 })
            ),
            gt(
              "showing",
              we({
                opacity: 1,
                minWidth: "calc(100% + 32px)",
                transform: "scaleY(1)",
              })
            ),
            gt(
              "showing-multiple",
              we({
                opacity: 1,
                minWidth: "calc(100% + 64px)",
                transform: "scaleY(1)",
              })
            ),
            St("void => *", Ut("120ms cubic-bezier(0, 0, 0.2, 1)")),
            St("* => void", Ut("100ms 25ms linear", we({ opacity: 0 }))),
          ]),
        };
      let NN = 0;
      const IN = new P("mat-select-scroll-strategy"),
        Eq = new P("MAT_SELECT_CONFIG"),
        Mq = {
          provide: IN,
          deps: [oi],
          useFactory: function (n) {
            return () => n.scrollStrategies.reposition();
          },
        };
      class Sq {
        constructor(t, e) {
          (this.source = t), (this.value = e);
        }
      }
      const Tq = MA(
          FG(
            Ma(
              SA(
                class {
                  constructor(n, t, e, i, r) {
                    (this._elementRef = n),
                      (this._defaultErrorStateMatcher = t),
                      (this._parentForm = e),
                      (this._parentFormGroup = i),
                      (this.ngControl = r);
                  }
                }
              )
            )
          )
        ),
        xN = new P("MatSelectTrigger");
      let Aq = (() => {
          class n extends Tq {
            constructor(e, i, r, s, o, a, l, c, u, d, h, p, g, _) {
              var y, E, C;
              super(o, s, l, c, d),
                (this._viewportRuler = e),
                (this._changeDetectorRef = i),
                (this._ngZone = r),
                (this._dir = a),
                (this._parentFormField = u),
                (this._liveAnnouncer = g),
                (this._defaultOptions = _),
                (this._panelOpen = !1),
                (this._compareWith = (N, x) => N === x),
                (this._uid = "mat-select-" + NN++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new O()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = "mat-select-value-" + NN++),
                (this._panelDoneAnimatingStream = new O()),
                (this._overlayPanelClass =
                  (null === (y = this._defaultOptions) || void 0 === y
                    ? void 0
                    : y.overlayPanelClass) || ""),
                (this._focused = !1),
                (this.controlType = "mat-select"),
                (this._required = !1),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  null !==
                    (C =
                      null === (E = this._defaultOptions) || void 0 === E
                        ? void 0
                        : E.disableOptionCentering) &&
                  void 0 !== C &&
                  C),
                (this.ariaLabel = ""),
                (this.optionSelectionChanges = oa(() => {
                  const N = this.options;
                  return N
                    ? N.changes.pipe(
                        Bn(N),
                        jt(() => Tn(...N.map((x) => x.onSelectionChange)))
                      )
                    : this._ngZone.onStable.pipe(
                        Oe(1),
                        jt(() => this.optionSelectionChanges)
                      );
                })),
                (this.openedChange = new F()),
                (this._openedStream = this.openedChange.pipe(
                  Pe((N) => N),
                  Q(() => {})
                )),
                (this._closedStream = this.openedChange.pipe(
                  Pe((N) => !N),
                  Q(() => {})
                )),
                (this.selectionChange = new F()),
                (this.valueChange = new F()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != (null == _ ? void 0 : _.typeaheadDebounceInterval) &&
                  (this._typeaheadDebounceInterval =
                    _.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = p),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(h) || 0),
                (this.id = this.id);
            }
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(e) {
              (this._placeholder = e), this.stateChanges.next();
            }
            get required() {
              return this._required;
            }
            set required(e) {
              (this._required = We(e)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(e) {
              this._multiple = We(e);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(e) {
              this._disableOptionCentering = We(e);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(e) {
              (this._compareWith = e),
                this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(e) {
              (e !== this._value || (this._multiple && Array.isArray(e))) &&
                (this.options && this._setSelectionByValue(e),
                (this._value = e));
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(e) {
              this._typeaheadDebounceInterval = Hn(e);
            }
            get id() {
              return this._id;
            }
            set id(e) {
              (this._id = e || this._uid), this.stateChanges.next();
            }
            ngOnInit() {
              (this._selectionModel = new VU(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe(fa(), re(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed
                  .pipe(re(this._destroy))
                  .subscribe((e) => {
                    e.added.forEach((i) => i.select()),
                      e.removed.forEach((i) => i.deselect());
                  }),
                this.options.changes
                  .pipe(Bn(null), re(this._destroy))
                  .subscribe(() => {
                    this._resetOptions(), this._initializeSelection();
                  });
            }
            ngDoCheck() {
              const e = this._getTriggerAriaLabelledby();
              if (e !== this._triggerAriaLabelledBy) {
                const i = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = e),
                  e
                    ? i.setAttribute("aria-labelledby", e)
                    : i.removeAttribute("aria-labelledby");
              }
              this.ngControl && this.updateErrorState();
            }
            ngOnChanges(e) {
              e.disabled && this.stateChanges.next(),
                e.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(
                    this._typeaheadDebounceInterval
                  );
            }
            ngOnDestroy() {
              this._destroy.next(),
                this._destroy.complete(),
                this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(
                  this._isRtl() ? "rtl" : "ltr"
                ),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(e) {
              this.value = e;
            }
            registerOnChange(e) {
              this._onChange = e;
            }
            registerOnTouched(e) {
              this._onTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e),
                this._changeDetectorRef.markForCheck(),
                this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple
                ? this._selectionModel.selected
                : this._selectionModel.selected[0];
            }
            get triggerValue() {
              if (this.empty) return "";
              if (this._multiple) {
                const e = this._selectionModel.selected.map((i) => i.viewValue);
                return this._isRtl() && e.reverse(), e.join(", ");
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && "rtl" === this._dir.value;
            }
            _handleKeydown(e) {
              this.disabled ||
                (this.panelOpen
                  ? this._handleOpenKeydown(e)
                  : this._handleClosedKeydown(e));
            }
            _handleClosedKeydown(e) {
              const i = e.keyCode,
                r = 40 === i || 38 === i || 37 === i || 39 === i,
                s = 13 === i || 32 === i,
                o = this._keyManager;
              if (
                (!o.isTyping() && s && !Is(e)) ||
                ((this.multiple || e.altKey) && r)
              )
                e.preventDefault(), this.open();
              else if (!this.multiple) {
                const a = this.selected;
                o.onKeydown(e);
                const l = this.selected;
                l && a !== l && this._liveAnnouncer.announce(l.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(e) {
              const i = this._keyManager,
                r = e.keyCode,
                s = 40 === r || 38 === r,
                o = i.isTyping();
              if (s && e.altKey) e.preventDefault(), this.close();
              else if (o || (13 !== r && 32 !== r) || !i.activeItem || Is(e))
                if (!o && this._multiple && 65 === r && e.ctrlKey) {
                  e.preventDefault();
                  const a = this.options.some(
                    (l) => !l.disabled && !l.selected
                  );
                  this.options.forEach((l) => {
                    l.disabled || (a ? l.select() : l.deselect());
                  });
                } else {
                  const a = i.activeItemIndex;
                  i.onKeydown(e),
                    this._multiple &&
                      s &&
                      e.shiftKey &&
                      i.activeItem &&
                      i.activeItemIndex !== a &&
                      i.activeItem._selectViaInteraction();
                }
              else e.preventDefault(), i.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                !this.disabled &&
                  !this.panelOpen &&
                  (this._onTouched(),
                  this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next());
            }
            _onAttached() {
              this._overlayDir.positionChange.pipe(Oe(1)).subscribe(() => {
                this._changeDetectorRef.detectChanges(),
                  this._positioningSettled();
              });
            }
            _getPanelTheme() {
              return this._parentFormField
                ? `mat-${this._parentFormField.color}`
                : "";
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this._setSelectionByValue(
                  this.ngControl ? this.ngControl.value : this._value
                ),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(e) {
              if (
                (this._selectionModel.selected.forEach((i) =>
                  i.setInactiveStyles()
                ),
                this._selectionModel.clear(),
                this.multiple && e)
              )
                Array.isArray(e),
                  e.forEach((i) => this._selectValue(i)),
                  this._sortValues();
              else {
                const i = this._selectValue(e);
                i
                  ? this._keyManager.updateActiveItem(i)
                  : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectValue(e) {
              const i = this.options.find((r) => {
                if (this._selectionModel.isSelected(r)) return !1;
                try {
                  return null != r.value && this._compareWith(r.value, e);
                } catch (s) {
                  return !1;
                }
              });
              return i && this._selectionModel.select(i), i;
            }
            _initKeyManager() {
              (this._keyManager = new Vz(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr")
                .withHomeAndEnd()
                .withAllowedModifierKeys(["shiftKey"])),
                this._keyManager.tabOut
                  .pipe(re(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      (!this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction(),
                      this.focus(),
                      this.close());
                  }),
                this._keyManager.change
                  .pipe(re(this._destroy))
                  .subscribe(() => {
                    this._panelOpen && this.panel
                      ? this._scrollOptionIntoView(
                          this._keyManager.activeItemIndex || 0
                        )
                      : !this._panelOpen &&
                        !this.multiple &&
                        this._keyManager.activeItem &&
                        this._keyManager.activeItem._selectViaInteraction();
                  });
            }
            _resetOptions() {
              const e = Tn(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe(re(e)).subscribe((i) => {
                this._onSelect(i.source, i.isUserInput),
                  i.isUserInput &&
                    !this.multiple &&
                    this._panelOpen &&
                    (this.close(), this.focus());
              }),
                Tn(...this.options.map((i) => i._stateChanges))
                  .pipe(re(e))
                  .subscribe(() => {
                    this._changeDetectorRef.markForCheck(),
                      this.stateChanges.next();
                  });
            }
            _onSelect(e, i) {
              const r = this._selectionModel.isSelected(e);
              null != e.value || this._multiple
                ? (r !== e.selected &&
                    (e.selected
                      ? this._selectionModel.select(e)
                      : this._selectionModel.deselect(e)),
                  i && this._keyManager.setActiveItem(e),
                  this.multiple && (this._sortValues(), i && this.focus()))
                : (e.deselect(),
                  this._selectionModel.clear(),
                  null != this.value && this._propagateChanges(e.value)),
                r !== this._selectionModel.isSelected(e) &&
                  this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const e = this.options.toArray();
                this._selectionModel.sort((i, r) =>
                  this.sortComparator
                    ? this.sortComparator(i, r, e)
                    : e.indexOf(i) - e.indexOf(r)
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(e) {
              let i = null;
              (i = this.multiple
                ? this.selected.map((r) => r.value)
                : this.selected
                ? this.selected.value
                : e),
                (this._value = i),
                this.valueChange.emit(i),
                this._onChange(i),
                this.selectionChange.emit(this._getChangeEvent(i)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(
                      this._selectionModel.selected[0]
                    ));
            }
            _canOpen() {
              var e;
              return (
                !this._panelOpen &&
                !this.disabled &&
                (null === (e = this.options) || void 0 === e
                  ? void 0
                  : e.length) > 0
              );
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _getPanelAriaLabelledby() {
              var e;
              if (this.ariaLabel) return null;
              const i =
                null === (e = this._parentFormField) || void 0 === e
                  ? void 0
                  : e.getLabelId();
              return this.ariaLabelledby
                ? (i ? i + " " : "") + this.ariaLabelledby
                : i;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen &&
                this._keyManager &&
                this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              var e;
              if (this.ariaLabel) return null;
              const i =
                null === (e = this._parentFormField) || void 0 === e
                  ? void 0
                  : e.getLabelId();
              let r = (i ? i + " " : "") + this._valueId;
              return this.ariaLabelledby && (r += " " + this.ariaLabelledby), r;
            }
            _panelDoneAnimating(e) {
              this.openedChange.emit(e);
            }
            setDescribedByIds(e) {
              this._ariaDescribedby = e.join(" ");
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return (
                this._panelOpen ||
                !this.empty ||
                (this._focused && !!this._placeholder)
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                f(Rs),
                f(Be),
                f(H),
                f(yy),
                f(L),
                f(si, 8),
                f(Tc, 8),
                f(Ac, 8),
                f(ib, 8),
                f(er, 10),
                gi("tabindex"),
                f(IN),
                f(dh),
                f(Eq, 8)
              );
            }),
            (n.ɵdir = M({
              type: n,
              viewQuery: function (e, i) {
                if ((1 & e && (Qe(hq, 5), Qe(fq, 5), Qe(QS, 5)), 2 & e)) {
                  let r;
                  U((r = z())) && (i.trigger = r.first),
                    U((r = z())) && (i.panel = r.first),
                    U((r = z())) && (i._overlayDir = r.first);
                }
              },
              inputs: {
                ariaLabel: ["aria-label", "ariaLabel"],
                id: "id",
                placeholder: "placeholder",
                required: "required",
                multiple: "multiple",
                disableOptionCentering: "disableOptionCentering",
                compareWith: "compareWith",
                value: "value",
                typeaheadDebounceInterval: "typeaheadDebounceInterval",
                panelClass: "panelClass",
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                errorStateMatcher: "errorStateMatcher",
                sortComparator: "sortComparator",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                _closedStream: "closed",
                selectionChange: "selectionChange",
                valueChange: "valueChange",
              },
              features: [B, Me],
            })),
            n
          );
        })(),
        kq = (() => {
          class n extends Aq {
            constructor() {
              super(...arguments),
                (this._scrollTop = 0),
                (this._triggerFontSize = 0),
                (this._transformOrigin = "top"),
                (this._offsetY = 0),
                (this._positions = [
                  {
                    originX: "start",
                    originY: "top",
                    overlayX: "start",
                    overlayY: "top",
                  },
                  {
                    originX: "start",
                    originY: "bottom",
                    overlayX: "start",
                    overlayY: "bottom",
                  },
                ]);
            }
            _calculateOverlayScroll(e, i, r) {
              const s = this._getItemHeight();
              return Math.min(Math.max(0, s * e - i + s / 2), r);
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe(re(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._triggerRect =
                        this.trigger.nativeElement.getBoundingClientRect()),
                      this._changeDetectorRef.markForCheck());
                  });
            }
            open() {
              super._canOpen() &&
                (super.open(),
                (this._triggerRect =
                  this.trigger.nativeElement.getBoundingClientRect()),
                (this._triggerFontSize = parseInt(
                  getComputedStyle(this.trigger.nativeElement).fontSize || "0"
                )),
                this._calculateOverlayPosition(),
                this._ngZone.onStable.pipe(Oe(1)).subscribe(() => {
                  this._triggerFontSize &&
                    this._overlayDir.overlayRef &&
                    this._overlayDir.overlayRef.overlayElement &&
                    (this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`);
                }));
            }
            _scrollOptionIntoView(e) {
              const i = PA(e, this.options, this.optionGroups),
                r = this._getItemHeight();
              this.panel.nativeElement.scrollTop =
                0 === e && 1 === i
                  ? 0
                  : (function (n, t, e, i) {
                      return n < e
                        ? n
                        : n + t > e + 256
                        ? Math.max(0, n - 256 + t)
                        : e;
                    })((e + i) * r, r, this.panel.nativeElement.scrollTop);
            }
            _positioningSettled() {
              this._calculateOverlayOffsetX(),
                (this.panel.nativeElement.scrollTop = this._scrollTop);
            }
            _panelDoneAnimating(e) {
              this.panelOpen
                ? (this._scrollTop = 0)
                : ((this._overlayDir.offsetX = 0),
                  this._changeDetectorRef.markForCheck()),
                super._panelDoneAnimating(e);
            }
            _getChangeEvent(e) {
              return new Sq(this, e);
            }
            _calculateOverlayOffsetX() {
              const e =
                  this._overlayDir.overlayRef.overlayElement.getBoundingClientRect(),
                i = this._viewportRuler.getViewportSize(),
                r = this._isRtl(),
                s = this.multiple ? 56 : 32;
              let o;
              if (this.multiple) o = 40;
              else if (this.disableOptionCentering) o = 16;
              else {
                let c = this._selectionModel.selected[0] || this.options.first;
                o = c && c.group ? 32 : 16;
              }
              r || (o *= -1);
              const a = 0 - (e.left + o - (r ? s : 0)),
                l = e.right + o - i.width + (r ? 0 : s);
              a > 0 ? (o += a + 8) : l > 0 && (o -= l + 8),
                (this._overlayDir.offsetX = Math.round(o)),
                this._overlayDir.overlayRef.updatePosition();
            }
            _calculateOverlayOffsetY(e, i, r) {
              const s = this._getItemHeight(),
                o = (s - this._triggerRect.height) / 2,
                a = Math.floor(256 / s);
              let l;
              return this.disableOptionCentering
                ? 0
                : ((l =
                    0 === this._scrollTop
                      ? e * s
                      : this._scrollTop === r
                      ? (e - (this._getItemCount() - a)) * s +
                        (s - ((this._getItemCount() * s - 256) % s))
                      : i - s / 2),
                  Math.round(-1 * l - o));
            }
            _checkOverlayWithinViewport(e) {
              const i = this._getItemHeight(),
                r = this._viewportRuler.getViewportSize(),
                s = this._triggerRect.top - 8,
                o = r.height - this._triggerRect.bottom - 8,
                a = Math.abs(this._offsetY),
                c =
                  Math.min(this._getItemCount() * i, 256) -
                  a -
                  this._triggerRect.height;
              c > o
                ? this._adjustPanelUp(c, o)
                : a > s
                ? this._adjustPanelDown(a, s, e)
                : (this._transformOrigin = this._getOriginBasedOnOption());
            }
            _adjustPanelUp(e, i) {
              const r = Math.round(e - i);
              (this._scrollTop -= r),
                (this._offsetY -= r),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop <= 0 &&
                  ((this._scrollTop = 0),
                  (this._offsetY = 0),
                  (this._transformOrigin = "50% bottom 0px"));
            }
            _adjustPanelDown(e, i, r) {
              const s = Math.round(e - i);
              if (
                ((this._scrollTop += s),
                (this._offsetY += s),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop >= r)
              )
                return (
                  (this._scrollTop = r),
                  (this._offsetY = 0),
                  void (this._transformOrigin = "50% top 0px")
                );
            }
            _calculateOverlayPosition() {
              const e = this._getItemHeight(),
                i = this._getItemCount(),
                r = Math.min(i * e, 256),
                o = i * e - r;
              let a;
              (a = this.empty
                ? 0
                : Math.max(
                    this.options
                      .toArray()
                      .indexOf(this._selectionModel.selected[0]),
                    0
                  )),
                (a += PA(a, this.options, this.optionGroups));
              const l = r / 2;
              (this._scrollTop = this._calculateOverlayScroll(a, l, o)),
                (this._offsetY = this._calculateOverlayOffsetY(a, l, o)),
                this._checkOverlayWithinViewport(o);
            }
            _getOriginBasedOnOption() {
              const e = this._getItemHeight(),
                i = (e - this._triggerRect.height) / 2;
              return `50% ${Math.abs(this._offsetY) - i + e / 2}px 0px`;
            }
            _getItemHeight() {
              return 3 * this._triggerFontSize;
            }
            _getItemCount() {
              return this.options.length + this.optionGroups.length;
            }
          }
          return (
            (n.ɵfac = (function () {
              let t;
              return function (i) {
                return (t || (t = Te(n)))(i || n);
              };
            })()),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-select"]],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (me(r, xN, 5), me(r, OA, 5), me(r, wy, 5)), 2 & e)
                ) {
                  let s;
                  U((s = z())) && (i.customTrigger = s.first),
                    U((s = z())) && (i.options = s),
                    U((s = z())) && (i.optionGroups = s);
                }
              },
              hostAttrs: [
                "role",
                "combobox",
                "aria-autocomplete",
                "none",
                "aria-haspopup",
                "true",
                1,
                "mat-select",
              ],
              hostVars: 20,
              hostBindings: function (e, i) {
                1 & e &&
                  R("keydown", function (s) {
                    return i._handleKeydown(s);
                  })("focus", function () {
                    return i._onFocus();
                  })("blur", function () {
                    return i._onBlur();
                  }),
                  2 & e &&
                    (X("id", i.id)("tabindex", i.tabIndex)(
                      "aria-controls",
                      i.panelOpen ? i.id + "-panel" : null
                    )("aria-expanded", i.panelOpen)(
                      "aria-label",
                      i.ariaLabel || null
                    )("aria-required", i.required.toString())(
                      "aria-disabled",
                      i.disabled.toString()
                    )("aria-invalid", i.errorState)(
                      "aria-describedby",
                      i._ariaDescribedby || null
                    )("aria-activedescendant", i._getAriaActiveDescendant()),
                    q("mat-select-disabled", i.disabled)(
                      "mat-select-invalid",
                      i.errorState
                    )("mat-select-required", i.required)(
                      "mat-select-empty",
                      i.empty
                    )("mat-select-multiple", i.multiple));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                tabIndex: "tabIndex",
              },
              exportAs: ["matSelect"],
              features: [
                Y([
                  { provide: Zh, useExisting: n },
                  { provide: vy, useExisting: n },
                ]),
                B,
              ],
              ngContentSelectors: vq,
              decls: 9,
              vars: 12,
              consts: [
                ["cdk-overlay-origin", "", 1, "mat-select-trigger", 3, "click"],
                ["origin", "cdkOverlayOrigin", "trigger", ""],
                [1, "mat-select-value", 3, "ngSwitch"],
                [
                  "class",
                  "mat-select-placeholder mat-select-min-line",
                  4,
                  "ngSwitchCase",
                ],
                [
                  "class",
                  "mat-select-value-text",
                  3,
                  "ngSwitch",
                  4,
                  "ngSwitchCase",
                ],
                [1, "mat-select-arrow-wrapper"],
                [1, "mat-select-arrow"],
                [
                  "cdk-connected-overlay",
                  "",
                  "cdkConnectedOverlayLockPosition",
                  "",
                  "cdkConnectedOverlayHasBackdrop",
                  "",
                  "cdkConnectedOverlayBackdropClass",
                  "cdk-overlay-transparent-backdrop",
                  3,
                  "cdkConnectedOverlayPanelClass",
                  "cdkConnectedOverlayScrollStrategy",
                  "cdkConnectedOverlayOrigin",
                  "cdkConnectedOverlayOpen",
                  "cdkConnectedOverlayPositions",
                  "cdkConnectedOverlayMinWidth",
                  "cdkConnectedOverlayOffsetY",
                  "backdropClick",
                  "attach",
                  "detach",
                ],
                [1, "mat-select-placeholder", "mat-select-min-line"],
                [1, "mat-select-value-text", 3, "ngSwitch"],
                ["class", "mat-select-min-line", 4, "ngSwitchDefault"],
                [4, "ngSwitchCase"],
                [1, "mat-select-min-line"],
                [1, "mat-select-panel-wrap"],
                ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"],
                ["panel", ""],
              ],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (Wt(bq),
                    b(0, "div", 0, 1),
                    R("click", function () {
                      return i.toggle();
                    }),
                    b(3, "div", 2),
                    S(4, pq, 2, 1, "span", 3),
                    S(5, _q, 3, 2, "span", 4),
                    v(),
                    b(6, "div", 5),
                    Z(7, "div", 6),
                    v(),
                    v(),
                    S(8, yq, 4, 14, "ng-template", 7),
                    R("backdropClick", function () {
                      return i.close();
                    })("attach", function () {
                      return i._onAttached();
                    })("detach", function () {
                      return i.close();
                    })),
                  2 & e)
                ) {
                  const r = Vt(1);
                  X("aria-owns", i.panelOpen ? i.id + "-panel" : null),
                    w(3),
                    D("ngSwitch", i.empty),
                    X("id", i._valueId),
                    w(1),
                    D("ngSwitchCase", !0),
                    w(1),
                    D("ngSwitchCase", !1),
                    w(3),
                    D("cdkConnectedOverlayPanelClass", i._overlayPanelClass)(
                      "cdkConnectedOverlayScrollStrategy",
                      i._scrollStrategy
                    )("cdkConnectedOverlayOrigin", r)(
                      "cdkConnectedOverlayOpen",
                      i.panelOpen
                    )("cdkConnectedOverlayPositions", i._positions)(
                      "cdkConnectedOverlayMinWidth",
                      null == i._triggerRect ? null : i._triggerRect.width
                    )("cdkConnectedOverlayOffsetY", i._offsetY);
                }
              },
              directives: [Mz, Yl, Hm, QS, YE, Dd],
              styles: [
                '.mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;opacity:0}\n',
              ],
              encapsulation: 2,
              data: { animation: [kN.transformPanelWrap, kN.transformPanel] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        Nq = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({
              providers: [Mq],
              imports: [[Et, lh, FA, ut], ih, ef, FA, ut],
            })),
            n
          );
        })();
      const Rq = {
          tooltipState: ai("state", [
            gt(
              "initial, void, hidden",
              we({ opacity: 0, transform: "scale(0)" })
            ),
            gt("visible", we({ transform: "scale(1)" })),
            St(
              "* => visible",
              Ut(
                "200ms cubic-bezier(0, 0, 0.2, 1)",
                gc([
                  we({ opacity: 0, transform: "scale(0)", offset: 0 }),
                  we({ opacity: 0.5, transform: "scale(0.99)", offset: 0.5 }),
                  we({ opacity: 1, transform: "scale(1)", offset: 1 }),
                ])
              )
            ),
            St(
              "* => hidden",
              Ut("100ms cubic-bezier(0, 0, 0.2, 1)", we({ opacity: 0 }))
            ),
          ]),
        },
        ON = "tooltip-panel",
        PN = uc({ passive: !0 }),
        FN = new P("mat-tooltip-scroll-strategy"),
        Pq = {
          provide: FN,
          deps: [oi],
          useFactory: function (n) {
            return () => n.scrollStrategies.reposition({ scrollThrottle: 20 });
          },
        },
        Fq = new P("mat-tooltip-default-options", {
          providedIn: "root",
          factory: function () {
            return { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 };
          },
        });
      let Vq = (() => {
          class n {
            constructor(e, i, r, s, o, a, l, c, u, d, h, p) {
              (this._overlay = e),
                (this._elementRef = i),
                (this._scrollDispatcher = r),
                (this._viewContainerRef = s),
                (this._ngZone = o),
                (this._platform = a),
                (this._ariaDescriber = l),
                (this._focusMonitor = c),
                (this._dir = d),
                (this._defaultOptions = h),
                (this._position = "below"),
                (this._disabled = !1),
                (this._viewInitialized = !1),
                (this._pointerExitEventsInitialized = !1),
                (this._viewportMargin = 8),
                (this._cssClassPrefix = "mat"),
                (this.showDelay = this._defaultOptions.showDelay),
                (this.hideDelay = this._defaultOptions.hideDelay),
                (this.touchGestures = "auto"),
                (this._message = ""),
                (this._passiveListeners = []),
                (this._destroyed = new O()),
                (this._handleKeydown = (g) => {
                  this._isTooltipVisible() &&
                    27 === g.keyCode &&
                    !Is(g) &&
                    (g.preventDefault(),
                    g.stopPropagation(),
                    this._ngZone.run(() => this.hide(0)));
                }),
                (this._scrollStrategy = u),
                (this._document = p),
                h &&
                  (h.position && (this.position = h.position),
                  h.touchGestures && (this.touchGestures = h.touchGestures)),
                d.change.pipe(re(this._destroyed)).subscribe(() => {
                  this._overlayRef && this._updatePosition(this._overlayRef);
                }),
                o.runOutsideAngular(() => {
                  i.nativeElement.addEventListener(
                    "keydown",
                    this._handleKeydown
                  );
                });
            }
            get position() {
              return this._position;
            }
            set position(e) {
              var i;
              e !== this._position &&
                ((this._position = e),
                this._overlayRef &&
                  (this._updatePosition(this._overlayRef),
                  null === (i = this._tooltipInstance) ||
                    void 0 === i ||
                    i.show(0),
                  this._overlayRef.updatePosition()));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = We(e)),
                this._disabled
                  ? this.hide(0)
                  : this._setupPointerEnterEventsIfNeeded();
            }
            get message() {
              return this._message;
            }
            set message(e) {
              this._ariaDescriber.removeDescription(
                this._elementRef.nativeElement,
                this._message,
                "tooltip"
              ),
                (this._message = null != e ? String(e).trim() : ""),
                !this._message && this._isTooltipVisible()
                  ? this.hide(0)
                  : (this._setupPointerEnterEventsIfNeeded(),
                    this._updateTooltipMessage(),
                    this._ngZone.runOutsideAngular(() => {
                      Promise.resolve().then(() => {
                        this._ariaDescriber.describe(
                          this._elementRef.nativeElement,
                          this.message,
                          "tooltip"
                        );
                      });
                    }));
            }
            get tooltipClass() {
              return this._tooltipClass;
            }
            set tooltipClass(e) {
              (this._tooltipClass = e),
                this._tooltipInstance &&
                  this._setTooltipClass(this._tooltipClass);
            }
            ngAfterViewInit() {
              (this._viewInitialized = !0),
                this._setupPointerEnterEventsIfNeeded(),
                this._focusMonitor
                  .monitor(this._elementRef)
                  .pipe(re(this._destroyed))
                  .subscribe((e) => {
                    e
                      ? "keyboard" === e && this._ngZone.run(() => this.show())
                      : this._ngZone.run(() => this.hide(0));
                  });
            }
            ngOnDestroy() {
              const e = this._elementRef.nativeElement;
              clearTimeout(this._touchstartTimeout),
                this._overlayRef &&
                  (this._overlayRef.dispose(), (this._tooltipInstance = null)),
                e.removeEventListener("keydown", this._handleKeydown),
                this._passiveListeners.forEach(([i, r]) => {
                  e.removeEventListener(i, r, PN);
                }),
                (this._passiveListeners.length = 0),
                this._destroyed.next(),
                this._destroyed.complete(),
                this._ariaDescriber.removeDescription(
                  e,
                  this.message,
                  "tooltip"
                ),
                this._focusMonitor.stopMonitoring(e);
            }
            show(e = this.showDelay) {
              if (
                this.disabled ||
                !this.message ||
                (this._isTooltipVisible() &&
                  !this._tooltipInstance._showTimeoutId &&
                  !this._tooltipInstance._hideTimeoutId)
              )
                return;
              const i = this._createOverlay();
              this._detach(),
                (this._portal =
                  this._portal ||
                  new ya(this._tooltipComponent, this._viewContainerRef)),
                (this._tooltipInstance = i.attach(this._portal).instance),
                this._tooltipInstance
                  .afterHidden()
                  .pipe(re(this._destroyed))
                  .subscribe(() => this._detach()),
                this._setTooltipClass(this._tooltipClass),
                this._updateTooltipMessage(),
                this._tooltipInstance.show(e);
            }
            hide(e = this.hideDelay) {
              this._tooltipInstance && this._tooltipInstance.hide(e);
            }
            toggle() {
              this._isTooltipVisible() ? this.hide() : this.show();
            }
            _isTooltipVisible() {
              return (
                !!this._tooltipInstance && this._tooltipInstance.isVisible()
              );
            }
            _createOverlay() {
              if (this._overlayRef) return this._overlayRef;
              const e = this._scrollDispatcher.getAncestorScrollContainers(
                  this._elementRef
                ),
                i = this._overlay
                  .position()
                  .flexibleConnectedTo(this._elementRef)
                  .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)
                  .withFlexibleDimensions(!1)
                  .withViewportMargin(this._viewportMargin)
                  .withScrollableContainers(e);
              return (
                i.positionChanges.pipe(re(this._destroyed)).subscribe((r) => {
                  this._updateCurrentPositionClass(r.connectionPair),
                    this._tooltipInstance &&
                      r.scrollableViewProperties.isOverlayClipped &&
                      this._tooltipInstance.isVisible() &&
                      this._ngZone.run(() => this.hide(0));
                }),
                (this._overlayRef = this._overlay.create({
                  direction: this._dir,
                  positionStrategy: i,
                  panelClass: `${this._cssClassPrefix}-${ON}`,
                  scrollStrategy: this._scrollStrategy(),
                })),
                this._updatePosition(this._overlayRef),
                this._overlayRef
                  .detachments()
                  .pipe(re(this._destroyed))
                  .subscribe(() => this._detach()),
                this._overlayRef
                  .outsidePointerEvents()
                  .pipe(re(this._destroyed))
                  .subscribe(() => {
                    var r;
                    return null === (r = this._tooltipInstance) || void 0 === r
                      ? void 0
                      : r._handleBodyInteraction();
                  }),
                this._overlayRef
              );
            }
            _detach() {
              this._overlayRef &&
                this._overlayRef.hasAttached() &&
                this._overlayRef.detach(),
                (this._tooltipInstance = null);
            }
            _updatePosition(e) {
              const i = e.getConfig().positionStrategy,
                r = this._getOrigin(),
                s = this._getOverlayPosition();
              i.withPositions([
                this._addOffset(
                  Object.assign(Object.assign({}, r.main), s.main)
                ),
                this._addOffset(
                  Object.assign(Object.assign({}, r.fallback), s.fallback)
                ),
              ]);
            }
            _addOffset(e) {
              return e;
            }
            _getOrigin() {
              const e = !this._dir || "ltr" == this._dir.value,
                i = this.position;
              let r;
              "above" == i || "below" == i
                ? (r = {
                    originX: "center",
                    originY: "above" == i ? "top" : "bottom",
                  })
                : "before" == i || ("left" == i && e) || ("right" == i && !e)
                ? (r = { originX: "start", originY: "center" })
                : ("after" == i ||
                    ("right" == i && e) ||
                    ("left" == i && !e)) &&
                  (r = { originX: "end", originY: "center" });
              const { x: s, y: o } = this._invertPosition(r.originX, r.originY);
              return { main: r, fallback: { originX: s, originY: o } };
            }
            _getOverlayPosition() {
              const e = !this._dir || "ltr" == this._dir.value,
                i = this.position;
              let r;
              "above" == i
                ? (r = { overlayX: "center", overlayY: "bottom" })
                : "below" == i
                ? (r = { overlayX: "center", overlayY: "top" })
                : "before" == i || ("left" == i && e) || ("right" == i && !e)
                ? (r = { overlayX: "end", overlayY: "center" })
                : ("after" == i ||
                    ("right" == i && e) ||
                    ("left" == i && !e)) &&
                  (r = { overlayX: "start", overlayY: "center" });
              const { x: s, y: o } = this._invertPosition(
                r.overlayX,
                r.overlayY
              );
              return { main: r, fallback: { overlayX: s, overlayY: o } };
            }
            _updateTooltipMessage() {
              this._tooltipInstance &&
                ((this._tooltipInstance.message = this.message),
                this._tooltipInstance._markForCheck(),
                this._ngZone.onMicrotaskEmpty
                  .pipe(Oe(1), re(this._destroyed))
                  .subscribe(() => {
                    this._tooltipInstance && this._overlayRef.updatePosition();
                  }));
            }
            _setTooltipClass(e) {
              this._tooltipInstance &&
                ((this._tooltipInstance.tooltipClass = e),
                this._tooltipInstance._markForCheck());
            }
            _invertPosition(e, i) {
              return (
                "above" === this.position || "below" === this.position
                  ? "top" === i
                    ? (i = "bottom")
                    : "bottom" === i && (i = "top")
                  : "end" === e
                  ? (e = "start")
                  : "start" === e && (e = "end"),
                { x: e, y: i }
              );
            }
            _updateCurrentPositionClass(e) {
              const { overlayY: i, originX: r, originY: s } = e;
              let o;
              if (
                ((o =
                  "center" === i
                    ? this._dir && "rtl" === this._dir.value
                      ? "end" === r
                        ? "left"
                        : "right"
                      : "start" === r
                      ? "left"
                      : "right"
                    : "bottom" === i && "top" === s
                    ? "above"
                    : "below"),
                o !== this._currentPosition)
              ) {
                const a = this._overlayRef;
                if (a) {
                  const l = `${this._cssClassPrefix}-${ON}-`;
                  a.removePanelClass(l + this._currentPosition),
                    a.addPanelClass(l + o);
                }
                this._currentPosition = o;
              }
            }
            _setupPointerEnterEventsIfNeeded() {
              this._disabled ||
                !this.message ||
                !this._viewInitialized ||
                this._passiveListeners.length ||
                (this._platformSupportsMouseEvents()
                  ? this._passiveListeners.push([
                      "mouseenter",
                      () => {
                        this._setupPointerExitEventsIfNeeded(), this.show();
                      },
                    ])
                  : "off" !== this.touchGestures &&
                    (this._disableNativeGesturesIfNecessary(),
                    this._passiveListeners.push([
                      "touchstart",
                      () => {
                        this._setupPointerExitEventsIfNeeded(),
                          clearTimeout(this._touchstartTimeout),
                          (this._touchstartTimeout = setTimeout(
                            () => this.show(),
                            500
                          ));
                      },
                    ])),
                this._addListeners(this._passiveListeners));
            }
            _setupPointerExitEventsIfNeeded() {
              if (this._pointerExitEventsInitialized) return;
              this._pointerExitEventsInitialized = !0;
              const e = [];
              if (this._platformSupportsMouseEvents())
                e.push(
                  ["mouseleave", () => this.hide()],
                  ["wheel", (i) => this._wheelListener(i)]
                );
              else if ("off" !== this.touchGestures) {
                this._disableNativeGesturesIfNecessary();
                const i = () => {
                  clearTimeout(this._touchstartTimeout),
                    this.hide(this._defaultOptions.touchendHideDelay);
                };
                e.push(["touchend", i], ["touchcancel", i]);
              }
              this._addListeners(e), this._passiveListeners.push(...e);
            }
            _addListeners(e) {
              e.forEach(([i, r]) => {
                this._elementRef.nativeElement.addEventListener(i, r, PN);
              });
            }
            _platformSupportsMouseEvents() {
              return !this._platform.IOS && !this._platform.ANDROID;
            }
            _wheelListener(e) {
              if (this._isTooltipVisible()) {
                const i = this._document.elementFromPoint(e.clientX, e.clientY),
                  r = this._elementRef.nativeElement;
                i !== r && !r.contains(i) && this.hide();
              }
            }
            _disableNativeGesturesIfNecessary() {
              const e = this.touchGestures;
              if ("off" !== e) {
                const i = this._elementRef.nativeElement,
                  r = i.style;
                ("on" === e ||
                  ("INPUT" !== i.nodeName && "TEXTAREA" !== i.nodeName)) &&
                  (r.userSelect =
                    r.msUserSelect =
                    r.webkitUserSelect =
                    r.MozUserSelect =
                      "none"),
                  ("on" === e || !i.draggable) && (r.webkitUserDrag = "none"),
                  (r.touchAction = "none"),
                  (r.webkitTapHighlightColor = "transparent");
              }
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                f(oi),
                f(L),
                f(_a),
                f(Ze),
                f(H),
                f(je),
                f(iT),
                f(Os),
                f(void 0),
                f(si),
                f(void 0),
                f(j)
              );
            }),
            (n.ɵdir = M({
              type: n,
              inputs: {
                showDelay: ["matTooltipShowDelay", "showDelay"],
                hideDelay: ["matTooltipHideDelay", "hideDelay"],
                touchGestures: ["matTooltipTouchGestures", "touchGestures"],
                position: ["matTooltipPosition", "position"],
                disabled: ["matTooltipDisabled", "disabled"],
                message: ["matTooltip", "message"],
                tooltipClass: ["matTooltipClass", "tooltipClass"],
              },
            })),
            n
          );
        })(),
        Bq = (() => {
          class n extends Vq {
            constructor(e, i, r, s, o, a, l, c, u, d, h, p) {
              super(e, i, r, s, o, a, l, c, u, d, h, p),
                (this._tooltipComponent = $q);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                f(oi),
                f(L),
                f(_a),
                f(Ze),
                f(H),
                f(je),
                f(iT),
                f(Os),
                f(FN),
                f(si, 8),
                f(Fq, 8),
                f(j)
              );
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [["", "matTooltip", ""]],
              hostAttrs: [1, "mat-tooltip-trigger"],
              exportAs: ["matTooltip"],
              features: [B],
            })),
            n
          );
        })(),
        Hq = (() => {
          class n {
            constructor(e) {
              (this._changeDetectorRef = e),
                (this._visibility = "initial"),
                (this._closeOnInteraction = !1),
                (this._onHide = new O());
            }
            show(e) {
              clearTimeout(this._hideTimeoutId),
                (this._closeOnInteraction = !0),
                (this._showTimeoutId = setTimeout(() => {
                  (this._visibility = "visible"),
                    (this._showTimeoutId = void 0),
                    this._onShow(),
                    this._markForCheck();
                }, e));
            }
            hide(e) {
              clearTimeout(this._showTimeoutId),
                (this._hideTimeoutId = setTimeout(() => {
                  (this._visibility = "hidden"),
                    (this._hideTimeoutId = void 0),
                    this._markForCheck();
                }, e));
            }
            afterHidden() {
              return this._onHide;
            }
            isVisible() {
              return "visible" === this._visibility;
            }
            ngOnDestroy() {
              clearTimeout(this._showTimeoutId),
                clearTimeout(this._hideTimeoutId),
                this._onHide.complete();
            }
            _animationStart() {
              this._closeOnInteraction = !1;
            }
            _animationDone(e) {
              const i = e.toState;
              "hidden" === i && !this.isVisible() && this._onHide.next(),
                ("visible" === i || "hidden" === i) &&
                  (this._closeOnInteraction = !0);
            }
            _handleBodyInteraction() {
              this._closeOnInteraction && this.hide(0);
            }
            _markForCheck() {
              this._changeDetectorRef.markForCheck();
            }
            _onShow() {}
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Be));
            }),
            (n.ɵdir = M({ type: n })),
            n
          );
        })(),
        $q = (() => {
          class n extends Hq {
            constructor(e, i) {
              super(e),
                (this._breakpointObserver = i),
                (this._isHandset = this._breakpointObserver.observe(
                  "(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)"
                ));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Be), f(eb));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-tooltip-component"]],
              hostAttrs: ["aria-hidden", "true"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && Fn("zoom", "visible" === i._visibility ? 1 : null);
              },
              features: [B],
              decls: 3,
              vars: 7,
              consts: [[1, "mat-tooltip", 3, "ngClass"]],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (b(0, "div", 0),
                    R("@state.start", function () {
                      return i._animationStart();
                    })("@state.done", function (s) {
                      return i._animationDone(s);
                    }),
                    (function (n, t) {
                      const e = xe();
                      let i;
                      const r = n + 20;
                      e.firstCreatePass
                        ? ((i = (function (n, t) {
                            if (t)
                              for (let e = t.length - 1; e >= 0; e--) {
                                const i = t[e];
                                if (n === i.name) return i;
                              }
                            throw new is(
                              "302",
                              `The pipe '${n}' could not be found!`
                            );
                          })(t, e.pipeRegistry)),
                          (e.data[r] = i),
                          i.onDestroy &&
                            (e.destroyHooks || (e.destroyHooks = [])).push(
                              r,
                              i.onDestroy
                            ))
                        : (i = e.data[r]);
                      const s = i.factory || (i.factory = ls(i.type)),
                        o = kr(f);
                      try {
                        const a = lu(!1),
                          l = s();
                        lu(a),
                          (function (n, t, e, i) {
                            e >= n.data.length &&
                              ((n.data[e] = null), (n.blueprint[e] = null)),
                              (t[e] = i);
                          })(e, k(), r, l);
                      } finally {
                        kr(o);
                      }
                    })(1, "async"),
                    I(2),
                    v()),
                  2 & e)
                ) {
                  let r;
                  q(
                    "mat-tooltip-handset",
                    null == (r = Wg(1, 5, i._isHandset)) ? null : r.matches
                  ),
                    D("ngClass", i.tooltipClass)("@state", i._visibility),
                    w(2),
                    Ke(i.message);
                }
              },
              directives: [Dd],
              pipes: [JE],
              styles: [
                ".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\n",
              ],
              encapsulation: 2,
              data: { animation: [Rq.tooltipState] },
              changeDetection: 0,
            })),
            n
          );
        })(),
        jq = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({
              providers: [Pq],
              imports: [[n6, Et, lh, ut], ut, ih],
            })),
            n
          );
        })();
      function Uq(n, t) {
        if ((1 & n && (b(0, "mat-option", 19), I(1), v()), 2 & n)) {
          const e = t.$implicit;
          D("value", e), w(1), ye(" ", e, " ");
        }
      }
      function zq(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "mat-form-field", 16),
            b(1, "mat-select", 17),
            R("selectionChange", function (r) {
              return ce(e), T(2)._changePageSize(r.value);
            }),
            S(2, Uq, 2, 2, "mat-option", 18),
            v(),
            v();
        }
        if (2 & n) {
          const e = T(2);
          D("appearance", e._formFieldAppearance)("color", e.color),
            w(1),
            D("value", e.pageSize)("disabled", e.disabled)(
              "aria-label",
              e._intl.itemsPerPageLabel
            ),
            w(1),
            D("ngForOf", e._displayedPageSizeOptions);
        }
      }
      function Gq(n, t) {
        if ((1 & n && (b(0, "div", 20), I(1), v()), 2 & n)) {
          const e = T(2);
          w(1), Ke(e.pageSize);
        }
      }
      function Wq(n, t) {
        if (
          (1 & n &&
            (b(0, "div", 12),
            b(1, "div", 13),
            I(2),
            v(),
            S(3, zq, 3, 6, "mat-form-field", 14),
            S(4, Gq, 2, 1, "div", 15),
            v()),
          2 & n)
        ) {
          const e = T();
          w(2),
            ye(" ", e._intl.itemsPerPageLabel, " "),
            w(1),
            D("ngIf", e._displayedPageSizeOptions.length > 1),
            w(1),
            D("ngIf", e._displayedPageSizeOptions.length <= 1);
        }
      }
      function qq(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "button", 21),
            R("click", function () {
              return ce(e), T().firstPage();
            }),
            oo(),
            b(1, "svg", 7),
            Z(2, "path", 22),
            v(),
            v();
        }
        if (2 & n) {
          const e = T();
          D("matTooltip", e._intl.firstPageLabel)(
            "matTooltipDisabled",
            e._previousButtonsDisabled()
          )("matTooltipPosition", "above")(
            "disabled",
            e._previousButtonsDisabled()
          ),
            X("aria-label", e._intl.firstPageLabel);
        }
      }
      function Yq(n, t) {
        if (1 & n) {
          const e = Ne();
          oo(),
            np(),
            b(0, "button", 23),
            R("click", function () {
              return ce(e), T().lastPage();
            }),
            oo(),
            b(1, "svg", 7),
            Z(2, "path", 24),
            v(),
            v();
        }
        if (2 & n) {
          const e = T();
          D("matTooltip", e._intl.lastPageLabel)(
            "matTooltipDisabled",
            e._nextButtonsDisabled()
          )("matTooltipPosition", "above")(
            "disabled",
            e._nextButtonsDisabled()
          ),
            X("aria-label", e._intl.lastPageLabel);
        }
      }
      let Nc = (() => {
        class n {
          constructor() {
            (this.changes = new O()),
              (this.itemsPerPageLabel = "Items per page:"),
              (this.nextPageLabel = "Next page"),
              (this.previousPageLabel = "Previous page"),
              (this.firstPageLabel = "First page"),
              (this.lastPageLabel = "Last page"),
              (this.getRangeLabel = (e, i, r) => {
                if (0 == r || 0 == i) return `0 of ${r}`;
                const s = e * i;
                return `${s + 1} \u2013 ${
                  s < (r = Math.max(r, 0)) ? Math.min(s + i, r) : s + i
                } of ${r}`;
              });
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n();
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      const Jq = {
          provide: Nc,
          deps: [[new nn(), new Hi(), Nc]],
          useFactory: function (n) {
            return n || new Nc();
          },
        },
        Xq = new P("MAT_PAGINATOR_DEFAULT_OPTIONS"),
        Zq = Ma(TA(class {}));
      let eY = (() => {
          class n extends Zq {
            constructor(e, i, r) {
              if (
                (super(),
                (this._intl = e),
                (this._changeDetectorRef = i),
                (this._pageIndex = 0),
                (this._length = 0),
                (this._pageSizeOptions = []),
                (this._hidePageSize = !1),
                (this._showFirstLastButtons = !1),
                (this.page = new F()),
                (this._intlChanges = e.changes.subscribe(() =>
                  this._changeDetectorRef.markForCheck()
                )),
                r)
              ) {
                const {
                  pageSize: s,
                  pageSizeOptions: o,
                  hidePageSize: a,
                  showFirstLastButtons: l,
                } = r;
                null != s && (this._pageSize = s),
                  null != o && (this._pageSizeOptions = o),
                  null != a && (this._hidePageSize = a),
                  null != l && (this._showFirstLastButtons = l);
              }
            }
            get pageIndex() {
              return this._pageIndex;
            }
            set pageIndex(e) {
              (this._pageIndex = Math.max(Hn(e), 0)),
                this._changeDetectorRef.markForCheck();
            }
            get length() {
              return this._length;
            }
            set length(e) {
              (this._length = Hn(e)), this._changeDetectorRef.markForCheck();
            }
            get pageSize() {
              return this._pageSize;
            }
            set pageSize(e) {
              (this._pageSize = Math.max(Hn(e), 0)),
                this._updateDisplayedPageSizeOptions();
            }
            get pageSizeOptions() {
              return this._pageSizeOptions;
            }
            set pageSizeOptions(e) {
              (this._pageSizeOptions = (e || []).map((i) => Hn(i))),
                this._updateDisplayedPageSizeOptions();
            }
            get hidePageSize() {
              return this._hidePageSize;
            }
            set hidePageSize(e) {
              this._hidePageSize = We(e);
            }
            get showFirstLastButtons() {
              return this._showFirstLastButtons;
            }
            set showFirstLastButtons(e) {
              this._showFirstLastButtons = We(e);
            }
            ngOnInit() {
              (this._initialized = !0),
                this._updateDisplayedPageSizeOptions(),
                this._markInitialized();
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe();
            }
            nextPage() {
              if (!this.hasNextPage()) return;
              const e = this.pageIndex;
              this.pageIndex++, this._emitPageEvent(e);
            }
            previousPage() {
              if (!this.hasPreviousPage()) return;
              const e = this.pageIndex;
              this.pageIndex--, this._emitPageEvent(e);
            }
            firstPage() {
              if (!this.hasPreviousPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = 0), this._emitPageEvent(e);
            }
            lastPage() {
              if (!this.hasNextPage()) return;
              const e = this.pageIndex;
              (this.pageIndex = this.getNumberOfPages() - 1),
                this._emitPageEvent(e);
            }
            hasPreviousPage() {
              return this.pageIndex >= 1 && 0 != this.pageSize;
            }
            hasNextPage() {
              const e = this.getNumberOfPages() - 1;
              return this.pageIndex < e && 0 != this.pageSize;
            }
            getNumberOfPages() {
              return this.pageSize ? Math.ceil(this.length / this.pageSize) : 0;
            }
            _changePageSize(e) {
              const r = this.pageIndex;
              (this.pageIndex =
                Math.floor((this.pageIndex * this.pageSize) / e) || 0),
                (this.pageSize = e),
                this._emitPageEvent(r);
            }
            _nextButtonsDisabled() {
              return this.disabled || !this.hasNextPage();
            }
            _previousButtonsDisabled() {
              return this.disabled || !this.hasPreviousPage();
            }
            _updateDisplayedPageSizeOptions() {
              !this._initialized ||
                (this.pageSize ||
                  (this._pageSize =
                    0 != this.pageSizeOptions.length
                      ? this.pageSizeOptions[0]
                      : 50),
                (this._displayedPageSizeOptions = this.pageSizeOptions.slice()),
                -1 === this._displayedPageSizeOptions.indexOf(this.pageSize) &&
                  this._displayedPageSizeOptions.push(this.pageSize),
                this._displayedPageSizeOptions.sort((e, i) => e - i),
                this._changeDetectorRef.markForCheck());
            }
            _emitPageEvent(e) {
              this.page.emit({
                previousPageIndex: e,
                pageIndex: this.pageIndex,
                pageSize: this.pageSize,
                length: this.length,
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Nc), f(Be), f(void 0));
            }),
            (n.ɵdir = M({
              type: n,
              inputs: {
                pageIndex: "pageIndex",
                length: "length",
                pageSize: "pageSize",
                pageSizeOptions: "pageSizeOptions",
                hidePageSize: "hidePageSize",
                showFirstLastButtons: "showFirstLastButtons",
                color: "color",
              },
              outputs: { page: "page" },
              features: [B],
            })),
            n
          );
        })(),
        LN = (() => {
          class n extends eY {
            constructor(e, i, r) {
              super(e, i, r),
                r &&
                  null != r.formFieldAppearance &&
                  (this._formFieldAppearance = r.formFieldAppearance);
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Nc), f(Be), f(Xq, 8));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["mat-paginator"]],
              hostAttrs: ["role", "group", 1, "mat-paginator"],
              inputs: { disabled: "disabled" },
              exportAs: ["matPaginator"],
              features: [B],
              decls: 14,
              vars: 14,
              consts: [
                [1, "mat-paginator-outer-container"],
                [1, "mat-paginator-container"],
                ["class", "mat-paginator-page-size", 4, "ngIf"],
                [1, "mat-paginator-range-actions"],
                [1, "mat-paginator-range-label"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  "class",
                  "mat-paginator-navigation-first",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-paginator-navigation-previous",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "viewBox",
                  "0 0 24 24",
                  "focusable",
                  "false",
                  1,
                  "mat-paginator-icon",
                ],
                ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-paginator-navigation-next",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  "class",
                  "mat-paginator-navigation-last",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [1, "mat-paginator-page-size"],
                [1, "mat-paginator-page-size-label"],
                [
                  "class",
                  "mat-paginator-page-size-select",
                  3,
                  "appearance",
                  "color",
                  4,
                  "ngIf",
                ],
                ["class", "mat-paginator-page-size-value", 4, "ngIf"],
                [1, "mat-paginator-page-size-select", 3, "appearance", "color"],
                [3, "value", "disabled", "aria-label", "selectionChange"],
                [3, "value", 4, "ngFor", "ngForOf"],
                [3, "value"],
                [1, "mat-paginator-page-size-value"],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-paginator-navigation-first",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "d",
                  "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z",
                ],
                [
                  "mat-icon-button",
                  "",
                  "type",
                  "button",
                  1,
                  "mat-paginator-navigation-last",
                  3,
                  "matTooltip",
                  "matTooltipDisabled",
                  "matTooltipPosition",
                  "disabled",
                  "click",
                ],
                [
                  "d",
                  "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "div", 0),
                  b(1, "div", 1),
                  S(2, Wq, 5, 3, "div", 2),
                  b(3, "div", 3),
                  b(4, "div", 4),
                  I(5),
                  v(),
                  S(6, qq, 3, 5, "button", 5),
                  b(7, "button", 6),
                  R("click", function () {
                    return i.previousPage();
                  }),
                  oo(),
                  b(8, "svg", 7),
                  Z(9, "path", 8),
                  v(),
                  v(),
                  np(),
                  b(10, "button", 9),
                  R("click", function () {
                    return i.nextPage();
                  }),
                  oo(),
                  b(11, "svg", 7),
                  Z(12, "path", 10),
                  v(),
                  v(),
                  S(13, Yq, 3, 5, "button", 11),
                  v(),
                  v(),
                  v()),
                  2 & e &&
                    (w(2),
                    D("ngIf", !i.hidePageSize),
                    w(3),
                    ye(
                      " ",
                      i._intl.getRangeLabel(i.pageIndex, i.pageSize, i.length),
                      " "
                    ),
                    w(1),
                    D("ngIf", i.showFirstLastButtons),
                    w(1),
                    D("matTooltip", i._intl.previousPageLabel)(
                      "matTooltipDisabled",
                      i._previousButtonsDisabled()
                    )("matTooltipPosition", "above")(
                      "disabled",
                      i._previousButtonsDisabled()
                    ),
                    X("aria-label", i._intl.previousPageLabel),
                    w(3),
                    D("matTooltip", i._intl.nextPageLabel)(
                      "matTooltipDisabled",
                      i._nextButtonsDisabled()
                    )("matTooltipPosition", "above")(
                      "disabled",
                      i._nextButtonsDisabled()
                    ),
                    X("aria-label", i._intl.nextPageLabel),
                    w(3),
                    D("ngIf", i.showFirstLastButtons));
              },
              directives: [bt, Zy, Bq, Tk, kq, En, OA],
              styles: [
                ".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            n
          );
        })(),
        tY = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ providers: [Jq], imports: [[Et, hk, Nq, jq, ut]] })),
            n
          );
        })();
      const sY = new P("MAT_SORT_DEFAULT_OPTIONS"),
        oY = TA(Ma(class {}));
      let VN = (() => {
        class n extends oY {
          constructor(e) {
            super(),
              (this._defaultOptions = e),
              (this.sortables = new Map()),
              (this._stateChanges = new O()),
              (this.start = "asc"),
              (this._direction = ""),
              (this.sortChange = new F());
          }
          get direction() {
            return this._direction;
          }
          set direction(e) {
            this._direction = e;
          }
          get disableClear() {
            return this._disableClear;
          }
          set disableClear(e) {
            this._disableClear = We(e);
          }
          register(e) {
            this.sortables.set(e.id, e);
          }
          deregister(e) {
            this.sortables.delete(e.id);
          }
          sort(e) {
            this.active != e.id
              ? ((this.active = e.id),
                (this.direction = e.start ? e.start : this.start))
              : (this.direction = this.getNextSortDirection(e)),
              this.sortChange.emit({
                active: this.active,
                direction: this.direction,
              });
          }
          getNextSortDirection(e) {
            var i, r, s;
            if (!e) return "";
            const o =
              null !==
                (r =
                  null !== (i = null == e ? void 0 : e.disableClear) &&
                  void 0 !== i
                    ? i
                    : this.disableClear) && void 0 !== r
                ? r
                : !!(null === (s = this._defaultOptions) || void 0 === s
                    ? void 0
                    : s.disableClear);
            let a = (function (n, t) {
                let e = ["asc", "desc"];
                return "desc" == n && e.reverse(), t || e.push(""), e;
              })(e.start || this.start, o),
              l = a.indexOf(this.direction) + 1;
            return l >= a.length && (l = 0), a[l];
          }
          ngOnInit() {
            this._markInitialized();
          }
          ngOnChanges() {
            this._stateChanges.next();
          }
          ngOnDestroy() {
            this._stateChanges.complete();
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(f(sY, 8));
          }),
          (n.ɵdir = M({
            type: n,
            selectors: [["", "matSort", ""]],
            hostAttrs: [1, "mat-sort"],
            inputs: {
              disabled: ["matSortDisabled", "disabled"],
              start: ["matSortStart", "start"],
              direction: ["matSortDirection", "direction"],
              disableClear: ["matSortDisableClear", "disableClear"],
              active: ["matSortActive", "active"],
            },
            outputs: { sortChange: "matSortChange" },
            exportAs: ["matSort"],
            features: [B, Me],
          })),
          n
        );
      })();
      function dY(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "div", 4),
            b(1, "ul"),
            b(2, "li"),
            I(3),
            v(),
            b(4, "li"),
            I(5),
            v(),
            b(6, "li"),
            I(7),
            v(),
            b(8, "li"),
            I(9),
            v(),
            b(10, "li"),
            I(11),
            v(),
            b(12, "li"),
            I(13),
            v(),
            b(14, "li"),
            I(15),
            v(),
            b(16, "li"),
            I(17),
            v(),
            b(18, "li"),
            b(19, "button", 5),
            R("click", function () {
              ce(e);
              const r = T();
              return r.subscribe(r.player.id, r.player.name);
            }),
            I(20, "Notify Me"),
            v(),
            b(21, "p", 6),
            I(22, "*Get notification when he play again"),
            v(),
            v(),
            v(),
            v();
        }
        if (2 & n) {
          const e = T();
          w(3),
            ye(" Id: ", e.player.id, " "),
            w(2),
            ye("Name:", e.player.name, ""),
            w(2),
            ye("Rank: #", e.player.rank, ""),
            w(2),
            ye("Score : ", e.player.scores, ""),
            w(2),
            ye("Kills: ", e.player.kills, ""),
            w(2),
            ye("Death: ", e.player.deaths, ""),
            w(2),
            ye("K/D: ", e.getKD(e.player.kills, e.player.deaths), ""),
            w(2),
            ye("Last Seen: ", e.parseTime(e.player.last_seen), "");
        }
      }
      const hY = function () {
        return {};
      };
      let fY = (() => {
        class n {
          constructor(e, i) {
            (this.subService = e),
              (this._snackBar = i),
              (this.closeBtnEvent = new F());
          }
          ngOnInit() {}
          onClose() {
            this.closeBtnEvent.emit("true");
          }
          parseTime(e) {
            return new Date(e);
          }
          getKD(e, i) {
            return (e / i).toFixed(3);
          }
          subscribe(e, i) {
            this.subService.subscribeToNotifications(e, i),
              this.openSnackBar(
                `Subscribed to ${i} , conformation notification will be sent shortely.`,
                "ok"
              );
          }
          openSnackBar(e, i) {
            this._snackBar.open(e, i);
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)(f(Qy), f(vk));
          }),
          (n.ɵcmp = ne({
            type: n,
            selectors: [["app-playerprofile"]],
            inputs: { player: "player" },
            outputs: { closeBtnEvent: "closeBtnEvent" },
            decls: 6,
            vars: 3,
            consts: [
              [1, "player"],
              [1, "close-btn", 3, "click"],
              [1, "heading"],
              ["class", "players", 4, "ngIf"],
              [1, "players"],
              [1, "btn", "btn-primary", "btn-block", "notify-btn", 3, "click"],
              [2, "color", "#f03737"],
            ],
            template: function (e, i) {
              1 & e &&
                (b(0, "div", 0),
                b(1, "a", 1),
                R("click", function () {
                  return i.onClose();
                }),
                I(2, "X"),
                v(),
                b(3, "div", 2),
                I(4),
                v(),
                S(5, dY, 23, 8, "div", 3),
                v()),
                2 & e &&
                  (w(4),
                  ye(" ", i.player.name, " "),
                  w(1),
                  D("ngIf", i.player != zg(2, hY)));
            },
            directives: [bt],
            styles: [
              ".player[_ngcontent-%COMP%]{width:100%;background-color:#272b4a}.player[_ngcontent-%COMP%]   .heading[_ngcontent-%COMP%]{width:100;text-align:center;padding-top:2em;font-size:1.7em}.player[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding-left:15%;padding-top:4em;padding-right:15%}.player[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding-bottom:1.5rem}.notify-btn[_ngcontent-%COMP%]{margin-right:15%}.close-btn[_ngcontent-%COMP%]{display:none;cursor:pointer}@media only screen and (max-width: 768px){.close-btn[_ngcontent-%COMP%]{display:block;float:right;padding:1.2em 1.2em 0 0}}",
            ],
          })),
          n
        );
      })();
      const BN = uc({ passive: !0 });
      let HN = (() => {
          class n {
            constructor(e, i) {
              (this._platform = e),
                (this._ngZone = i),
                (this._monitoredElements = new Map());
            }
            monitor(e) {
              if (!this._platform.isBrowser) return jr;
              const i = vr(e),
                r = this._monitoredElements.get(i);
              if (r) return r.subject;
              const s = new O(),
                o = "cdk-text-field-autofilled",
                a = (l) => {
                  "cdk-text-field-autofill-start" !== l.animationName ||
                  i.classList.contains(o)
                    ? "cdk-text-field-autofill-end" === l.animationName &&
                      i.classList.contains(o) &&
                      (i.classList.remove(o),
                      this._ngZone.run(() =>
                        s.next({ target: l.target, isAutofilled: !1 })
                      ))
                    : (i.classList.add(o),
                      this._ngZone.run(() =>
                        s.next({ target: l.target, isAutofilled: !0 })
                      ));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  i.addEventListener("animationstart", a, BN),
                    i.classList.add("cdk-text-field-autofill-monitored");
                }),
                this._monitoredElements.set(i, {
                  subject: s,
                  unlisten: () => {
                    i.removeEventListener("animationstart", a, BN);
                  },
                }),
                s
              );
            }
            stopMonitoring(e) {
              const i = vr(e),
                r = this._monitoredElements.get(i);
              r &&
                (r.unlisten(),
                r.subject.complete(),
                i.classList.remove("cdk-text-field-autofill-monitored"),
                i.classList.remove("cdk-text-field-autofilled"),
                this._monitoredElements.delete(i));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((e, i) => this.stopMonitoring(i));
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(je), m(H));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(je), m(H));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        $N = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[lc]] })),
            n
          );
        })();
      const gY = new P("MAT_INPUT_VALUE_ACCESSOR"),
        mY = [
          "button",
          "checkbox",
          "file",
          "hidden",
          "image",
          "radio",
          "range",
          "reset",
          "submit",
        ];
      let _Y = 0;
      const yY = SA(
        class {
          constructor(n, t, e, i) {
            (this._defaultErrorStateMatcher = n),
              (this._parentForm = t),
              (this._parentFormGroup = e),
              (this.ngControl = i);
          }
        }
      );
      let bY = (() => {
          class n extends yY {
            constructor(e, i, r, s, o, a, l, c, u, d) {
              super(a, s, o, r),
                (this._elementRef = e),
                (this._platform = i),
                (this._autofillMonitor = c),
                (this._formField = d),
                (this._uid = "mat-input-" + _Y++),
                (this.focused = !1),
                (this.stateChanges = new O()),
                (this.controlType = "mat-input"),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._required = !1),
                (this._type = "text"),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  "date",
                  "datetime",
                  "datetime-local",
                  "month",
                  "time",
                  "week",
                ].filter((g) => AS().has(g)));
              const h = this._elementRef.nativeElement,
                p = h.nodeName.toLowerCase();
              (this._inputValueAccessor = l || h),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                i.IOS &&
                  u.runOutsideAngular(() => {
                    e.nativeElement.addEventListener("keyup", (g) => {
                      const _ = g.target;
                      !_.value &&
                        0 === _.selectionStart &&
                        0 === _.selectionEnd &&
                        (_.setSelectionRange(1, 1), _.setSelectionRange(0, 0));
                    });
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = "select" === p),
                (this._isTextarea = "textarea" === p),
                (this._isInFormField = !!d),
                this._isNativeSelect &&
                  (this.controlType = h.multiple
                    ? "mat-native-select-multiple"
                    : "mat-native-select");
            }
            get disabled() {
              return this.ngControl && null !== this.ngControl.disabled
                ? this.ngControl.disabled
                : this._disabled;
            }
            set disabled(e) {
              (this._disabled = We(e)),
                this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(e) {
              this._id = e || this._uid;
            }
            get required() {
              return this._required;
            }
            set required(e) {
              this._required = We(e);
            }
            get type() {
              return this._type;
            }
            set type(e) {
              (this._type = e || "text"),
                this._validateType(),
                !this._isTextarea &&
                  AS().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(e) {
              e !== this.value &&
                ((this._inputValueAccessor.value = e),
                this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(e) {
              this._readonly = We(e);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor
                  .monitor(this._elementRef.nativeElement)
                  .subscribe((e) => {
                    (this.autofilled = e.isAutofilled),
                      this.stateChanges.next();
                  });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser &&
                  this._autofillMonitor.stopMonitoring(
                    this._elementRef.nativeElement
                  );
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState(),
                this._dirtyCheckNativeValue(),
                this._dirtyCheckPlaceholder();
            }
            focus(e) {
              this._elementRef.nativeElement.focus(e);
            }
            _focusChanged(e) {
              e !== this.focused &&
                ((this.focused = e), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckPlaceholder() {
              var e, i;
              const r = (
                null ===
                  (i =
                    null === (e = this._formField) || void 0 === e
                      ? void 0
                      : e._hideControlPlaceholder) || void 0 === i
                  ? void 0
                  : i.call(e)
              )
                ? null
                : this.placeholder;
              if (r !== this._previousPlaceholder) {
                const s = this._elementRef.nativeElement;
                (this._previousPlaceholder = r),
                  r
                    ? s.setAttribute("placeholder", r)
                    : s.removeAttribute("placeholder");
              }
            }
            _dirtyCheckNativeValue() {
              const e = this._elementRef.nativeElement.value;
              this._previousNativeValue !== e &&
                ((this._previousNativeValue = e), this.stateChanges.next());
            }
            _validateType() {
              mY.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let e = this._elementRef.nativeElement.validity;
              return e && e.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const e = this._elementRef.nativeElement,
                  i = e.options[0];
                return (
                  this.focused ||
                  e.multiple ||
                  !this.empty ||
                  !!(e.selectedIndex > -1 && i && i.label)
                );
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(e) {
              e.length
                ? this._elementRef.nativeElement.setAttribute(
                    "aria-describedby",
                    e.join(" ")
                  )
                : this._elementRef.nativeElement.removeAttribute(
                    "aria-describedby"
                  );
            }
            onContainerClick() {
              this.focused || this.focus();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(
                f(L),
                f(je),
                f(er, 10),
                f(Tc, 8),
                f(Ac, 8),
                f(yy),
                f(gY, 10),
                f(HN),
                f(H),
                f(ib, 8)
              );
            }),
            (n.ɵdir = M({
              type: n,
              selectors: [
                ["input", "matInput", ""],
                ["textarea", "matInput", ""],
                ["select", "matNativeControl", ""],
                ["input", "matNativeControl", ""],
                ["textarea", "matNativeControl", ""],
              ],
              hostAttrs: [
                1,
                "mat-input-element",
                "mat-form-field-autofill-control",
              ],
              hostVars: 9,
              hostBindings: function (e, i) {
                1 & e &&
                  R("focus", function () {
                    return i._focusChanged(!0);
                  })("blur", function () {
                    return i._focusChanged(!1);
                  })("input", function () {
                    return i._onInput();
                  }),
                  2 & e &&
                    (Bt("disabled", i.disabled)("required", i.required),
                    X("id", i.id)("data-placeholder", i.placeholder)(
                      "readonly",
                      (i.readonly && !i._isNativeSelect) || null
                    )(
                      "aria-invalid",
                      i.empty && i.required ? null : i.errorState
                    )("aria-required", i.required),
                    q("mat-input-server", i._isServer));
              },
              inputs: {
                id: "id",
                disabled: "disabled",
                required: "required",
                type: "type",
                value: "value",
                readonly: "readonly",
                placeholder: "placeholder",
                errorStateMatcher: "errorStateMatcher",
                userAriaDescribedBy: [
                  "aria-describedby",
                  "userAriaDescribedBy",
                ],
              },
              exportAs: ["matInput"],
              features: [Y([{ provide: Zh, useExisting: n }]), B, Me],
            })),
            n
          );
        })(),
        vY = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ providers: [yy], imports: [[$N, ef, ut], $N, ef] })),
            n
          );
        })();
      function wY(n, t) {
        1 & n && (b(0, "th", 20), I(1, "Rank "), v());
      }
      function CY(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "td", 21),
            R("click", function () {
              const s = ce(e).$implicit;
              return T().showProfile(s);
            }),
            I(1),
            v();
        }
        if (2 & n) {
          const e = t.$implicit;
          w(1), ye(" ", e.rank, " ");
        }
      }
      function DY(n, t) {
        1 & n && (b(0, "th", 20), I(1, " Score "), v());
      }
      function EY(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "td", 21),
            R("click", function () {
              const s = ce(e).$implicit;
              return T().showProfile(s);
            }),
            I(1),
            v();
        }
        if (2 & n) {
          const e = t.$implicit;
          w(1), ye(" ", e.scores, " ");
        }
      }
      function MY(n, t) {
        1 & n && (b(0, "th", 20), I(1, " Name "), v());
      }
      function SY(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "td", 21),
            R("click", function () {
              const s = ce(e).$implicit;
              return T().showProfile(s);
            }),
            I(1),
            v();
        }
        if (2 & n) {
          const e = t.$implicit;
          w(1), ye(" ", e.name, " ");
        }
      }
      function TY(n, t) {
        1 & n && (b(0, "th", 20), I(1, " Kills "), v());
      }
      function AY(n, t) {
        if (1 & n) {
          const e = Ne();
          b(0, "td", 21),
            R("click", function () {
              const s = ce(e).$implicit;
              return T().showProfile(s);
            }),
            I(1),
            v();
        }
        if (2 & n) {
          const e = t.$implicit;
          w(1), ye(" ", e.kills, " ");
        }
      }
      function kY(n, t) {
        1 & n && Z(0, "tr", 22);
      }
      function NY(n, t) {
        1 & n && Z(0, "tr", 23);
      }
      function RY(n, t) {
        if (
          (1 & n && (b(0, "tr", 24), b(1, "td", 25), I(2), v(), v()), 2 & n)
        ) {
          T();
          const e = Vt(9);
          w(2), ye('No data matching the filter "', e.value, '"');
        }
      }
      const IY = function (n) {
          return { "display-mob-prof": n };
        },
        xY = function (n) {
          return { hide: n };
        },
        OY = function () {
          return [9];
        },
        PY = [
          { path: "home", component: qW },
          {
            path: "leaderboard",
            component: (() => {
              class n {
                constructor(e, i, r) {
                  (this.subService = e),
                    (this.lBoard = i),
                    (this.changeDetectorRefs = r),
                    (this.showPlayerProfile = !1),
                    (this.displayedColumns = [
                      "rank",
                      "name",
                      "score",
                      "kills",
                    ]),
                    (this.topPlayers = []),
                    (this.selectedPlayer = {}),
                    (this.dataSource = new WA());
                }
                ngOnInit() {
                  this.getLeaderboard(),
                    this.lBoard.leaderboardUpdateEvent.subscribe((e) => {
                      this.getLeaderboard(),
                        this.changeDetectorRefs.detectChanges();
                    });
                }
                getLeaderboard() {
                  (this.topPlayers = this.lBoard.getLeaderboard()),
                    (this.dataSource.data = this.topPlayers),
                    (this.selectedPlayer = this.topPlayers[0]);
                }
                onClose() {
                  this.showPlayerProfile = !1;
                }
                showProfile(e) {
                  (this.showPlayerProfile = !0),
                    (this.selectedPlayer = e),
                    console.log(e);
                }
                ngAfterViewInit() {
                  (this.dataSource.paginator = this.paginator),
                    (this.dataSource.sort = this.sort);
                }
                applyFilter(e) {
                  (this.dataSource.filter = e.target.value
                    .trim()
                    .toLowerCase()),
                    this.dataSource.paginator &&
                      this.dataSource.paginator.firstPage();
                }
              }
              return (
                (n.ɵfac = function (e) {
                  return new (e || n)(f(Qy), f(Xy), f(Be));
                }),
                (n.ɵcmp = ne({
                  type: n,
                  selectors: [["app-leaderboard"]],
                  viewQuery: function (e, i) {
                    if ((1 & e && (Qe(LN, 5), Qe(VN, 5)), 2 & e)) {
                      let r;
                      U((r = z())) && (i.paginator = r.first),
                        U((r = z())) && (i.sort = r.first);
                    }
                  },
                  decls: 28,
                  vars: 12,
                  consts: [
                    [1, "main-container"],
                    [1, "row", "justify-content-between"],
                    [1, "left-container", "hide", 3, "ngClass"],
                    [3, "player", "closeBtnEvent"],
                    [1, "leaderboard", 3, "ngClass"],
                    ["appearance", "standard"],
                    ["matInput", "", "placeholder", "Ex. smoothy", 3, "keyup"],
                    ["input", ""],
                    [1, "mat-elevation-z8"],
                    ["mat-table", "", "matSort", "", 3, "dataSource"],
                    ["matColumnDef", "rank"],
                    [
                      "mat-header-cell",
                      "",
                      "mat-sort-header",
                      "",
                      4,
                      "matHeaderCellDef",
                    ],
                    ["mat-cell", "", 3, "click", 4, "matCellDef"],
                    ["matColumnDef", "score"],
                    ["matColumnDef", "name"],
                    ["matColumnDef", "kills"],
                    ["mat-header-row", "", 4, "matHeaderRowDef"],
                    ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                    ["class", "mat-row", 4, "matNoDataRow"],
                    [
                      "aria-label",
                      "Select page of users",
                      3,
                      "pageSizeOptions",
                    ],
                    ["mat-header-cell", "", "mat-sort-header", ""],
                    ["mat-cell", "", 3, "click"],
                    ["mat-header-row", ""],
                    ["mat-row", ""],
                    [1, "mat-row"],
                    ["colspan", "4", 1, "mat-cell"],
                  ],
                  template: function (e, i) {
                    1 & e &&
                      (b(0, "div", 0),
                      b(1, "div", 1),
                      b(2, "div", 2),
                      b(3, "app-playerprofile", 3),
                      R("closeBtnEvent", function () {
                        return i.onClose();
                      }),
                      v(),
                      v(),
                      b(4, "div", 4),
                      b(5, "mat-form-field", 5),
                      b(6, "mat-label"),
                      I(7, "Filter"),
                      v(),
                      b(8, "input", 6, 7),
                      R("keyup", function (s) {
                        return i.applyFilter(s);
                      }),
                      v(),
                      v(),
                      b(10, "div", 8),
                      b(11, "table", 9),
                      Xn(12, 10),
                      S(13, wY, 2, 0, "th", 11),
                      S(14, CY, 2, 1, "td", 12),
                      Zn(),
                      Xn(15, 13),
                      S(16, DY, 2, 0, "th", 11),
                      S(17, EY, 2, 1, "td", 12),
                      Zn(),
                      Xn(18, 14),
                      S(19, MY, 2, 0, "th", 11),
                      S(20, SY, 2, 1, "td", 12),
                      Zn(),
                      Xn(21, 15),
                      S(22, TY, 2, 0, "th", 11),
                      S(23, AY, 2, 1, "td", 12),
                      Zn(),
                      S(24, kY, 1, 0, "tr", 16),
                      S(25, NY, 1, 0, "tr", 17),
                      S(26, RY, 3, 1, "tr", 18),
                      v(),
                      Z(27, "mat-paginator", 19),
                      v(),
                      v(),
                      v(),
                      v()),
                      2 & e &&
                        (w(2),
                        D("ngClass", Jo(7, IY, i.showPlayerProfile)),
                        w(1),
                        D("player", i.selectedPlayer),
                        w(1),
                        D("ngClass", Jo(9, xY, i.showPlayerProfile)),
                        w(7),
                        D("dataSource", i.dataSource),
                        w(13),
                        D("matHeaderRowDef", i.displayedColumns),
                        w(1),
                        D("matRowDefColumns", i.displayedColumns),
                        w(2),
                        D("pageSizeOptions", zg(11, OY)));
                  },
                  directives: [
                    Dd,
                    fY,
                    Tk,
                    nb,
                    bY,
                    Py,
                    Wh,
                    Gh,
                    zh,
                    Fy,
                    Ly,
                    GA,
                    LN,
                    qh,
                    Yh,
                    Vy,
                    By,
                  ],
                  styles: [
                    ".main-container[_ngcontent-%COMP%]{width:80%;margin:auto}.left-container[_ngcontent-%COMP%]{width:28%;margin-top:2rem}.leaderboard[_ngcontent-%COMP%]{width:70%;height:85vh}.mat-table[_ngcontent-%COMP%]{width:100%;background-color:#272b4a}.mat-form-field[_ngcontent-%COMP%]{margin-left:5em;width:60%}.mat-paginator[_ngcontent-%COMP%]{background-color:#272b4a}td[_ngcontent-%COMP%]{cursor:pointer}.mat-form-field-appearance-standard[_ngcontent-%COMP%]   .mat-form-field-flex[_ngcontent-%COMP%]{padding-top:0!important}.mat-form-field-wrapper[_ngcontent-%COMP%]{padding-bottom:0}@media only screen and (max-width: 768px){.hide[_ngcontent-%COMP%]{display:none}.display-mob-prof[_ngcontent-%COMP%]{display:block}.left-container[_ngcontent-%COMP%]{width:100%}.leaderboard[_ngcontent-%COMP%]{width:100%}.main-container[_ngcontent-%COMP%]{width:85%}}",
                  ],
                })),
                n
              );
            })(),
          },
          { path: "**", redirectTo: "home" },
        ];
      let FY = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[yS.forRoot(PY)], yS] })),
            n
          );
        })(),
        LY = (() => {
          class n {
            constructor(e) {
              this.mainservice = e;
            }
            ngOnInit() {}
            openDiscord() {
              this.mainservice.getDiscord().subscribe((e) => {
                console.log(e), console.log(e.url), window.open(e.url);
              });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Wy));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["app-nav-bar"]],
              decls: 11,
              vars: 0,
              consts: [
                ["routerLinkActive", "active", "routerLink", "home"],
                ["routerLink", "leaderboard", "routerLinkActive", "active"],
                [3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (b(0, "nav"),
                  b(1, "ul"),
                  b(2, "li", 0),
                  b(3, "a"),
                  I(4, "Dashboard"),
                  v(),
                  v(),
                  b(5, "li", 1),
                  b(6, "a"),
                  I(7, "Leaderboard"),
                  v(),
                  v(),
                  b(8, "li"),
                  b(9, "a", 2),
                  R("click", function () {
                    return i.openDiscord();
                  }),
                  I(10, "Discord"),
                  v(),
                  v(),
                  v(),
                  v());
              },
              directives: [fS, Yd],
              styles: [
                "nav[_ngcontent-%COMP%]{padding-top:4rem}ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:inline;margin-left:4rem;cursor:pointer}ul[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%]{font-size:2rem}@media only screen and (max-width: 768px){ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-right:2em;margin-left:0}ul[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%]{font-size:1.7em}}",
              ],
            })),
            n
          );
        })(),
        VY = (() => {
          class n {
            constructor(e) {
              (this.lBoard = e), (this.title = "ballistica-web");
            }
            ngOnInit() {
              this.lBoard.loadLeaderboard();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(Xy));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["app-root"]],
              decls: 3,
              vars: 0,
              consts: [[1, "app-body"]],
              template: function (e, i) {
                1 & e &&
                  (b(0, "div", 0),
                  Z(1, "app-nav-bar"),
                  Z(2, "router-outlet"),
                  v());
              },
              directives: [LY, w_],
              styles: [
                ".app-body[_ngcontent-%COMP%]{color:#fff;width:100%;height:100%}",
              ],
            })),
            n
          );
        })();
      class BY {
        call(t, e) {
          return e.subscribe(new HY(t));
        }
      }
      class HY extends e_ {
        constructor(t) {
          super(t),
            (this.hasFirst = !1),
            (this.observables = []),
            (this.subscriptions = []);
        }
        _next(t) {
          this.observables.push(t);
        }
        _complete() {
          const t = this.observables,
            e = t.length;
          if (0 === e) this.destination.complete();
          else {
            for (let i = 0; i < e && !this.hasFirst; i++) {
              const s = t_(this, t[i], void 0, i);
              this.subscriptions && this.subscriptions.push(s), this.add(s);
            }
            this.observables = null;
          }
        }
        notifyNext(t, e, i) {
          if (!this.hasFirst) {
            this.hasFirst = !0;
            for (let r = 0; r < this.subscriptions.length; r++)
              if (r !== i) {
                let s = this.subscriptions[r];
                s.unsubscribe(), this.remove(s);
              }
            this.subscriptions = null;
          }
          this.destination.next(e);
        }
      }
      function pf(...n) {
        const t = n[n.length - 1];
        return "function" == typeof t && n.pop(), Ga(n, void 0).lift(new $Y(t));
      }
      class $Y {
        constructor(t) {
          this.resultSelector = t;
        }
        call(t, e) {
          return e.subscribe(new jY(t, this.resultSelector));
        }
      }
      class jY extends He {
        constructor(t, e, i = Object.create(null)) {
          super(t),
            (this.resultSelector = e),
            (this.iterators = []),
            (this.active = 0),
            (this.resultSelector = "function" == typeof e ? e : void 0);
        }
        _next(t) {
          const e = this.iterators;
          Tr(t)
            ? e.push(new zY(t))
            : e.push(
                "function" == typeof t[Ar]
                  ? new UY(t[Ar]())
                  : new GY(this.destination, this, t)
              );
        }
        _complete() {
          const t = this.iterators,
            e = t.length;
          if ((this.unsubscribe(), 0 !== e)) {
            this.active = e;
            for (let i = 0; i < e; i++) {
              let r = t[i];
              r.stillUnsubscribed
                ? this.destination.add(r.subscribe())
                : this.active--;
            }
          } else this.destination.complete();
        }
        notifyInactive() {
          this.active--, 0 === this.active && this.destination.complete();
        }
        checkIterators() {
          const t = this.iterators,
            e = t.length,
            i = this.destination;
          for (let o = 0; o < e; o++) {
            let a = t[o];
            if ("function" == typeof a.hasValue && !a.hasValue()) return;
          }
          let r = !1;
          const s = [];
          for (let o = 0; o < e; o++) {
            let a = t[o],
              l = a.next();
            if ((a.hasCompleted() && (r = !0), l.done))
              return void i.complete();
            s.push(l.value);
          }
          this.resultSelector ? this._tryresultSelector(s) : i.next(s),
            r && i.complete();
        }
        _tryresultSelector(t) {
          let e;
          try {
            e = this.resultSelector.apply(this, t);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.destination.next(e);
        }
      }
      class UY {
        constructor(t) {
          (this.iterator = t), (this.nextResult = t.next());
        }
        hasValue() {
          return !0;
        }
        next() {
          const t = this.nextResult;
          return (this.nextResult = this.iterator.next()), t;
        }
        hasCompleted() {
          const t = this.nextResult;
          return Boolean(t && t.done);
        }
      }
      class zY {
        constructor(t) {
          (this.array = t),
            (this.index = 0),
            (this.length = 0),
            (this.length = t.length);
        }
        [Ar]() {
          return this;
        }
        next(t) {
          const e = this.index++;
          return e < this.length
            ? { value: this.array[e], done: !1 }
            : { value: null, done: !0 };
        }
        hasValue() {
          return this.array.length > this.index;
        }
        hasCompleted() {
          return this.array.length === this.index;
        }
      }
      class GY extends Qs {
        constructor(t, e, i) {
          super(t),
            (this.parent = e),
            (this.observable = i),
            (this.stillUnsubscribed = !0),
            (this.buffer = []),
            (this.isComplete = !1);
        }
        [Ar]() {
          return this;
        }
        next() {
          const t = this.buffer;
          return 0 === t.length && this.isComplete
            ? { value: null, done: !0 }
            : { value: t.shift(), done: !1 };
        }
        hasValue() {
          return this.buffer.length > 0;
        }
        hasCompleted() {
          return 0 === this.buffer.length && this.isComplete;
        }
        notifyComplete() {
          this.buffer.length > 0
            ? ((this.isComplete = !0), this.parent.notifyInactive())
            : this.destination.complete();
        }
        notifyNext(t) {
          this.buffer.push(t), this.parent.checkIterators();
        }
        subscribe() {
          return Xs(this.observable, new Js(this));
        }
      }
      function Eb(...n) {
        return (t) => {
          let e;
          return (
            "function" == typeof n[n.length - 1] && (e = n.pop()),
            t.lift(new qY(n, e))
          );
        };
      }
      class qY {
        constructor(t, e) {
          (this.observables = t), (this.project = e);
        }
        call(t, e) {
          return e.subscribe(new YY(t, this.observables, this.project));
        }
      }
      class YY extends e_ {
        constructor(t, e, i) {
          super(t),
            (this.observables = e),
            (this.project = i),
            (this.toRespond = []);
          const r = e.length;
          this.values = new Array(r);
          for (let s = 0; s < r; s++) this.toRespond.push(s);
          for (let s = 0; s < r; s++) this.add(t_(this, e[s], void 0, s));
        }
        notifyNext(t, e, i) {
          this.values[i] = e;
          const r = this.toRespond;
          if (r.length > 0) {
            const s = r.indexOf(i);
            -1 !== s && r.splice(s, 1);
          }
        }
        notifyComplete() {}
        _next(t) {
          if (0 === this.toRespond.length) {
            const e = [t, ...this.values];
            this.project ? this._tryProject(e) : this.destination.next(e);
          }
        }
        _tryProject(t) {
          let e;
          try {
            e = this.project.apply(this, t);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.destination.next(e);
        }
      }
      const xa = ["*"],
        FK = ["dialog"];
      function Zr(n) {
        return null != n;
      }
      function Pa(n) {
        return (n || document.body).getBoundingClientRect();
      }
      "undefined" != typeof Element &&
        !Element.prototype.closest &&
        (Element.prototype.matches ||
          (Element.prototype.matches =
            Element.prototype.msMatchesSelector ||
            Element.prototype.webkitMatchesSelector),
        (Element.prototype.closest = function (n) {
          let t = this;
          if (!document.documentElement.contains(t)) return null;
          do {
            if (t.matches(n)) return t;
            t = t.parentElement || t.parentNode;
          } while (null !== t && 1 === t.nodeType);
          return null;
        }));
      const GN = { animation: !0, transitionTimerDelayMs: 5 };
      let zt = (() => {
        class n {
          constructor() {
            this.animation = GN.animation;
          }
        }
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵprov = A({
            factory: function () {
              return new n();
            },
            token: n,
            providedIn: "root",
          })),
          n
        );
      })();
      const YJ = () => {},
        { transitionTimerDelayMs: KJ } = GN,
        Ic = new Map(),
        xt = (n, t, e, i) => {
          let r = i.context || {};
          const s = Ic.get(t);
          if (s)
            switch (i.runningTransition) {
              case "continue":
                return jr;
              case "stop":
                n.run(() => s.transition$.complete()),
                  (r = Object.assign(s.context, r)),
                  Ic.delete(t);
            }
          const o = e(t, i.animation, r) || YJ;
          if (
            !i.animation ||
            "none" === window.getComputedStyle(t).transitionProperty
          )
            return (
              n.run(() => o()),
              J(void 0).pipe(
                (function (n) {
                  return (t) =>
                    new Ce((e) =>
                      t.subscribe(
                        (o) => n.run(() => e.next(o)),
                        (o) => n.run(() => e.error(o)),
                        () => n.run(() => e.complete())
                      )
                    );
                })(n)
              )
            );
          const a = new O(),
            l = new O(),
            c = a.pipe(
              (function (...n) {
                return (t) => sa(t, J(...n));
              })(!0)
            );
          Ic.set(t, {
            transition$: a,
            complete: () => {
              l.next(), l.complete();
            },
            context: r,
          });
          const u = (function (n) {
            const { transitionDelay: t, transitionDuration: e } =
              window.getComputedStyle(n);
            return 1e3 * (parseFloat(t) + parseFloat(e));
          })(t);
          return (
            n.runOutsideAngular(() => {
              const d = ct(t, "transitionend").pipe(
                re(c),
                Pe(({ target: p }) => p === t)
              );
              (function (...n) {
                if (1 === n.length) {
                  if (!Tr(n[0])) return n[0];
                  n = n[0];
                }
                return Ga(n, void 0).lift(new BY());
              })(S_(u + KJ).pipe(re(c)), d, l)
                .pipe(re(c))
                .subscribe(() => {
                  Ic.delete(t),
                    n.run(() => {
                      o(), a.next(), a.complete();
                    });
                });
            }),
            a.asObservable()
          );
        };
      let JN = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        QN = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        ZN = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({})),
            n
          );
        })(),
        nR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        iR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({})),
            n
          );
        })();
      var Ae = (() => (
        (function (n) {
          (n[(n.Tab = 9)] = "Tab"),
            (n[(n.Enter = 13)] = "Enter"),
            (n[(n.Escape = 27)] = "Escape"),
            (n[(n.Space = 32)] = "Space"),
            (n[(n.PageUp = 33)] = "PageUp"),
            (n[(n.PageDown = 34)] = "PageDown"),
            (n[(n.End = 35)] = "End"),
            (n[(n.Home = 36)] = "Home"),
            (n[(n.ArrowLeft = 37)] = "ArrowLeft"),
            (n[(n.ArrowUp = 38)] = "ArrowUp"),
            (n[(n.ArrowRight = 39)] = "ArrowRight"),
            (n[(n.ArrowDown = 40)] = "ArrowDown");
        })(Ae || (Ae = {})),
        Ae
      ))();
      "undefined" != typeof navigator &&
        navigator.userAgent &&
        (/iPad|iPhone|iPod/.test(navigator.userAgent) ||
          (/Macintosh/.test(navigator.userAgent) &&
            navigator.maxTouchPoints &&
            navigator.maxTouchPoints > 2) ||
          /Android/.test(navigator.userAgent));
      const lR = [
        "a[href]",
        "button:not([disabled])",
        'input:not([disabled]):not([type="hidden"])',
        "select:not([disabled])",
        "textarea:not([disabled])",
        "[contenteditable]",
        '[tabindex]:not([tabindex="-1"])',
      ].join(", ");
      function cR(n) {
        const t = Array.from(n.querySelectorAll(lR)).filter(
          (e) => -1 !== e.tabIndex
        );
        return [t[0], t[t.length - 1]];
      }
      new (class {
        getAllStyles(t) {
          return window.getComputedStyle(t);
        }
        getStyle(t, e) {
          return this.getAllStyles(t)[e];
        }
        isStaticPositioned(t) {
          return "static" === (this.getStyle(t, "position") || "static");
        }
        offsetParent(t) {
          let e = t.offsetParent || document.documentElement;
          for (
            ;
            e && e !== document.documentElement && this.isStaticPositioned(e);

          )
            e = e.offsetParent;
          return e || document.documentElement;
        }
        position(t, e = !0) {
          let i,
            r = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };
          if ("fixed" === this.getStyle(t, "position"))
            (i = t.getBoundingClientRect()),
              (i = {
                top: i.top,
                bottom: i.bottom,
                left: i.left,
                right: i.right,
                height: i.height,
                width: i.width,
              });
          else {
            const s = this.offsetParent(t);
            (i = this.offset(t, !1)),
              s !== document.documentElement && (r = this.offset(s, !1)),
              (r.top += s.clientTop),
              (r.left += s.clientLeft);
          }
          return (
            (i.top -= r.top),
            (i.bottom -= r.top),
            (i.left -= r.left),
            (i.right -= r.left),
            e &&
              ((i.top = Math.round(i.top)),
              (i.bottom = Math.round(i.bottom)),
              (i.left = Math.round(i.left)),
              (i.right = Math.round(i.right))),
            i
          );
        }
        offset(t, e = !0) {
          const i = t.getBoundingClientRect(),
            r_top = window.pageYOffset - document.documentElement.clientTop,
            r_left = window.pageXOffset - document.documentElement.clientLeft;
          let s = {
            height: i.height || t.offsetHeight,
            width: i.width || t.offsetWidth,
            top: i.top + r_top,
            bottom: i.bottom + r_top,
            left: i.left + r_left,
            right: i.right + r_left,
          };
          return (
            e &&
              ((s.height = Math.round(s.height)),
              (s.width = Math.round(s.width)),
              (s.top = Math.round(s.top)),
              (s.bottom = Math.round(s.bottom)),
              (s.left = Math.round(s.left)),
              (s.right = Math.round(s.right))),
            s
          );
        }
        positionElements(t, e, i, r) {
          const [s = "top", o = "center"] = i.split("-"),
            a = r ? this.offset(t, !1) : this.position(t, !1),
            l = this.getAllStyles(e),
            c = parseFloat(l.marginTop),
            u = parseFloat(l.marginBottom),
            d = parseFloat(l.marginLeft),
            h = parseFloat(l.marginRight);
          let p = 0,
            g = 0;
          switch (s) {
            case "top":
              p = a.top - (e.offsetHeight + c + u);
              break;
            case "bottom":
              p = a.top + a.height;
              break;
            case "left":
              g = a.left - (e.offsetWidth + d + h);
              break;
            case "right":
              g = a.left + a.width;
          }
          switch (o) {
            case "top":
              p = a.top;
              break;
            case "bottom":
              p = a.top + a.height - e.offsetHeight;
              break;
            case "left":
              g = a.left;
              break;
            case "right":
              g = a.left + a.width - e.offsetWidth;
              break;
            case "center":
              "top" === s || "bottom" === s
                ? (g = a.left + a.width / 2 - e.offsetWidth / 2)
                : (p = a.top + a.height / 2 - e.offsetHeight / 2);
          }
          e.style.transform = `translate(${Math.round(g)}px, ${Math.round(
            p
          )}px)`;
          const _ = e.getBoundingClientRect(),
            y = document.documentElement,
            E = window.innerHeight || y.clientHeight,
            C = window.innerWidth || y.clientWidth;
          return _.left >= 0 && _.top >= 0 && _.right <= C && _.bottom <= E;
        }
      })(),
        new Date(1882, 10, 12),
        new Date(2174, 10, 25);
      let bR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et, dq]] })),
            n
          );
        })(),
        DR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({})),
            n
          );
        })(),
        ER = (() => {
          class n {
            constructor(e) {
              (this._ngbConfig = e), (this.backdrop = !0), (this.keyboard = !0);
            }
            get animation() {
              return void 0 === this._animation
                ? this._ngbConfig.animation
                : this._animation;
            }
            set animation(e) {
              this._animation = e;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(zt));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(zt));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })();
      class Ws {
        constructor(t, e, i) {
          (this.nodes = t), (this.viewRef = e), (this.componentRef = i);
        }
      }
      const WQ = () => {};
      let MR = (() => {
          class n {
            constructor(e) {
              this._document = e;
            }
            compensate() {
              const e = this._getWidth();
              return this._isPresent(e) ? this._adjustBody(e) : WQ;
            }
            _adjustBody(e) {
              const i = this._document.body,
                r = i.style.paddingRight,
                s = parseFloat(window.getComputedStyle(i)["padding-right"]);
              return (
                (i.style["padding-right"] = `${s + e}px`),
                () => (i.style["padding-right"] = r)
              );
            }
            _isPresent(e) {
              const i = this._document.body.getBoundingClientRect();
              return window.innerWidth - (i.left + i.right) >= e - 0.1 * e;
            }
            _getWidth() {
              const e = this._document.createElement("div");
              e.className = "modal-scrollbar-measure";
              const i = this._document.body;
              i.appendChild(e);
              const r = e.getBoundingClientRect().width - e.clientWidth;
              return i.removeChild(e), r;
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(j));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(j));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        qQ = (() => {
          class n {
            constructor(e, i) {
              (this._el = e), (this._zone = i);
            }
            ngOnInit() {
              this._zone.onStable
                .asObservable()
                .pipe(Oe(1))
                .subscribe(() => {
                  xt(
                    this._zone,
                    this._el.nativeElement,
                    (e, i) => {
                      i && Pa(e), e.classList.add("show");
                    },
                    { animation: this.animation, runningTransition: "continue" }
                  );
                });
            }
            hide() {
              return xt(
                this._zone,
                this._el.nativeElement,
                ({ classList: e }) => e.remove("show"),
                { animation: this.animation, runningTransition: "stop" }
              );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(L), f(H));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["ngb-modal-backdrop"]],
              hostAttrs: [2, "z-index", "1050"],
              hostVars: 6,
              hostBindings: function (e, i) {
                2 & e &&
                  (vi(
                    "modal-backdrop" +
                      (i.backdropClass ? " " + i.backdropClass : "")
                  ),
                  q("show", !i.animation)("fade", i.animation));
              },
              inputs: {
                animation: "animation",
                backdropClass: "backdropClass",
              },
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              encapsulation: 2,
            })),
            n
          );
        })();
      class SR {
        close(t) {}
        dismiss(t) {}
      }
      class YQ {
        constructor(t, e, i, r) {
          (this._windowCmptRef = t),
            (this._contentRef = e),
            (this._backdropCmptRef = i),
            (this._beforeDismiss = r),
            (this._closed = new O()),
            (this._dismissed = new O()),
            (this._hidden = new O()),
            t.instance.dismissEvent.subscribe((s) => {
              this.dismiss(s);
            }),
            (this.result = new Promise((s, o) => {
              (this._resolve = s), (this._reject = o);
            })),
            this.result.then(null, () => {});
        }
        get componentInstance() {
          if (this._contentRef && this._contentRef.componentRef)
            return this._contentRef.componentRef.instance;
        }
        get closed() {
          return this._closed.asObservable().pipe(re(this._hidden));
        }
        get dismissed() {
          return this._dismissed.asObservable().pipe(re(this._hidden));
        }
        get hidden() {
          return this._hidden.asObservable();
        }
        get shown() {
          return this._windowCmptRef.instance.shown.asObservable();
        }
        close(t) {
          this._windowCmptRef &&
            (this._closed.next(t),
            this._resolve(t),
            this._removeModalElements());
        }
        _dismiss(t) {
          this._dismissed.next(t), this._reject(t), this._removeModalElements();
        }
        dismiss(t) {
          if (this._windowCmptRef)
            if (this._beforeDismiss) {
              const e = this._beforeDismiss();
              e && e.then
                ? e.then(
                    (i) => {
                      !1 !== i && this._dismiss(t);
                    },
                    () => {}
                  )
                : !1 !== e && this._dismiss(t);
            } else this._dismiss(t);
        }
        _removeModalElements() {
          const t = this._windowCmptRef.instance.hide(),
            e = this._backdropCmptRef
              ? this._backdropCmptRef.instance.hide()
              : J(void 0);
          t.subscribe(() => {
            const { nativeElement: i } = this._windowCmptRef.location;
            i.parentNode.removeChild(i),
              this._windowCmptRef.destroy(),
              this._contentRef &&
                this._contentRef.viewRef &&
                this._contentRef.viewRef.destroy(),
              (this._windowCmptRef = null),
              (this._contentRef = null);
          }),
            e.subscribe(() => {
              if (this._backdropCmptRef) {
                const { nativeElement: i } = this._backdropCmptRef.location;
                i.parentNode.removeChild(i),
                  this._backdropCmptRef.destroy(),
                  (this._backdropCmptRef = null);
              }
            }),
            pf(t, e).subscribe(() => {
              this._hidden.next(), this._hidden.complete();
            });
        }
      }
      var Vc = (() => (
        (function (n) {
          (n[(n.BACKDROP_CLICK = 0)] = "BACKDROP_CLICK"),
            (n[(n.ESC = 1)] = "ESC");
        })(Vc || (Vc = {})),
        Vc
      ))();
      let KQ = (() => {
          class n {
            constructor(e, i, r) {
              (this._document = e),
                (this._elRef = i),
                (this._zone = r),
                (this._closed$ = new O()),
                (this._elWithFocus = null),
                (this.backdrop = !0),
                (this.keyboard = !0),
                (this.dismissEvent = new F()),
                (this.shown = new O()),
                (this.hidden = new O());
            }
            dismiss(e) {
              this.dismissEvent.emit(e);
            }
            ngOnInit() {
              (this._elWithFocus = this._document.activeElement),
                this._zone.onStable
                  .asObservable()
                  .pipe(Oe(1))
                  .subscribe(() => {
                    this._show();
                  });
            }
            ngOnDestroy() {
              this._disableEventHandling();
            }
            hide() {
              const { nativeElement: e } = this._elRef,
                i = { animation: this.animation, runningTransition: "stop" },
                o = pf(
                  xt(this._zone, e, () => e.classList.remove("show"), i),
                  xt(this._zone, this._dialogEl.nativeElement, () => {}, i)
                );
              return (
                o.subscribe(() => {
                  this.hidden.next(), this.hidden.complete();
                }),
                this._disableEventHandling(),
                this._restoreFocus(),
                o
              );
            }
            _show() {
              const e = {
                animation: this.animation,
                runningTransition: "continue",
              };
              pf(
                xt(
                  this._zone,
                  this._elRef.nativeElement,
                  (s, o) => {
                    o && Pa(s), s.classList.add("show");
                  },
                  e
                ),
                xt(this._zone, this._dialogEl.nativeElement, () => {}, e)
              ).subscribe(() => {
                this.shown.next(), this.shown.complete();
              }),
                this._enableEventHandling(),
                this._setFocus();
            }
            _enableEventHandling() {
              const { nativeElement: e } = this._elRef;
              this._zone.runOutsideAngular(() => {
                ct(e, "keydown")
                  .pipe(
                    re(this._closed$),
                    Pe((r) => r.which === Ae.Escape)
                  )
                  .subscribe((r) => {
                    this.keyboard
                      ? requestAnimationFrame(() => {
                          r.defaultPrevented ||
                            this._zone.run(() => this.dismiss(Vc.ESC));
                        })
                      : "static" === this.backdrop && this._bumpBackdrop();
                  });
                let i = !1;
                ct(this._dialogEl.nativeElement, "mousedown")
                  .pipe(
                    re(this._closed$),
                    It(() => (i = !1)),
                    jt(() => ct(e, "mouseup").pipe(re(this._closed$), Oe(1))),
                    Pe(({ target: r }) => e === r)
                  )
                  .subscribe(() => {
                    i = !0;
                  }),
                  ct(e, "click")
                    .pipe(re(this._closed$))
                    .subscribe(({ target: r }) => {
                      e === r &&
                        ("static" === this.backdrop
                          ? this._bumpBackdrop()
                          : !0 === this.backdrop &&
                            !i &&
                            this._zone.run(() =>
                              this.dismiss(Vc.BACKDROP_CLICK)
                            )),
                        (i = !1);
                    });
              });
            }
            _disableEventHandling() {
              this._closed$.next();
            }
            _setFocus() {
              const { nativeElement: e } = this._elRef;
              if (!e.contains(document.activeElement)) {
                const i = e.querySelector("[ngbAutofocus]"),
                  r = cR(e)[0];
                (i || r || e).focus();
              }
            }
            _restoreFocus() {
              const e = this._document.body,
                i = this._elWithFocus;
              let r;
              (r = i && i.focus && e.contains(i) ? i : e),
                this._zone.runOutsideAngular(() => {
                  setTimeout(() => r.focus()), (this._elWithFocus = null);
                });
            }
            _bumpBackdrop() {
              "static" === this.backdrop &&
                xt(
                  this._zone,
                  this._elRef.nativeElement,
                  ({ classList: e }) => (
                    e.add("modal-static"), () => e.remove("modal-static")
                  ),
                  { animation: this.animation, runningTransition: "continue" }
                );
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(f(j), f(L), f(H));
            }),
            (n.ɵcmp = ne({
              type: n,
              selectors: [["ngb-modal-window"]],
              viewQuery: function (e, i) {
                if ((1 & e && Qe(FK, 7), 2 & e)) {
                  let r;
                  U((r = z())) && (i._dialogEl = r.first);
                }
              },
              hostAttrs: ["role", "dialog", "tabindex", "-1"],
              hostVars: 7,
              hostBindings: function (e, i) {
                2 & e &&
                  (X("aria-modal", !0)("aria-labelledby", i.ariaLabelledBy)(
                    "aria-describedby",
                    i.ariaDescribedBy
                  ),
                  vi(
                    "modal d-block" + (i.windowClass ? " " + i.windowClass : "")
                  ),
                  q("fade", i.animation));
              },
              inputs: {
                backdrop: "backdrop",
                keyboard: "keyboard",
                animation: "animation",
                ariaLabelledBy: "ariaLabelledBy",
                ariaDescribedBy: "ariaDescribedBy",
                centered: "centered",
                scrollable: "scrollable",
                size: "size",
                windowClass: "windowClass",
                modalDialogClass: "modalDialogClass",
              },
              outputs: { dismissEvent: "dismiss" },
              ngContentSelectors: xa,
              decls: 4,
              vars: 2,
              consts: [
                ["role", "document"],
                ["dialog", ""],
                [1, "modal-content"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Wt(), b(0, "div", 0, 1), b(2, "div", 2), Ye(3), v(), v()),
                  2 & e &&
                    vi(
                      "modal-dialog" +
                        (i.size ? " modal-" + i.size : "") +
                        (i.centered ? " modal-dialog-centered" : "") +
                        (i.scrollable ? " modal-dialog-scrollable" : "") +
                        (i.modalDialogClass ? " " + i.modalDialogClass : "")
                    );
              },
              styles: [
                "ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}",
              ],
              encapsulation: 2,
            })),
            n
          );
        })(),
        TR = (() => {
          class n {
            constructor(e, i, r, s, o, a) {
              (this._applicationRef = e),
                (this._injector = i),
                (this._document = r),
                (this._scrollBar = s),
                (this._rendererFactory = o),
                (this._ngZone = a),
                (this._activeWindowCmptHasChanged = new O()),
                (this._ariaHiddenValues = new Map()),
                (this._backdropAttributes = ["animation", "backdropClass"]),
                (this._modalRefs = []),
                (this._windowAttributes = [
                  "animation",
                  "ariaLabelledBy",
                  "ariaDescribedBy",
                  "backdrop",
                  "centered",
                  "keyboard",
                  "scrollable",
                  "size",
                  "windowClass",
                  "modalDialogClass",
                ]),
                (this._windowCmpts = []),
                (this._activeInstances = new F()),
                this._activeWindowCmptHasChanged.subscribe(() => {
                  if (this._windowCmpts.length) {
                    const l = this._windowCmpts[this._windowCmpts.length - 1];
                    ((n, t, e, i = !1) => {
                      n.runOutsideAngular(() => {
                        const r = ct(t, "focusin").pipe(
                          re(e),
                          Q((s) => s.target)
                        );
                        ct(t, "keydown")
                          .pipe(
                            re(e),
                            Pe((s) => s.which === Ae.Tab),
                            Eb(r)
                          )
                          .subscribe(([s, o]) => {
                            const [a, l] = cR(t);
                            (o === a || o === t) &&
                              s.shiftKey &&
                              (l.focus(), s.preventDefault()),
                              o === l &&
                                !s.shiftKey &&
                                (a.focus(), s.preventDefault());
                          }),
                          i &&
                            ct(t, "click")
                              .pipe(
                                re(e),
                                Eb(r),
                                Q((s) => s[1])
                              )
                              .subscribe((s) => s.focus());
                      });
                    })(
                      this._ngZone,
                      l.location.nativeElement,
                      this._activeWindowCmptHasChanged
                    ),
                      this._revertAriaHidden(),
                      this._setAriaHidden(l.location.nativeElement);
                  }
                });
            }
            open(e, i, r, s) {
              const o =
                  s.container instanceof HTMLElement
                    ? s.container
                    : Zr(s.container)
                    ? this._document.querySelector(s.container)
                    : this._document.body,
                a = this._rendererFactory.createRenderer(null, null),
                l = this._scrollBar.compensate(),
                c = () => {
                  this._modalRefs.length ||
                    (a.removeClass(this._document.body, "modal-open"),
                    this._revertAriaHidden());
                };
              if (!o)
                throw new Error(
                  `The specified modal container "${
                    s.container || "body"
                  }" was not found in the DOM.`
                );
              const u = new SR(),
                d = this._getContentRef(e, s.injector || i, r, u, s);
              let h = !1 !== s.backdrop ? this._attachBackdrop(e, o) : void 0,
                p = this._attachWindowComponent(e, o, d),
                g = new YQ(p, d, h, s.beforeDismiss);
              return (
                this._registerModalRef(g),
                this._registerWindowCmpt(p),
                g.result.then(l, l),
                g.result.then(c, c),
                (u.close = (_) => {
                  g.close(_);
                }),
                (u.dismiss = (_) => {
                  g.dismiss(_);
                }),
                this._applyWindowOptions(p.instance, s),
                1 === this._modalRefs.length &&
                  a.addClass(this._document.body, "modal-open"),
                h &&
                  h.instance &&
                  (this._applyBackdropOptions(h.instance, s),
                  h.changeDetectorRef.detectChanges()),
                p.changeDetectorRef.detectChanges(),
                g
              );
            }
            get activeInstances() {
              return this._activeInstances;
            }
            dismissAll(e) {
              this._modalRefs.forEach((i) => i.dismiss(e));
            }
            hasOpenModals() {
              return this._modalRefs.length > 0;
            }
            _attachBackdrop(e, i) {
              let s = e.resolveComponentFactory(qQ).create(this._injector);
              return (
                this._applicationRef.attachView(s.hostView),
                i.appendChild(s.location.nativeElement),
                s
              );
            }
            _attachWindowComponent(e, i, r) {
              let o = e
                .resolveComponentFactory(KQ)
                .create(this._injector, r.nodes);
              return (
                this._applicationRef.attachView(o.hostView),
                i.appendChild(o.location.nativeElement),
                o
              );
            }
            _applyWindowOptions(e, i) {
              this._windowAttributes.forEach((r) => {
                Zr(i[r]) && (e[r] = i[r]);
              });
            }
            _applyBackdropOptions(e, i) {
              this._backdropAttributes.forEach((r) => {
                Zr(i[r]) && (e[r] = i[r]);
              });
            }
            _getContentRef(e, i, r, s, o) {
              return r
                ? r instanceof Se
                  ? this._createFromTemplateRef(r, s)
                  : (function (n) {
                      return "string" == typeof n;
                    })(r)
                  ? this._createFromString(r)
                  : this._createFromComponent(e, i, r, s, o)
                : new Ws([]);
            }
            _createFromTemplateRef(e, i) {
              const s = e.createEmbeddedView({
                $implicit: i,
                close(o) {
                  i.close(o);
                },
                dismiss(o) {
                  i.dismiss(o);
                },
              });
              return (
                this._applicationRef.attachView(s), new Ws([s.rootNodes], s)
              );
            }
            _createFromString(e) {
              const i = this._document.createTextNode(`${e}`);
              return new Ws([[i]]);
            }
            _createFromComponent(e, i, r, s, o) {
              const a = e.resolveComponentFactory(r),
                l = ae.create({
                  providers: [{ provide: SR, useValue: s }],
                  parent: i,
                }),
                c = a.create(l),
                u = c.location.nativeElement;
              return (
                o.scrollable && u.classList.add("component-host-scrollable"),
                this._applicationRef.attachView(c.hostView),
                new Ws([[u]], c.hostView, c)
              );
            }
            _setAriaHidden(e) {
              const i = e.parentElement;
              i &&
                e !== this._document.body &&
                (Array.from(i.children).forEach((r) => {
                  r !== e &&
                    "SCRIPT" !== r.nodeName &&
                    (this._ariaHiddenValues.set(
                      r,
                      r.getAttribute("aria-hidden")
                    ),
                    r.setAttribute("aria-hidden", "true"));
                }),
                this._setAriaHidden(i));
            }
            _revertAriaHidden() {
              this._ariaHiddenValues.forEach((e, i) => {
                e
                  ? i.setAttribute("aria-hidden", e)
                  : i.removeAttribute("aria-hidden");
              }),
                this._ariaHiddenValues.clear();
            }
            _registerModalRef(e) {
              const i = () => {
                const r = this._modalRefs.indexOf(e);
                r > -1 &&
                  (this._modalRefs.splice(r, 1),
                  this._activeInstances.emit(this._modalRefs));
              };
              this._modalRefs.push(e),
                this._activeInstances.emit(this._modalRefs),
                e.result.then(i, i);
            }
            _registerWindowCmpt(e) {
              this._windowCmpts.push(e),
                this._activeWindowCmptHasChanged.next(),
                e.onDestroy(() => {
                  const i = this._windowCmpts.indexOf(e);
                  i > -1 &&
                    (this._windowCmpts.splice(i, 1),
                    this._activeWindowCmptHasChanged.next());
                });
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(Vn), m(ae), m(j), m(MR), m(hr), m(H));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(Vn), m(ur), m(j), m(MR), m(hr), m(H));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        JQ = (() => {
          class n {
            constructor(e, i, r, s) {
              (this._moduleCFR = e),
                (this._injector = i),
                (this._modalStack = r),
                (this._config = s);
            }
            open(e, i = {}) {
              const r = Object.assign(
                Object.assign(Object.assign({}, this._config), {
                  animation: this._config.animation,
                }),
                i
              );
              return this._modalStack.open(
                this._moduleCFR,
                this._injector,
                e,
                r
              );
            }
            get activeInstances() {
              return this._modalStack.activeInstances;
            }
            dismissAll(e) {
              this._modalStack.dismissAll(e);
            }
            hasOpenModals() {
              return this._modalStack.hasOpenModals();
            }
          }
          return (
            (n.ɵfac = function (e) {
              return new (e || n)(m(on), m(ae), m(TR), m(ER));
            }),
            (n.ɵprov = A({
              factory: function () {
                return new n(m(on), m(ur), m(TR), m(ER));
              },
              token: n,
              providedIn: "root",
            })),
            n
          );
        })(),
        AR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ providers: [JQ] })),
            n
          );
        })(),
        IR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        HR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        UR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        zR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        GR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        KR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        JR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({ imports: [[Et]] })),
            n
          );
        })(),
        QR = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({})),
            n
          );
        })();
      new P("live announcer delay", {
        providedIn: "root",
        factory: function () {
          return 100;
        },
      });
      let eI = (() => {
        class n {}
        return (
          (n.ɵfac = function (e) {
            return new (e || n)();
          }),
          (n.ɵmod = K({ type: n })),
          (n.ɵinj = W({ imports: [[Et]] })),
          n
        );
      })();
      const xX = [
        JN,
        QN,
        ZN,
        nR,
        iR,
        bR,
        DR,
        AR,
        IR,
        HR,
        UR,
        zR,
        GR,
        KR,
        JR,
        QR,
        eI,
      ];
      let OX = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n })),
            (n.ɵinj = W({
              imports: [
                xX,
                JN,
                QN,
                ZN,
                nR,
                iR,
                bR,
                DR,
                AR,
                IR,
                HR,
                UR,
                zR,
                GR,
                KR,
                JR,
                QR,
                eI,
              ],
            })),
            n
          );
        })(),
        PX = (() => {
          class n {}
          return (
            (n.ɵfac = function (e) {
              return new (e || n)();
            }),
            (n.ɵmod = K({ type: n, bootstrap: [VY] })),
            (n.ɵinj = W({
              providers: [],
              imports: [
                [
                  Xm,
                  FY,
                  hW,
                  SG,
                  OX,
                  Y7,
                  ef,
                  tY,
                  vY,
                  D7,
                  yk,
                  wW.register("ngsw-worker.js", {
                    enabled: !0,
                    registrationStrategy: "registerWhenStable:30000",
                  }),
                ],
              ],
            })),
            n
          );
        })();
      (function () {
        if (JD)
          throw new Error("Cannot enable prod mode after platform setup.");
        KD = !1;
      })(),
        p8()
          .bootstrapModule(PX)
          .then(() => {
            "serviceWorker" in navigator &&
              navigator.serviceWorker
                .register("/ngsw-worker.js", { updateViaCache: "none" })
                .then((n) => {
                  n.update();
                });
          })
          .catch((n) => console.log(n));
    },
  },
  ($a) => {
    $a(($a.s = 690));
  },
]);
